
AVRASM ver. 2.1.30  C:\Users\Braa\Google Drive\Smart Work\Smart Home\WiFi\Program\Atmega328 v2\List\EasyGate.asm Sat Mar 10 02:03:23 2018

C:\Users\Braa\Google Drive\Smart Work\Smart Home\WiFi\Program\Atmega328 v2\List\EasyGate.asm(1074): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega328P
                 ;Program type             : Application
                 ;Clock frequency          : 11.059200 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : long, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2303
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _interval=R4
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01a7 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 01df 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _0x36:
000034 0000
000035 0000
000036 0000
000037 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000038 0000
000039 0000
00003a 0000
00003b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00003c 0000
00003d 0000
00003e 0000
00003f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000040 0000
000041 0000
000042 0000
000043 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000044 0000
000045 0000
000046 0000
000047 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000048 0000
000049 0000
00004a 0000
00004b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004c 0000
00004d 0000
00004e 0000
00004f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000050 0000
000051 0000
000052 0000
000053 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000054 0000
000055 0000
000056 0000
000057 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000058 0000
000059 0000
00005a 0000
00005b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005c 0000
00005d 0000
00005e 0000
00005f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000060 0000
000061 0000
000062 0000
000063 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x46:
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000      	.DB  0x0,0x0
                 _0x51:
00007f 0000
000080 0000
000081 0000
000082 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000083 0000
000084 0000
000085 0000
000086 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000087 0000
000088 0000
000089 0000
00008a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008b 0000
00008c 0000
00008d 0000
00008e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008f 0000
000090 0000
000091 0000
000092 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000093 0000
000094 0000
000095 0000
000096 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000097 0000      	.DB  0x0,0x0
                 _0x54:
000098 07d0      	.DB  0xD0,0x7
                 _0x0:
000099 492b
00009a 4450
00009b 2500
00009c 0063      	.DB  0x2B,0x49,0x50,0x44,0x0,0x25,0x63,0x0
00009d 4246
00009e 3a20
00009f 2075
0000a0 4b4f      	.DB  0x46,0x42,0x20,0x3A,0x75,0x20,0x4F,0x4B
0000a1 4600
0000a2 2042
0000a3 643a
0000a4 4f20      	.DB  0x0,0x46,0x42,0x20,0x3A,0x64,0x20,0x4F
0000a5 004b
0000a6 4246
0000a7 3a20
0000a8 2073      	.DB  0x4B,0x0,0x46,0x42,0x20,0x3A,0x73,0x20
0000a9 4b4f
0000aa 4100
0000ab 2b54
0000ac 4943      	.DB  0x4F,0x4B,0x0,0x41,0x54,0x2B,0x43,0x49
0000ad 5350
0000ae 4154
0000af 5554
0000b0 0d53      	.DB  0x50,0x53,0x54,0x41,0x54,0x55,0x53,0xD
0000b1 000a
0000b2 353a
0000b3 4100
0000b4 2b54      	.DB  0xA,0x0,0x3A,0x35,0x0,0x41,0x54,0x2B
0000b5 5352
0000b6 0d54
0000b7 000a
0000b8 323a      	.DB  0x52,0x53,0x54,0xD,0xA,0x0,0x3A,0x32
0000b9 4100
0000ba 2b54
0000bb 4943
0000bc 5346      	.DB  0x0,0x41,0x54,0x2B,0x43,0x49,0x46,0x53
0000bd 0d52
0000be 000a
0000bf 5441
0000c0 432b      	.DB  0x52,0xD,0xA,0x0,0x41,0x54,0x2B,0x43
0000c1 4a57
0000c2 5041
0000c3 0d3f
0000c4 000a      	.DB  0x57,0x4A,0x41,0x50,0x3F,0xD,0xA,0x0
0000c5 5441
0000c6 432b
0000c7 5049
0000c8 554d      	.DB  0x41,0x54,0x2B,0x43,0x49,0x50,0x4D,0x55
0000c9 3d58
0000ca 0d31
0000cb 000a
0000cc 5441      	.DB  0x58,0x3D,0x31,0xD,0xA,0x0,0x41,0x54
0000cd 432b
0000ce 5049
0000cf 4553
0000d0 5652      	.DB  0x2B,0x43,0x49,0x50,0x53,0x45,0x52,0x56
0000d1 5245
0000d2 313d
0000d3 312c
0000d4 3030      	.DB  0x45,0x52,0x3D,0x31,0x2C,0x31,0x30,0x30
0000d5 0d31
0000d6 000a
0000d7 4943
0000d8 5350      	.DB  0x31,0xD,0xA,0x0,0x43,0x49,0x50,0x53
0000d9 4e45
0000da 0044
0000db 003e
0000dc 6f6e      	.DB  0x45,0x4E,0x44,0x0,0x3E,0x0,0x6E,0x6F
0000dd 4100
0000de 2b54
0000df 4943
0000e0 5350      	.DB  0x0,0x41,0x54,0x2B,0x43,0x49,0x50,0x53
0000e1 4e45
0000e2 3d44
0000e3 7325
0000e4 252c      	.DB  0x45,0x4E,0x44,0x3D,0x25,0x73,0x2C,0x25
0000e5 0d64
0000e6 000a
0000e7 5441
0000e8 432b      	.DB  0x64,0xD,0xA,0x0,0x41,0x54,0x2B,0x43
0000e9 5049
0000ea 4c43
0000eb 534f
0000ec 3d45      	.DB  0x49,0x50,0x43,0x4C,0x4F,0x53,0x45,0x3D
0000ed 7325
0000ee 0a0d
0000ef 4100
0000f0 4554      	.DB  0x25,0x73,0xD,0xA,0x0,0x41,0x54,0x45
0000f1 0d30
0000f2 000a
0000f3 5441
0000f4 432b      	.DB  0x30,0xD,0xA,0x0,0x41,0x54,0x2B,0x43
0000f5 4d57
0000f6 444f
0000f7 3d45
0000f8 0d31      	.DB  0x57,0x4D,0x4F,0x44,0x45,0x3D,0x31,0xD
0000f9 000a
0000fa 5441
0000fb 432b
0000fc 4157      	.DB  0xA,0x0,0x41,0x54,0x2B,0x43,0x57,0x41
0000fd 5455
0000fe 434f
0000ff 4e4f
000100 3d4e      	.DB  0x55,0x54,0x4F,0x43,0x4F,0x4E,0x4E,0x3D
000101 0d31
000102 000a
000103 5441
000104 432b      	.DB  0x31,0xD,0xA,0x0,0x41,0x54,0x2B,0x43
000105 4a57
000106 5041
000107 445f
000108 4645      	.DB  0x57,0x4A,0x41,0x50,0x5F,0x44,0x45,0x46
000109 223d
00010a 6d73
00010b 7261
00010c 6c74      	.DB  0x3D,0x22,0x73,0x6D,0x61,0x72,0x74,0x6C
00010d 6669
00010e 2265
00010f 222c
000110 726d      	.DB  0x69,0x66,0x65,0x22,0x2C,0x22,0x6D,0x72
000111 3162
000112 3133
000113 3131
000114 2233      	.DB  0x62,0x31,0x33,0x31,0x31,0x31,0x33,0x22
000115 0a0d
000116 4100
000117 2b54
000118 4943      	.DB  0xD,0xA,0x0,0x41,0x54,0x2B,0x43,0x49
000119 5350
00011a 4154
00011b 445f
00011c 4645      	.DB  0x50,0x53,0x54,0x41,0x5F,0x44,0x45,0x46
00011d 223d
00011e 3931
00011f 2e32
000120 3631      	.DB  0x3D,0x22,0x31,0x39,0x32,0x2E,0x31,0x36
000121 2e38
000122 2e31
000123 3535
000124 2c22      	.DB  0x38,0x2E,0x31,0x2E,0x35,0x35,0x22,0x2C
000125 3122
000126 3239
000127 312e
000128 3836      	.DB  0x22,0x31,0x39,0x32,0x2E,0x31,0x36,0x38
000129 312e
00012a 312e
00012b 2c22
00012c 3222      	.DB  0x2E,0x31,0x2E,0x31,0x22,0x2C,0x22,0x32
00012d 3535
00012e 322e
00012f 3535
000130 322e      	.DB  0x35,0x35,0x2E,0x32,0x35,0x35,0x2E,0x32
000131 3535
000132 302e
000133 0d22
000134 000a      	.DB  0x35,0x35,0x2E,0x30,0x22,0xD,0xA,0x0
000135 5441
000136 432b
000137 5049
000138 5453      	.DB  0x41,0x54,0x2B,0x43,0x49,0x50,0x53,0x54
000139 3d4f
00013a 3031
00013b 0a0d
C:\Users\Braa\Google Drive\Smart Work\Smart Home\WiFi\Program\Atmega328 v2\List\EasyGate.asm(1186): warning: .cseg .db misalignment - padding zero byte
00013c 0000      	.DB  0x4F,0x3D,0x31,0x30,0xD,0xA,0x0
                 
                 __GLOBAL_INI_TBL:
00013d 0005      	.DW  0x05
00013e 0300      	.DW  _0x13
00013f 0132      	.DW  _0x0*2
                 
000140 0005      	.DW  0x05
000141 0305      	.DW  _0x13+5
000142 0132      	.DW  _0x0*2
                 
000143 0005      	.DW  0x05
000144 030a      	.DW  _0x13+10
000145 0132      	.DW  _0x0*2
                 
000146 0009      	.DW  0x09
000147 030f      	.DW  _0x13+15
000148 013a      	.DW  _0x0*2+8
                 
000149 0005      	.DW  0x05
00014a 0318      	.DW  _0x13+24
00014b 0132      	.DW  _0x0*2
                 
00014c 0009      	.DW  0x09
00014d 031d      	.DW  _0x13+29
00014e 0143      	.DW  _0x0*2+17
                 
00014f 0005      	.DW  0x05
000150 0326      	.DW  _0x13+38
000151 0132      	.DW  _0x0*2
                 
000152 0009      	.DW  0x09
000153 032b      	.DW  _0x13+43
000154 014c      	.DW  _0x0*2+26
                 
000155 000f      	.DW  0x0F
000156 0334      	.DW  _0x13+52
000157 0155      	.DW  _0x0*2+35
                 
000158 0003      	.DW  0x03
000159 0343      	.DW  _0x13+67
00015a 0164      	.DW  _0x0*2+50
                 
00015b 0009      	.DW  0x09
00015c 0346      	.DW  _0x13+70
00015d 0167      	.DW  _0x0*2+53
                 
00015e 000f      	.DW  0x0F
00015f 034f      	.DW  _0x13+79
000160 0155      	.DW  _0x0*2+35
                 
000161 0003      	.DW  0x03
000162 035e      	.DW  _0x13+94
000163 0164      	.DW  _0x0*2+50
                 
000164 0003      	.DW  0x03
000165 0361      	.DW  _0x13+97
000166 0170      	.DW  _0x0*2+62
                 
000167 000b      	.DW  0x0B
000168 0364      	.DW  _0x13+100
000169 0173      	.DW  _0x0*2+65
                 
00016a 000c      	.DW  0x0C
00016b 036f      	.DW  _0x13+111
00016c 017e      	.DW  _0x0*2+76
                 
00016d 000e      	.DW  0x0E
00016e 037b      	.DW  _0x13+123
00016f 018a      	.DW  _0x0*2+88
                 
000170 0016      	.DW  0x16
000171 0389      	.DW  _0x13+137
000172 0198      	.DW  _0x0*2+102
                 
000173 0008      	.DW  0x08
000174 039f      	.DW  _0x3F
000175 01ae      	.DW  _0x0*2+124
                 
000176 0002      	.DW  0x02
000177 03a7      	.DW  _0x3F+8
000178 01b6      	.DW  _0x0*2+132
                 
000179 0003      	.DW  0x03
00017a 03a9      	.DW  _0x3F+10
00017b 0140      	.DW  _0x0*2+14
                 
00017c 0003      	.DW  0x03
00017d 03ac      	.DW  _0x3F+13
00017e 01b8      	.DW  _0x0*2+134
                 
00017f 0003      	.DW  0x03
000180 03af      	.DW  _0x4F
000181 0140      	.DW  _0x0*2+14
                 
000182 0007      	.DW  0x07
000183 03b2      	.DW  _0x52
000184 01df      	.DW  _0x0*2+173
                 
000185 000e      	.DW  0x0E
000186 03b9      	.DW  _0x52+7
000187 01e6      	.DW  _0x0*2+180
                 
000188 0012      	.DW  0x12
000189 03c7      	.DW  _0x52+21
00018a 01f4      	.DW  _0x0*2+194
                 
00018b 0027      	.DW  0x27
00018c 03d9      	.DW  _0x52+39
00018d 0206      	.DW  _0x0*2+212
                 
00018e 003d      	.DW  0x3D
00018f 0400      	.DW  _0x52+78
000190 022d      	.DW  _0x0*2+251
                 
000191 000e      	.DW  0x0E
000192 043d      	.DW  _0x52+139
000193 018a      	.DW  _0x0*2+88
                 
000194 0016      	.DW  0x16
000195 044b      	.DW  _0x52+153
000196 0198      	.DW  _0x0*2+102
                 
000197 000f      	.DW  0x0F
000198 0461      	.DW  _0x52+175
000199 026a      	.DW  _0x0*2+312
                 
00019a 000f      	.DW  0x0F
00019b 0470      	.DW  _0x52+190
00019c 0155      	.DW  _0x0*2+35
                 
00019d 000b      	.DW  0x0B
00019e 047f      	.DW  _0x52+205
00019f 0173      	.DW  _0x0*2+65
                 
0001a0 000c      	.DW  0x0C
0001a1 048a      	.DW  _0x52+216
0001a2 017e      	.DW  _0x0*2+76
                 
0001a3 0002      	.DW  0x02
0001a4 0004      	.DW  0x04
0001a5 0130      	.DW  _0x54*2
                 
                 _0xFFFFFFFF:
0001a6 0000      	.DW  0
                 
                 __RESET:
0001a7 94f8      	CLI
0001a8 27ee      	CLR  R30
0001a9 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001aa e0f1      	LDI  R31,1
0001ab bff5      	OUT  MCUCR,R31
0001ac bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0001ad e1f8      	LDI  R31,0x18
0001ae 95a8      	WDR
0001af b7a4      	IN   R26,MCUSR
0001b0 7fa7      	CBR  R26,8
0001b1 bfa4      	OUT  MCUSR,R26
0001b2 93f0 0060 	STS  WDTCSR,R31
0001b4 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
0001b6 e08d      	LDI  R24,(14-2)+1
0001b7 e0a2      	LDI  R26,2
0001b8 27bb      	CLR  R27
                 __CLEAR_REG:
0001b9 93ed      	ST   X+,R30
0001ba 958a      	DEC  R24
0001bb f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001bc e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001bd e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001be e0a0      	LDI  R26,LOW(__SRAM_START)
0001bf e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001c0 93ed      	ST   X+,R30
0001c1 9701      	SBIW R24,1
0001c2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001c3 e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001c4 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001c5 9185      	LPM  R24,Z+
0001c6 9195      	LPM  R25,Z+
0001c7 9700      	SBIW R24,0
0001c8 f061      	BREQ __GLOBAL_INI_END
0001c9 91a5      	LPM  R26,Z+
0001ca 91b5      	LPM  R27,Z+
0001cb 9005      	LPM  R0,Z+
0001cc 9015      	LPM  R1,Z+
0001cd 01bf      	MOVW R22,R30
0001ce 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001cf 9005      	LPM  R0,Z+
0001d0 920d      	ST   X+,R0
0001d1 9701      	SBIW R24,1
0001d2 f7e1      	BRNE __GLOBAL_INI_LOOP
0001d3 01fb      	MOVW R30,R22
0001d4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0001d5 e0e0      	LDI  R30,__GPIOR0_INIT
0001d6 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001d7 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001d8 bfed      	OUT  SPL,R30
0001d9 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001da bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001db e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001dc e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001dd 940c 0243 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;
                 ;#define  uchar unsigned char   // 0~255
                 ;#define  uint  unsigned int    // 0~65535
                 ;#define  ulong unsigned long   // 0~4,294,967,295
                 ;
                 ;#define  esp8266_print   puts
                 ;#define  esp8266_read    gets
                 ;#define  wdt_reset()    #asm("wdr")
                 ;
                 ;#define  Out_Up     PORTD.4 //  n6-o4
                 ;#define  Out_Dn     PORTD.5 //  n7-o5
                 ;#define  Out_R       PORTD.2 //
                 ;
                 ;#define  DEBUG 1
                 ;
                 ;ulong millis=0;
                 ;ulong previousMillis=0;
                 ;uint  interval=2000;
                 ;
                 ;uchar *AtCommand(uchar *command, const int timeout, int debug);
                 ;uchar *AtData(uchar *data, const int timeout, int debug);
                 ;void CIPData(uchar *connectionId, uchar *data);
                 ;void init_esp(void);
                 ;
                 ;void test()
                 ; 0000 001E {
                 
                 	.CSEG
                 ; 0000 001F     Out_Up=1;
                 ; 0000 0020     Out_Dn=1;
                 ; 0000 0021     delay_ms(300);
                 ; 0000 0022     Out_Up=0;
                 ; 0000 0023     Out_Dn=0;
                 ; 0000 0024 }
                 ;//------------------------------------
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0027 {
                 _timer0_ovf_isr:
0001df 936a      	ST   -Y,R22
0001e0 937a      	ST   -Y,R23
0001e1 93aa      	ST   -Y,R26
0001e2 93ba      	ST   -Y,R27
0001e3 93ea      	ST   -Y,R30
0001e4 93fa      	ST   -Y,R31
0001e5 b7ef      	IN   R30,SREG
0001e6 93ea      	ST   -Y,R30
                 ; 0000 0028     // Reinitialize Timer 0 value
                 ; 0000 0029     TCNT0=0x83;  //TCNT0=0x53;
0001e7 e8e3      	LDI  R30,LOW(131)
0001e8 bde6      	OUT  0x26,R30
                 ; 0000 002A     // Place your code here
                 ; 0000 002B     millis++;
0001e9 e9a6      	LDI  R26,LOW(_millis)
0001ea e0b4      	LDI  R27,HIGH(_millis)
0001eb 940e 08db 	CALL __GETD1P_INC
                +
0001ed 5fef     +SUBI R30 , LOW ( - 1 )
0001ee 4fff     +SBCI R31 , HIGH ( - 1 )
0001ef 4f6f     +SBCI R22 , BYTE3 ( - 1 )
0001f0 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
0001f1 940e 08e0 	CALL __PUTDP1_DEC
                 ; 0000 002C }
0001f3 91e9      	LD   R30,Y+
0001f4 bfef      	OUT  SREG,R30
0001f5 91f9      	LD   R31,Y+
0001f6 91e9      	LD   R30,Y+
0001f7 91b9      	LD   R27,Y+
0001f8 91a9      	LD   R26,Y+
0001f9 9179      	LD   R23,Y+
0001fa 9169      	LD   R22,Y+
0001fb 9518      	RETI
                 ;//--USART-----------------------------------
                 ;int esp8266_available(void) {
                 ; 0000 002E int esp8266_available(void) {
                 _esp8266_available:
                 ; 0000 002F 	if (UCSR0A & (1 << RXC0))
0001fc 91e0 00c0 	LDS  R30,192
0001fe 78e0      	ANDI R30,LOW(0x80)
0001ff f019      	BREQ _0xB
                 ; 0000 0030     {
                 ; 0000 0031 		return 1;
000200 e0e1      	LDI  R30,LOW(1)
000201 e0f0      	LDI  R31,HIGH(1)
000202 9508      	RET
                 ; 0000 0032 
                 ; 0000 0033 	}
                 ; 0000 0034 	else
                 _0xB:
                 ; 0000 0035     {
                 ; 0000 0036 		return 0;
000203 e0e0      	LDI  R30,LOW(0)
000204 e0f0      	LDI  R31,HIGH(0)
000205 9508      	RET
                 ; 0000 0037 	}
                 ; 0000 0038 }
000206 9508      	RET
                 ;//------------------------------------------
                 ;void init_all()
                 ; 0000 003B {
                 _init_all:
                 ; 0000 003C // Crystal Oscillator division factor: 1
                 ; 0000 003D #pragma optsize-
                 ; 0000 003E CLKPR=0x80;
000207 e8e0      	LDI  R30,LOW(128)
000208 93e0 0061 	STS  97,R30
                 ; 0000 003F CLKPR=0x00;
00020a e0e0      	LDI  R30,LOW(0)
00020b 93e0 0061 	STS  97,R30
                 ; 0000 0040 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0041 #pragma optsize+
                 ; 0000 0042 #endif
                 ; 0000 0043 
                 ; 0000 0044 // Input/Output Ports initialization
                 ; 0000 0045 // Port B initialization
                 ; 0000 0046 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0047 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0048 PORTB=0x00;
00020d b9e5      	OUT  0x5,R30
                 ; 0000 0049 DDRB=0x04;
00020e e0e4      	LDI  R30,LOW(4)
00020f b9e4      	OUT  0x4,R30
                 ; 0000 004A 
                 ; 0000 004B // Port C initialization
                 ; 0000 004C // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 004D // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 004E PORTC=0x39;
000210 e3e9      	LDI  R30,LOW(57)
000211 b9e8      	OUT  0x8,R30
                 ; 0000 004F DDRC=0x00;
000212 e0e0      	LDI  R30,LOW(0)
000213 b9e7      	OUT  0x7,R30
                 ; 0000 0050 
                 ; 0000 0051 // Port D initialization
                 ; 0000 0052 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=In Func0=In
                 ; 0000 0053 // State7=0 State6=0 State5=0 State4=0 State3=P State2=0 State1=T State0=T
                 ; 0000 0054 PORTD=0x08;
000214 e0e8      	LDI  R30,LOW(8)
000215 b9eb      	OUT  0xB,R30
                 ; 0000 0055 DDRD=0xF4;
000216 efe4      	LDI  R30,LOW(244)
000217 b9ea      	OUT  0xA,R30
                 ; 0000 0056 
                 ; 0000 0057 // Timer/Counter 0 initialization
                 ; 0000 0058 // Clock source: System Clock 8M-11.059M / 64
                 ; 0000 0059 // Clock value: 125.000 kHz - 172.800 kHz
                 ; 0000 005A TCCR0A=0x00;
000218 e0e0      	LDI  R30,LOW(0)
000219 bde4      	OUT  0x24,R30
                 ; 0000 005B TCCR0B=0x03;
00021a e0e3      	LDI  R30,LOW(3)
00021b bde5      	OUT  0x25,R30
                 ; 0000 005C TCNT0=0x83;  //0x53
00021c e8e3      	LDI  R30,LOW(131)
00021d bde6      	OUT  0x26,R30
                 ; 0000 005D OCR0A=0x00;
00021e e0e0      	LDI  R30,LOW(0)
00021f bde7      	OUT  0x27,R30
                 ; 0000 005E OCR0B=0x00;
000220 bde8      	OUT  0x28,R30
                 ; 0000 005F 
                 ; 0000 0060 // Timer/Counter 0 Interrupt(s) initialization
                 ; 0000 0061 TIMSK0=0x01;
000221 e0e1      	LDI  R30,LOW(1)
000222 93e0 006e 	STS  110,R30
                 ; 0000 0062 
                 ; 0000 0063 // Timer/Counter 1 Interrupt(s) initialization
                 ; 0000 0064 TIMSK1=0x00;
000224 e0e0      	LDI  R30,LOW(0)
000225 93e0 006f 	STS  111,R30
                 ; 0000 0065 
                 ; 0000 0066 // Timer/Counter 2 Interrupt(s) initialization
                 ; 0000 0067 TIMSK2=0x00;
000227 93e0 0070 	STS  112,R30
                 ; 0000 0068 
                 ; 0000 0069 // USART initialization
                 ; 0000 006A // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 006B // USART Receiver: On
                 ; 0000 006C // USART Transmitter: On
                 ; 0000 006D // USART Mode: Asynchronous
                 ; 0000 006E // USART Baud Rate: 115200
                 ; 0000 006F UCSR0A=0x00;
000229 93e0 00c0 	STS  192,R30
                 ; 0000 0070 UCSR0B=0x18;
00022b e1e8      	LDI  R30,LOW(24)
00022c 93e0 00c1 	STS  193,R30
                 ; 0000 0071 UCSR0C=0x06;
00022e e0e6      	LDI  R30,LOW(6)
00022f 93e0 00c2 	STS  194,R30
                 ; 0000 0072 UBRR0H=0x00;
000231 e0e0      	LDI  R30,LOW(0)
000232 93e0 00c5 	STS  197,R30
                 ; 0000 0073 UBRR0L=0x05;
000234 e0e5      	LDI  R30,LOW(5)
000235 93e0 00c4 	STS  196,R30
                 ; 0000 0074 
                 ; 0000 0075 // ADC initialization
                 ; 0000 0076 // ADC disabled
                 ; 0000 0077 ADCSRA=0x00;
000237 e0e0      	LDI  R30,LOW(0)
000238 93e0 007a 	STS  122,R30
                 ; 0000 0078 
                 ; 0000 0079 // Watchdog Timer initialization
                 ; 0000 007A // Watchdog Timer Prescaler: OSC/256k
                 ; 0000 007B // Watchdog Timer interrupt: Off
                 ; 0000 007C #pragma optsize-
                 ; 0000 007D #asm("wdr")
00023a 95a8      	wdr
                 ; 0000 007E WDTCSR=0x1F;
00023b e1ef      	LDI  R30,LOW(31)
00023c 93e0 0060 	STS  96,R30
                 ; 0000 007F WDTCSR=0x0F; // 2 sec
00023e e0ef      	LDI  R30,LOW(15)
00023f 93e0 0060 	STS  96,R30
                 ; 0000 0080 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0081 #pragma optsize+
                 ; 0000 0082 #endif
                 ; 0000 0083 
                 ; 0000 0084 // Global enable interrupts
                 ; 0000 0085 #asm("sei")
000241 9478      	sei
                 ; 0000 0086 }
000242 9508      	RET
                 ;//------------------------------------------
                 ;void main(void)
                 ; 0000 0089 {
                 _main:
                 ; 0000 008A     uchar idx[1];
                 ; 0000 008B     uchar buff[50];
                 ; 0000 008C     uchar stat[50];
                 ; 0000 008D     ulong currentMillis=0;
                 ; 0000 008E     //Out_R=1;
                 ; 0000 008F 
                 ; 0000 0090     init_all();
000243 97ef      	SBIW R28,63
000244 97aa      	SBIW R28,42
000245 e0e0      	LDI  R30,LOW(0)
000246 83e8      	ST   Y,R30
000247 83e9      	STD  Y+1,R30
000248 83ea      	STD  Y+2,R30
000249 83eb      	STD  Y+3,R30
                 ;	idx -> Y+104
                 ;	buff -> Y+54
                 ;	stat -> Y+4
                 ;	currentMillis -> Y+0
00024a dfbc      	RCALL _init_all
                 ; 0000 0091     init_esp();
00024b d295      	RCALL _init_esp
                 ; 0000 0092     ////esp8266.setTimeout(300);
                 ; 0000 0093 
                 ; 0000 0094     if(DEBUG)
                 ; 0000 0095     {
                 ; 0000 0096         //Serial.println("start");
                 ; 0000 0097     }
                 ; 0000 0098 
                 ; 0000 0099     while(1)
                 _0xE:
                 ; 0000 009A     {
                 ; 0000 009B         currentMillis = millis;
00024c 91e0 0496 	LDS  R30,_millis
00024e 91f0 0497 	LDS  R31,_millis+1
000250 9160 0498 	LDS  R22,_millis+2
000252 9170 0499 	LDS  R23,_millis+3
000254 940e 08ef 	CALL __PUTD1S0
                 ; 0000 009C         wdt_reset();
000256 95a8      	wdr
                 ; 0000 009D 
                 ; 0000 009E         if(esp8266_available())
000257 dfa4      	RCALL _esp8266_available
000258 9730      	SBIW R30,0
000259 f411      	BRNE PC+3
00025a 940c 030e 	JMP _0x11
                 ; 0000 009F         {
                 ; 0000 00A0             //delay_ms(200);
                 ; 0000 00A1             //+IPD,0,4:o=u
                 ; 0000 00A2 
                 ; 0000 00A3             esp8266_read(buff,50);
00025c 01fe      	MOVW R30,R28
00025d 96f6      	ADIW R30,54
00025e 93fa      	ST   -Y,R31
00025f 93ea      	ST   -Y,R30
000260 e3a2      	LDI  R26,LOW(50)
000261 e0b0      	LDI  R27,0
000262 940e 057f 	CALL _gets
                 ; 0000 00A4             if(strstr(buff, "+IPD"))
000264 01fe      	MOVW R30,R28
000265 96f6      	ADIW R30,54
000266 93fa      	ST   -Y,R31
000267 93ea      	ST   -Y,R30
                +
000268 e0a0     +LDI R26 , LOW ( _0x13 + ( 0 ) )
000269 e0b3     +LDI R27 , HIGH ( _0x13 + ( 0 ) )
                 	__POINTW2MN _0x13,0
00026a 940e 086c 	CALL _strstr
00026c 9730      	SBIW R30,0
00026d f411      	BRNE PC+3
00026e 940c 030d 	JMP _0x12
                 ; 0000 00A5             {
                 ; 0000 00A6                 if(DEBUG)
                 ; 0000 00A7                 {
                 ; 0000 00A8                     //Serial.println("available");
                 ; 0000 00A9                 }
                 ; 0000 00AA                 sprintf(idx,"%c",*(strstr(buff, "+IPD")+11));
000270 01fe      	MOVW R30,R28
000271 59e8      	SUBI R30,LOW(-(104))
000272 4fff      	SBCI R31,HIGH(-(104))
000273 93fa      	ST   -Y,R31
000274 93ea      	ST   -Y,R30
                +
000275 e3e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
000276 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
000277 93fa      	ST   -Y,R31
000278 93ea      	ST   -Y,R30
000279 01fe      	MOVW R30,R28
00027a 96fa      	ADIW R30,58
00027b 93fa      	ST   -Y,R31
00027c 93ea      	ST   -Y,R30
                +
00027d e0a5     +LDI R26 , LOW ( _0x13 + ( 5 ) )
00027e e0b3     +LDI R27 , HIGH ( _0x13 + ( 5 ) )
                 	__POINTW2MN _0x13,5
00027f 940e 086c 	CALL _strstr
000281 85e3      	LDD  R30,Z+11
000282 27ff      	CLR  R31
000283 2766      	CLR  R22
000284 2777      	CLR  R23
000285 940e 08f4 	CALL __PUTPARD1
000287 e084      	LDI  R24,4
000288 940e 080a 	CALL _sprintf
00028a 9628      	ADIW R28,8
                 ; 0000 00AB                 if(idx[0]=='u')
                +
00028b 01de     +MOVW R26 , R28
00028c 59a8     +SUBI R26 , LOW ( - 104 )
00028d 4fbf     +SBCI R27 , HIGH ( - 104 )
00028e 91ac     +LD R26 , X
                 	__GETB2SX 104
00028f 37a5      	CPI  R26,LOW(0x75)
000290 f529      	BRNE _0x15
                 ; 0000 00AC                 {
                 ; 0000 00AD                     sprintf(idx,"%c",*(strstr(buff, "+IPD")+5));
000291 01fe      	MOVW R30,R28
000292 59e8      	SUBI R30,LOW(-(104))
000293 4fff      	SBCI R31,HIGH(-(104))
000294 93fa      	ST   -Y,R31
000295 93ea      	ST   -Y,R30
                +
000296 e3e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
000297 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
000298 93fa      	ST   -Y,R31
000299 93ea      	ST   -Y,R30
00029a 01fe      	MOVW R30,R28
00029b 96fa      	ADIW R30,58
00029c 93fa      	ST   -Y,R31
00029d 93ea      	ST   -Y,R30
                +
00029e e0aa     +LDI R26 , LOW ( _0x13 + ( 10 ) )
00029f e0b3     +LDI R27 , HIGH ( _0x13 + ( 10 ) )
                 	__POINTW2MN _0x13,10
0002a0 940e 086c 	CALL _strstr
0002a2 81e5      	LDD  R30,Z+5
0002a3 27ff      	CLR  R31
0002a4 2766      	CLR  R22
0002a5 2777      	CLR  R23
0002a6 940e 08f4 	CALL __PUTPARD1
0002a8 e084      	LDI  R24,4
0002a9 940e 080a 	CALL _sprintf
0002ab 9628      	ADIW R28,8
                 ; 0000 00AE                     CIPData(idx,"FB :u OK");
0002ac 01fe      	MOVW R30,R28
0002ad 59e8      	SUBI R30,LOW(-(104))
0002ae 4fff      	SBCI R31,HIGH(-(104))
0002af 93fa      	ST   -Y,R31
0002b0 93ea      	ST   -Y,R30
                +
0002b1 e0af     +LDI R26 , LOW ( _0x13 + ( 15 ) )
0002b2 e0b3     +LDI R27 , HIGH ( _0x13 + ( 15 ) )
                 	__POINTW2MN _0x13,15
0002b3 d1d8      	RCALL _CIPData
                 ; 0000 00AF                     Out_Up=1;
0002b4 9a5c      	SBI  0xB,4
                 ; 0000 00B0                     Out_Dn=0;
0002b5 c056      	RJMP _0x53
                 ; 0000 00B1                 }
                 ; 0000 00B2                 else if(idx[0]=='d')
                 _0x15:
                +
0002b6 01de     +MOVW R26 , R28
0002b7 59a8     +SUBI R26 , LOW ( - 104 )
0002b8 4fbf     +SBCI R27 , HIGH ( - 104 )
0002b9 91ac     +LD R26 , X
                 	__GETB2SX 104
0002ba 36a4      	CPI  R26,LOW(0x64)
0002bb f531      	BRNE _0x1B
                 ; 0000 00B3                 {
                 ; 0000 00B4                     sprintf(idx,"%c",*(strstr(buff, "+IPD")+5));
0002bc 01fe      	MOVW R30,R28
0002bd 59e8      	SUBI R30,LOW(-(104))
0002be 4fff      	SBCI R31,HIGH(-(104))
0002bf 93fa      	ST   -Y,R31
0002c0 93ea      	ST   -Y,R30
                +
0002c1 e3e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
0002c2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
0002c3 93fa      	ST   -Y,R31
0002c4 93ea      	ST   -Y,R30
0002c5 01fe      	MOVW R30,R28
0002c6 96fa      	ADIW R30,58
0002c7 93fa      	ST   -Y,R31
0002c8 93ea      	ST   -Y,R30
                +
0002c9 e1a8     +LDI R26 , LOW ( _0x13 + ( 24 ) )
0002ca e0b3     +LDI R27 , HIGH ( _0x13 + ( 24 ) )
                 	__POINTW2MN _0x13,24
0002cb 940e 086c 	CALL _strstr
0002cd 81e5      	LDD  R30,Z+5
0002ce 27ff      	CLR  R31
0002cf 2766      	CLR  R22
0002d0 2777      	CLR  R23
0002d1 940e 08f4 	CALL __PUTPARD1
0002d3 e084      	LDI  R24,4
0002d4 940e 080a 	CALL _sprintf
0002d6 9628      	ADIW R28,8
                 ; 0000 00B5                     CIPData(idx,"FB :d OK");
0002d7 01fe      	MOVW R30,R28
0002d8 59e8      	SUBI R30,LOW(-(104))
0002d9 4fff      	SBCI R31,HIGH(-(104))
0002da 93fa      	ST   -Y,R31
0002db 93ea      	ST   -Y,R30
                +
0002dc e1ad     +LDI R26 , LOW ( _0x13 + ( 29 ) )
0002dd e0b3     +LDI R27 , HIGH ( _0x13 + ( 29 ) )
                 	__POINTW2MN _0x13,29
0002de d1ad      	RCALL _CIPData
                 ; 0000 00B6                     Out_Up=0;
0002df 985c      	CBI  0xB,4
                 ; 0000 00B7                     Out_Dn=1;
0002e0 9a5d      	SBI  0xB,5
                 ; 0000 00B8                 }
                 ; 0000 00B9                 else if(idx[0]=='s')
0002e1 c02b      	RJMP _0x20
                 _0x1B:
                +
0002e2 01de     +MOVW R26 , R28
0002e3 59a8     +SUBI R26 , LOW ( - 104 )
0002e4 4fbf     +SBCI R27 , HIGH ( - 104 )
0002e5 91ac     +LD R26 , X
                 	__GETB2SX 104
0002e6 37a3      	CPI  R26,LOW(0x73)
0002e7 f529      	BRNE _0x21
                 ; 0000 00BA                 {
                 ; 0000 00BB                     sprintf(idx,"%c",*(strstr(buff, "+IPD")+5));
0002e8 01fe      	MOVW R30,R28
0002e9 59e8      	SUBI R30,LOW(-(104))
0002ea 4fff      	SBCI R31,HIGH(-(104))
0002eb 93fa      	ST   -Y,R31
0002ec 93ea      	ST   -Y,R30
                +
0002ed e3e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
0002ee e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
0002ef 93fa      	ST   -Y,R31
0002f0 93ea      	ST   -Y,R30
0002f1 01fe      	MOVW R30,R28
0002f2 96fa      	ADIW R30,58
0002f3 93fa      	ST   -Y,R31
0002f4 93ea      	ST   -Y,R30
                +
0002f5 e2a6     +LDI R26 , LOW ( _0x13 + ( 38 ) )
0002f6 e0b3     +LDI R27 , HIGH ( _0x13 + ( 38 ) )
                 	__POINTW2MN _0x13,38
0002f7 940e 086c 	CALL _strstr
0002f9 81e5      	LDD  R30,Z+5
0002fa 27ff      	CLR  R31
0002fb 2766      	CLR  R22
0002fc 2777      	CLR  R23
0002fd 940e 08f4 	CALL __PUTPARD1
0002ff e084      	LDI  R24,4
000300 940e 080a 	CALL _sprintf
000302 9628      	ADIW R28,8
                 ; 0000 00BC                     CIPData(idx,"FB :s OK");
000303 01fe      	MOVW R30,R28
000304 59e8      	SUBI R30,LOW(-(104))
000305 4fff      	SBCI R31,HIGH(-(104))
000306 93fa      	ST   -Y,R31
000307 93ea      	ST   -Y,R30
                +
000308 e2ab     +LDI R26 , LOW ( _0x13 + ( 43 ) )
000309 e0b3     +LDI R27 , HIGH ( _0x13 + ( 43 ) )
                 	__POINTW2MN _0x13,43
00030a d181      	RCALL _CIPData
                 ; 0000 00BD                     Out_Up=0;
00030b 985c      	CBI  0xB,4
                 ; 0000 00BE                     Out_Dn=0;
                 _0x53:
00030c 985d      	CBI  0xB,5
                 ; 0000 00BF                 }
                 ; 0000 00C0             }
                 _0x21:
                 _0x20:
                 ; 0000 00C1         }
                 _0x12:
                 ; 0000 00C2         else if(((unsigned long)(currentMillis - previousMillis) >= interval))
00030d c0b5      	RJMP _0x26
                 _0x11:
00030e 91a0 049a 	LDS  R26,_previousMillis
000310 91b0 049b 	LDS  R27,_previousMillis+1
000312 9180 049c 	LDS  R24,_previousMillis+2
000314 9190 049d 	LDS  R25,_previousMillis+3
000316 940e 08e5 	CALL __GETD1S0
000318 940e 0896 	CALL __SUBD12
00031a 01df      	MOVW R26,R30
00031b 01cb      	MOVW R24,R22
00031c 01f2      	MOVW R30,R4
00031d 2766      	CLR  R22
00031e 2777      	CLR  R23
00031f 940e 0902 	CALL __CPD21
000321 f410      	BRSH PC+3
000322 940c 03c3 	JMP _0x27
                 ; 0000 00C3         {
                 ; 0000 00C4                 previousMillis = currentMillis;
000324 940e 08e5 	CALL __GETD1S0
000326 93e0 049a 	STS  _previousMillis,R30
000328 93f0 049b 	STS  _previousMillis+1,R31
00032a 9360 049c 	STS  _previousMillis+2,R22
00032c 9370 049d 	STS  _previousMillis+3,R23
                 ; 0000 00C5                 strcpy(stat,AtCommand("AT+CIPSTATUS\r\n",100,DEBUG));
00032e 01fe      	MOVW R30,R28
00032f 9634      	ADIW R30,4
000330 93fa      	ST   -Y,R31
000331 93ea      	ST   -Y,R30
                +
000332 e3e4     +LDI R30 , LOW ( _0x13 + ( 52 ) )
000333 e0f3     +LDI R31 , HIGH ( _0x13 + ( 52 ) )
                 	__POINTW1MN _0x13,52
000334 93fa      	ST   -Y,R31
000335 93ea      	ST   -Y,R30
000336 e6e4      	LDI  R30,LOW(100)
000337 e0f0      	LDI  R31,HIGH(100)
000338 93fa      	ST   -Y,R31
000339 93ea      	ST   -Y,R30
00033a e0a1      	LDI  R26,LOW(1)
00033b e0b0      	LDI  R27,0
00033c d088      	RCALL _AtCommand
00033d 01df      	MOVW R26,R30
00033e 940e 0846 	CALL _strcpy
                 ; 0000 00C6 
                 ; 0000 00C7                 if(strstr(stat,":5") || strlen(stat) ==0)
000340 01fe      	MOVW R30,R28
000341 9634      	ADIW R30,4
000342 93fa      	ST   -Y,R31
000343 93ea      	ST   -Y,R30
                +
000344 e4a3     +LDI R26 , LOW ( _0x13 + ( 67 ) )
000345 e0b3     +LDI R27 , HIGH ( _0x13 + ( 67 ) )
                 	__POINTW2MN _0x13,67
000346 940e 086c 	CALL _strstr
000348 9730      	SBIW R30,0
000349 f439      	BRNE _0x29
00034a 01de      	MOVW R26,R28
00034b 9614      	ADIW R26,4
00034c 940e 0853 	CALL _strlen
00034e 9730      	SBIW R30,0
00034f f009      	BREQ _0x29
000350 c03c      	RJMP _0x28
                 _0x29:
                 ; 0000 00C8                 {
                 ; 0000 00C9                     AtCommand("AT+RST\r\n",10000,DEBUG);
                +
000351 e4e6     +LDI R30 , LOW ( _0x13 + ( 70 ) )
000352 e0f3     +LDI R31 , HIGH ( _0x13 + ( 70 ) )
                 	__POINTW1MN _0x13,70
000353 93fa      	ST   -Y,R31
000354 93ea      	ST   -Y,R30
000355 e1e0      	LDI  R30,LOW(10000)
000356 e2f7      	LDI  R31,HIGH(10000)
000357 93fa      	ST   -Y,R31
000358 93ea      	ST   -Y,R30
000359 e0a1      	LDI  R26,LOW(1)
00035a e0b0      	LDI  R27,0
00035b d069      	RCALL _AtCommand
                 ; 0000 00CA                     init_esp();
00035c d184      	RCALL _init_esp
                 ; 0000 00CB 
                 ; 0000 00CC                     strcpy(stat,AtCommand("AT+CIPSTATUS\r\n",100,DEBUG));
00035d 01fe      	MOVW R30,R28
00035e 9634      	ADIW R30,4
00035f 93fa      	ST   -Y,R31
000360 93ea      	ST   -Y,R30
                +
000361 e4ef     +LDI R30 , LOW ( _0x13 + ( 79 ) )
000362 e0f3     +LDI R31 , HIGH ( _0x13 + ( 79 ) )
                 	__POINTW1MN _0x13,79
000363 93fa      	ST   -Y,R31
000364 93ea      	ST   -Y,R30
000365 e6e4      	LDI  R30,LOW(100)
000366 e0f0      	LDI  R31,HIGH(100)
000367 93fa      	ST   -Y,R31
000368 93ea      	ST   -Y,R30
000369 e0a1      	LDI  R26,LOW(1)
00036a e0b0      	LDI  R27,0
00036b d059      	RCALL _AtCommand
00036c 01df      	MOVW R26,R30
00036d 940e 0846 	CALL _strcpy
                 ; 0000 00CD                     if(strstr(stat,":5") || strlen(stat) ==0)
00036f 01fe      	MOVW R30,R28
000370 9634      	ADIW R30,4
000371 93fa      	ST   -Y,R31
000372 93ea      	ST   -Y,R30
                +
000373 e5ae     +LDI R26 , LOW ( _0x13 + ( 94 ) )
000374 e0b3     +LDI R27 , HIGH ( _0x13 + ( 94 ) )
                 	__POINTW2MN _0x13,94
000375 940e 086c 	CALL _strstr
000377 9730      	SBIW R30,0
000378 f431      	BRNE _0x2C
000379 01de      	MOVW R26,R28
00037a 9614      	ADIW R26,4
00037b 940e 0853 	CALL _strlen
00037d 9730      	SBIW R30,0
00037e f469      	BRNE _0x2B
                 _0x2C:
                 ; 0000 00CE                     {
                 ; 0000 00CF                         Out_R=0; delay_ms(1000); wdt_reset();
00037f 985a      	CBI  0xB,2
000380 eea8      	LDI  R26,LOW(1000)
000381 e0b3      	LDI  R27,HIGH(1000)
000382 940e 0883 	CALL _delay_ms
000384 95a8      	wdr
                 ; 0000 00D0                         Out_R=1; delay_ms(1000); wdt_reset();
000385 9a5a      	SBI  0xB,2
000386 eea8      	LDI  R26,LOW(1000)
000387 e0b3      	LDI  R27,HIGH(1000)
000388 940e 0883 	CALL _delay_ms
00038a 95a8      	wdr
                 ; 0000 00D1 
                 ; 0000 00D2                         init_esp();
00038b d155      	RCALL _init_esp
                 ; 0000 00D3                     }
                 ; 0000 00D4                 }
                 _0x2B:
                 ; 0000 00D5                 else if(strstr(stat,":2"))
00038c c036      	RJMP _0x32
                 _0x28:
00038d 01fe      	MOVW R30,R28
00038e 9634      	ADIW R30,4
00038f 93fa      	ST   -Y,R31
000390 93ea      	ST   -Y,R30
                +
000391 e6a1     +LDI R26 , LOW ( _0x13 + ( 97 ) )
000392 e0b3     +LDI R27 , HIGH ( _0x13 + ( 97 ) )
                 	__POINTW2MN _0x13,97
000393 940e 086c 	CALL _strstr
000395 9730      	SBIW R30,0
000396 f161      	BREQ _0x33
                 ; 0000 00D6                 {
                 ; 0000 00D7                     AtCommand("AT+CIFSR\r\n",100,DEBUG); // get ip address
                +
000397 e6e4     +LDI R30 , LOW ( _0x13 + ( 100 ) )
000398 e0f3     +LDI R31 , HIGH ( _0x13 + ( 100 ) )
                 	__POINTW1MN _0x13,100
000399 93fa      	ST   -Y,R31
00039a 93ea      	ST   -Y,R30
00039b e6e4      	LDI  R30,LOW(100)
00039c e0f0      	LDI  R31,HIGH(100)
00039d 93fa      	ST   -Y,R31
00039e 93ea      	ST   -Y,R30
00039f e0a1      	LDI  R26,LOW(1)
0003a0 e0b0      	LDI  R27,0
0003a1 d023      	RCALL _AtCommand
                 ; 0000 00D8                     AtCommand("AT+CWJAP?\r\n",100,DEBUG);
                +
0003a2 e6ef     +LDI R30 , LOW ( _0x13 + ( 111 ) )
0003a3 e0f3     +LDI R31 , HIGH ( _0x13 + ( 111 ) )
                 	__POINTW1MN _0x13,111
0003a4 93fa      	ST   -Y,R31
0003a5 93ea      	ST   -Y,R30
0003a6 e6e4      	LDI  R30,LOW(100)
0003a7 e0f0      	LDI  R31,HIGH(100)
0003a8 93fa      	ST   -Y,R31
0003a9 93ea      	ST   -Y,R30
0003aa e0a1      	LDI  R26,LOW(1)
0003ab e0b0      	LDI  R27,0
0003ac d018      	RCALL _AtCommand
                 ; 0000 00D9 
                 ; 0000 00DA                     AtCommand("AT+CIPMUX=1\r\n",150,DEBUG); // configure for multiple connections
                +
0003ad e7eb     +LDI R30 , LOW ( _0x13 + ( 123 ) )
0003ae e0f3     +LDI R31 , HIGH ( _0x13 + ( 123 ) )
                 	__POINTW1MN _0x13,123
0003af 93fa      	ST   -Y,R31
0003b0 93ea      	ST   -Y,R30
0003b1 e9e6      	LDI  R30,LOW(150)
0003b2 e0f0      	LDI  R31,HIGH(150)
0003b3 93fa      	ST   -Y,R31
0003b4 93ea      	ST   -Y,R30
0003b5 e0a1      	LDI  R26,LOW(1)
0003b6 e0b0      	LDI  R27,0
0003b7 d00d      	RCALL _AtCommand
                 ; 0000 00DB                     AtCommand("AT+CIPSERVER=1,1001\r\n",150,DEBUG);// turn on server on port 80
                +
0003b8 e8e9     +LDI R30 , LOW ( _0x13 + ( 137 ) )
0003b9 e0f3     +LDI R31 , HIGH ( _0x13 + ( 137 ) )
                 	__POINTW1MN _0x13,137
0003ba 93fa      	ST   -Y,R31
0003bb 93ea      	ST   -Y,R30
0003bc e9e6      	LDI  R30,LOW(150)
0003bd e0f0      	LDI  R31,HIGH(150)
0003be 93fa      	ST   -Y,R31
0003bf 93ea      	ST   -Y,R30
0003c0 e0a1      	LDI  R26,LOW(1)
0003c1 e0b0      	LDI  R27,0
0003c2 d002      	RCALL _AtCommand
                 ; 0000 00DC                 }
                 ; 0000 00DD                 else// if( stat.indexOf(":3") > -1 || stat.indexOf(":4") > -1)
                 _0x33:
                 ; 0000 00DE                 {
                 ; 0000 00DF                 }
                 _0x32:
                 ; 0000 00E0           }
                 ; 0000 00E1     }
                 _0x27:
                 _0x26:
0003c3 ce88      	RJMP _0xE
                 ; 0000 00E2 }
                 _0x35:
0003c4 cfff      	RJMP _0x35
                 
                 	.DSEG
                 _0x13:
000300           	.BYTE 0x9F
                 ;//------------------------------------------
                 ;uchar *AtCommand(uchar *command, const int timeout, int debug)
                 ; 0000 00E5 {
                 
                 	.CSEG
                 _AtCommand:
0003c5 92ff      	PUSH R15
                 ; 0000 00E6     uchar response[100]="";
                 ; 0000 00E7     ulong time = millis;
                 ; 0000 00E8     bit ok = 0;
                 ; 0000 00E9     esp8266_print(command);
0003c6 93ba      	ST   -Y,R27
0003c7 93aa      	ST   -Y,R26
0003c8 97ef      	SBIW R28,63
0003c9 97a9      	SBIW R28,41
0003ca e684      	LDI  R24,100
0003cb e0a4      	LDI  R26,LOW(4)
0003cc e0b0      	LDI  R27,HIGH(4)
0003cd e6e8      	LDI  R30,LOW(_0x36*2)
0003ce e0f0      	LDI  R31,HIGH(_0x36*2)
0003cf 940e 0915 	CALL __INITLOCB
                 ;	*command -> Y+108
                 ;	timeout -> Y+106
                 ;	debug -> Y+104
                 ;	response -> Y+4
                 ;	time -> Y+0
                 ;	ok -> R15.0
0003d1 24ff      	CLR  R15
0003d2 91e0 0496 	LDS  R30,_millis
0003d4 91f0 0497 	LDS  R31,_millis+1
0003d6 9160 0498 	LDS  R22,_millis+2
0003d8 9170 0499 	LDS  R23,_millis+3
0003da 940e 08ef 	CALL __PUTD1S0
                +
0003dc 01de     +MOVW R26 , R28
0003dd 59a4     +SUBI R26 , LOW ( - 108 )
0003de 4fbf     +SBCI R27 , HIGH ( - 108 )
0003df 900d     +LD R0 , X +
0003e0 91bc     +LD R27 , X
0003e1 2da0     +MOV R26 , R0
                 	__GETW2SX 108
0003e2 d189      	RCALL _puts
                 ; 0000 00EA 
                 ; 0000 00EB     if(debug)
                 ; 0000 00EC     {
                 ; 0000 00ED       //Serial.print(command);
                 ; 0000 00EE     }
                 ; 0000 00EF 
                 ; 0000 00F0     while(  !ok && (time+timeout) > millis )
                 _0x38:
0003e3 fcf0      	SBRC R15,0
0003e4 c017      	RJMP _0x3B
                +
0003e5 01fe     +MOVW R30 , R28
0003e6 59e6     +SUBI R30 , LOW ( - 106 )
0003e7 4fff     +SBCI R31 , HIGH ( - 106 )
0003e8 9001     +LD R0 , Z +
0003e9 81f0     +LD R31 , Z
0003ea 2de0     +MOV R30 , R0
                 	__GETW1SX 106
0003eb 940e 08ea 	CALL __GETD2S0
0003ed 940e 08a3 	CALL __CWD1
0003ef 940e 0891 	CALL __ADDD21
0003f1 91e0 0496 	LDS  R30,_millis
0003f3 91f0 0497 	LDS  R31,_millis+1
0003f5 9160 0498 	LDS  R22,_millis+2
0003f7 9170 0499 	LDS  R23,_millis+3
0003f9 940e 08fd 	CALL __CPD12
0003fb f008      	BRLO _0x3C
                 _0x3B:
0003fc c03d      	RJMP _0x3A
                 _0x3C:
                 ; 0000 00F1     {
                 ; 0000 00F2         wdt_reset();
0003fd 95a8      	wdr
                 ; 0000 00F3         if(esp8266_available())
0003fe ddfd      	RCALL _esp8266_available
0003ff 9730      	SBIW R30,0
000400 f039      	BREQ _0x3D
                 ; 0000 00F4         {
                 ; 0000 00F5            esp8266_read(response,50);
000401 01fe      	MOVW R30,R28
000402 9634      	ADIW R30,4
000403 93fa      	ST   -Y,R31
000404 93ea      	ST   -Y,R30
000405 e3a2      	LDI  R26,LOW(50)
000406 e0b0      	LDI  R27,0
000407 d177      	RCALL _gets
                 ; 0000 00F6         }
                 ; 0000 00F7 
                 ; 0000 00F8        if(strstr(command,"CIPSEND"))
                 _0x3D:
                +
000408 01fe     +MOVW R30 , R28
000409 59e4     +SUBI R30 , LOW ( - 108 )
00040a 4fff     +SBCI R31 , HIGH ( - 108 )
00040b 9001     +LD R0 , Z +
00040c 81f0     +LD R31 , Z
00040d 2de0     +MOV R30 , R0
                 	__GETW1SX 108
00040e 93fa      	ST   -Y,R31
00040f 93ea      	ST   -Y,R30
                +
000410 e9af     +LDI R26 , LOW ( _0x3F + ( 0 ) )
000411 e0b3     +LDI R27 , HIGH ( _0x3F + ( 0 ) )
                 	__POINTW2MN _0x3F,0
000412 940e 086c 	CALL _strstr
000414 9730      	SBIW R30,0
000415 f069      	BREQ _0x3E
                 ; 0000 00F9         {
                 ; 0000 00FA             if(strstr(response,">"))
000416 01fe      	MOVW R30,R28
000417 9634      	ADIW R30,4
000418 93fa      	ST   -Y,R31
000419 93ea      	ST   -Y,R30
                +
00041a eaa7     +LDI R26 , LOW ( _0x3F + ( 8 ) )
00041b e0b3     +LDI R27 , HIGH ( _0x3F + ( 8 ) )
                 	__POINTW2MN _0x3F,8
00041c 940e 086c 	CALL _strstr
00041e 9730      	SBIW R30,0
00041f f011      	BREQ _0x40
                 ; 0000 00FB             ok = 1;
000420 9468      	SET
000421 f8f0      	BLD  R15,0
                 ; 0000 00FC         }
                 _0x40:
                 ; 0000 00FD //        else if(strstr(command,"CIPSTATUS") )
                 ; 0000 00FE //        {
                 ; 0000 00FF //            if(strstr(response,"STATUS") )
                 ; 0000 0100 //            ok = 1;
                 ; 0000 0101 //        }
                 ; 0000 0102         else
000422 c016      	RJMP _0x41
                 _0x3E:
                 ; 0000 0103         {
                 ; 0000 0104             if(strstr(response,"OK")  || strstr(response,"no"))
000423 01fe      	MOVW R30,R28
000424 9634      	ADIW R30,4
000425 93fa      	ST   -Y,R31
000426 93ea      	ST   -Y,R30
                +
000427 eaa9     +LDI R26 , LOW ( _0x3F + ( 10 ) )
000428 e0b3     +LDI R27 , HIGH ( _0x3F + ( 10 ) )
                 	__POINTW2MN _0x3F,10
000429 940e 086c 	CALL _strstr
00042b 9730      	SBIW R30,0
00042c f451      	BRNE _0x43
00042d 01fe      	MOVW R30,R28
00042e 9634      	ADIW R30,4
00042f 93fa      	ST   -Y,R31
000430 93ea      	ST   -Y,R30
                +
000431 eaac     +LDI R26 , LOW ( _0x3F + ( 13 ) )
000432 e0b3     +LDI R27 , HIGH ( _0x3F + ( 13 ) )
                 	__POINTW2MN _0x3F,13
000433 940e 086c 	CALL _strstr
000435 9730      	SBIW R30,0
000436 f011      	BREQ _0x42
                 _0x43:
                 ; 0000 0105             {
                 ; 0000 0106                 ok = 1;
000437 9468      	SET
000438 f8f0      	BLD  R15,0
                 ; 0000 0107             }
                 ; 0000 0108         }
                 _0x42:
                 _0x41:
                 ; 0000 0109     }
000439 cfa9      	RJMP _0x38
                 _0x3A:
                 ; 0000 010A 
                 ; 0000 010B     if(debug)
                 ; 0000 010C     {
                 ; 0000 010D       //Serial.print(response);
                 ; 0000 010E     }
                 ; 0000 010F     return response;
00043a 01fe      	MOVW R30,R28
00043b 9634      	ADIW R30,4
00043c 96ef      	ADIW R28,63
00043d 96af      	ADIW R28,47
00043e 90ff      	POP  R15
00043f 9508      	RET
                 ; 0000 0110 }
                 
                 	.DSEG
                 _0x3F:
00039f           	.BYTE 0x10
                 ;
                 ;uchar *AtData(uchar *data,  const int timeout, int debug)
                 ; 0000 0113 {
                 
                 	.CSEG
                 _AtData:
000440 92ff      	PUSH R15
                 ; 0000 0114     uchar response[50] = "";
                 ; 0000 0115     bit ok = 0;
                 ; 0000 0116     ulong time = millis;
                 ; 0000 0117 
                 ; 0000 0118     esp8266_print(data);
000441 93ba      	ST   -Y,R27
000442 93aa      	ST   -Y,R26
000443 97e6      	SBIW R28,54
000444 e382      	LDI  R24,50
000445 e0a4      	LDI  R26,LOW(4)
000446 e0b0      	LDI  R27,HIGH(4)
000447 ecec      	LDI  R30,LOW(_0x46*2)
000448 e0f0      	LDI  R31,HIGH(_0x46*2)
000449 940e 0915 	CALL __INITLOCB
                 ;	*data -> Y+58
                 ;	timeout -> Y+56
                 ;	debug -> Y+54
                 ;	response -> Y+4
                 ;	ok -> R15.0
                 ;	time -> Y+0
00044b 24ff      	CLR  R15
00044c 91e0 0496 	LDS  R30,_millis
00044e 91f0 0497 	LDS  R31,_millis+1
000450 9160 0498 	LDS  R22,_millis+2
000452 9170 0499 	LDS  R23,_millis+3
000454 940e 08ef 	CALL __PUTD1S0
000456 adaa      	LDD  R26,Y+58
000457 adbb      	LDD  R27,Y+58+1
000458 d113      	RCALL _puts
                 ; 0000 0119 
                 ; 0000 011A     if(debug)
                 ; 0000 011B     {
                 ; 0000 011C       //Serial.println("\r\nFeedBack:");
                 ; 0000 011D       //Serial.write(data,dataSize);
                 ; 0000 011E     }
                 ; 0000 011F 
                 ; 0000 0120     while( (time+timeout) > millis && !ok)
                 _0x48:
000459 ade8      	LDD  R30,Y+56
00045a adf9      	LDD  R31,Y+56+1
00045b 940e 08ea 	CALL __GETD2S0
00045d 940e 08a3 	CALL __CWD1
00045f 940e 0891 	CALL __ADDD21
000461 91e0 0496 	LDS  R30,_millis
000463 91f0 0497 	LDS  R31,_millis+1
000465 9160 0498 	LDS  R22,_millis+2
000467 9170 0499 	LDS  R23,_millis+3
000469 940e 08fd 	CALL __CPD12
00046b f410      	BRSH _0x4B
00046c fef0      	SBRS R15,0
00046d c001      	RJMP _0x4C
                 _0x4B:
00046e c018      	RJMP _0x4A
                 _0x4C:
                 ; 0000 0121     {
                 ; 0000 0122       wdt_reset();
00046f 95a8      	wdr
                 ; 0000 0123       if(esp8266_available())
000470 dd8b      	RCALL _esp8266_available
000471 9730      	SBIW R30,0
000472 f039      	BREQ _0x4D
                 ; 0000 0124       {
                 ; 0000 0125           esp8266_read(response,10);
000473 01fe      	MOVW R30,R28
000474 9634      	ADIW R30,4
000475 93fa      	ST   -Y,R31
000476 93ea      	ST   -Y,R30
000477 e0aa      	LDI  R26,LOW(10)
000478 e0b0      	LDI  R27,0
000479 d105      	RCALL _gets
                 ; 0000 0126       }
                 ; 0000 0127 
                 ; 0000 0128       if(strstr(response,"OK"))
                 _0x4D:
00047a 01fe      	MOVW R30,R28
00047b 9634      	ADIW R30,4
00047c 93fa      	ST   -Y,R31
00047d 93ea      	ST   -Y,R30
                +
00047e eaaf     +LDI R26 , LOW ( _0x4F + ( 0 ) )
00047f e0b3     +LDI R27 , HIGH ( _0x4F + ( 0 ) )
                 	__POINTW2MN _0x4F,0
000480 940e 086c 	CALL _strstr
000482 9730      	SBIW R30,0
000483 f011      	BREQ _0x4E
                 ; 0000 0129       {
                 ; 0000 012A           //Flash();
                 ; 0000 012B           ok = 1;
000484 9468      	SET
000485 f8f0      	BLD  R15,0
                 ; 0000 012C       }
                 ; 0000 012D     }
                 _0x4E:
000486 cfd2      	RJMP _0x48
                 _0x4A:
                 ; 0000 012E 
                 ; 0000 012F     if(debug)
                 ; 0000 0130     {
                 ; 0000 0131        //Serial.print(response);
                 ; 0000 0132     }
                 ; 0000 0133 
                 ; 0000 0134     return response;
000487 01fe      	MOVW R30,R28
000488 9634      	ADIW R30,4
000489 96ec      	ADIW R28,60
00048a 90ff      	POP  R15
00048b 9508      	RET
                 ; 0000 0135 }
                 
                 	.DSEG
                 _0x4F:
0003af           	.BYTE 0x3
                 ;
                 ;void CIPData(uchar *connectionId, uchar *data)
                 ; 0000 0138 {
                 
                 	.CSEG
                 _CIPData:
                 ; 0000 0139    uchar buff[50]=""; //+IPD,0,4:o=u
                 ; 0000 013A    sprintf(buff,"AT+CIPSEND=%s,%d\r\n",connectionId,strlen(data));
00048c 93ba      	ST   -Y,R27
00048d 93aa      	ST   -Y,R26
00048e 97e2      	SBIW R28,50
00048f e382      	LDI  R24,50
000490 e0a0      	LDI  R26,LOW(0)
000491 e0b0      	LDI  R27,HIGH(0)
000492 efee      	LDI  R30,LOW(_0x51*2)
000493 e0f0      	LDI  R31,HIGH(_0x51*2)
000494 940e 0915 	CALL __INITLOCB
                 ;	*connectionId -> Y+52
                 ;	*data -> Y+50
                 ;	buff -> Y+0
000496 01fe      	MOVW R30,R28
000497 93fa      	ST   -Y,R31
000498 93ea      	ST   -Y,R30
                +
000499 ebeb     +LDI R30 , LOW ( 2 * _0x0 + ( 137 ) )
00049a e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 137 ) )
                 	__POINTW1FN _0x0,137
00049b 93fa      	ST   -Y,R31
00049c 93ea      	ST   -Y,R30
00049d ade8      	LDD  R30,Y+56
00049e adf9      	LDD  R31,Y+56+1
00049f 2766      	CLR  R22
0004a0 2777      	CLR  R23
0004a1 940e 08f4 	CALL __PUTPARD1
0004a3 adaa      	LDD  R26,Y+58
0004a4 adbb      	LDD  R27,Y+58+1
0004a5 940e 0853 	CALL _strlen
0004a7 2766      	CLR  R22
0004a8 2777      	CLR  R23
0004a9 940e 08f4 	CALL __PUTPARD1
0004ab e088      	LDI  R24,8
0004ac 940e 080a 	CALL _sprintf
0004ae 962c      	ADIW R28,12
                 ; 0000 013B    AtCommand(buff,200,DEBUG);//****1000
0004af 01fe      	MOVW R30,R28
0004b0 93fa      	ST   -Y,R31
0004b1 93ea      	ST   -Y,R30
0004b2 ece8      	LDI  R30,LOW(200)
0004b3 e0f0      	LDI  R31,HIGH(200)
0004b4 93fa      	ST   -Y,R31
0004b5 93ea      	ST   -Y,R30
0004b6 e0a1      	LDI  R26,LOW(1)
0004b7 e0b0      	LDI  R27,0
0004b8 df0c      	RCALL _AtCommand
                 ; 0000 013C 
                 ; 0000 013D    AtData(data,200,DEBUG);//****1000
0004b9 a9ea      	LDD  R30,Y+50
0004ba a9fb      	LDD  R31,Y+50+1
0004bb 93fa      	ST   -Y,R31
0004bc 93ea      	ST   -Y,R30
0004bd ece8      	LDI  R30,LOW(200)
0004be e0f0      	LDI  R31,HIGH(200)
0004bf 93fa      	ST   -Y,R31
0004c0 93ea      	ST   -Y,R30
0004c1 e0a1      	LDI  R26,LOW(1)
0004c2 e0b0      	LDI  R27,0
0004c3 df7c      	RCALL _AtData
                 ; 0000 013E 
                 ; 0000 013F    sprintf(buff,"AT+CIPCLOSE=%s\r\n",connectionId);
0004c4 01fe      	MOVW R30,R28
0004c5 93fa      	ST   -Y,R31
0004c6 93ea      	ST   -Y,R30
                +
0004c7 ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 156 ) )
0004c8 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 156 ) )
                 	__POINTW1FN _0x0,156
0004c9 93fa      	ST   -Y,R31
0004ca 93ea      	ST   -Y,R30
0004cb ade8      	LDD  R30,Y+56
0004cc adf9      	LDD  R31,Y+56+1
0004cd 2766      	CLR  R22
0004ce 2777      	CLR  R23
0004cf 940e 08f4 	CALL __PUTPARD1
0004d1 e084      	LDI  R24,4
0004d2 940e 080a 	CALL _sprintf
0004d4 9628      	ADIW R28,8
                 ; 0000 0140    AtCommand(buff,200,DEBUG); // close connection***1000
0004d5 01fe      	MOVW R30,R28
0004d6 93fa      	ST   -Y,R31
0004d7 93ea      	ST   -Y,R30
0004d8 ece8      	LDI  R30,LOW(200)
0004d9 e0f0      	LDI  R31,HIGH(200)
0004da 93fa      	ST   -Y,R31
0004db 93ea      	ST   -Y,R30
0004dc e0a1      	LDI  R26,LOW(1)
0004dd e0b0      	LDI  R27,0
0004de dee6      	RCALL _AtCommand
                 ; 0000 0141 }
0004df 96e6      	ADIW R28,54
0004e0 9508      	RET
                 ;
                 ;void init_esp(void)
                 ; 0000 0144 {
                 _init_esp:
                 ; 0000 0145   //AT+CWJAP?
                 ; 0000 0146   //AtCommand("AT+CWAUTOCONN?\r\n",100,DEBUG);
                 ; 0000 0147   //AtCommand("AT+CWMODE?\r\n",100,DEBUG);
                 ; 0000 0148   //AtCommand("AT+CIPSTA_DEF?\r\n",100,DEBUG);
                 ; 0000 0149   //AtCommand("AT+RFPOWER=82",100,DEBUG);
                 ; 0000 014A 
                 ; 0000 014B   AtCommand("ATE0\r\n",100,DEBUG);
                +
0004e1 ebe2     +LDI R30 , LOW ( _0x52 + ( 0 ) )
0004e2 e0f3     +LDI R31 , HIGH ( _0x52 + ( 0 ) )
                 	__POINTW1MN _0x52,0
0004e3 93fa      	ST   -Y,R31
0004e4 93ea      	ST   -Y,R30
0004e5 e6e4      	LDI  R30,LOW(100)
0004e6 e0f0      	LDI  R31,HIGH(100)
0004e7 93fa      	ST   -Y,R31
0004e8 93ea      	ST   -Y,R30
0004e9 e0a1      	LDI  R26,LOW(1)
0004ea e0b0      	LDI  R27,0
0004eb ded9      	RCALL _AtCommand
                 ; 0000 014C 
                 ; 0000 014D   AtCommand("AT+CWMODE=1\r\n",1000,DEBUG); // configure as access point
                +
0004ec ebe9     +LDI R30 , LOW ( _0x52 + ( 7 ) )
0004ed e0f3     +LDI R31 , HIGH ( _0x52 + ( 7 ) )
                 	__POINTW1MN _0x52,7
0004ee 93fa      	ST   -Y,R31
0004ef 93ea      	ST   -Y,R30
0004f0 eee8      	LDI  R30,LOW(1000)
0004f1 e0f3      	LDI  R31,HIGH(1000)
0004f2 93fa      	ST   -Y,R31
0004f3 93ea      	ST   -Y,R30
0004f4 e0a1      	LDI  R26,LOW(1)
0004f5 e0b0      	LDI  R27,0
0004f6 dece      	RCALL _AtCommand
                 ; 0000 014E   AtCommand("AT+CWAUTOCONN=1\r\n",100,DEBUG);
                +
0004f7 ece7     +LDI R30 , LOW ( _0x52 + ( 21 ) )
0004f8 e0f3     +LDI R31 , HIGH ( _0x52 + ( 21 ) )
                 	__POINTW1MN _0x52,21
0004f9 93fa      	ST   -Y,R31
0004fa 93ea      	ST   -Y,R30
0004fb e6e4      	LDI  R30,LOW(100)
0004fc e0f0      	LDI  R31,HIGH(100)
0004fd 93fa      	ST   -Y,R31
0004fe 93ea      	ST   -Y,R30
0004ff e0a1      	LDI  R26,LOW(1)
000500 e0b0      	LDI  R27,0
000501 dec3      	RCALL _AtCommand
                 ; 0000 014F   AtCommand("AT+CWJAP_DEF=\"smartlife\",\"mrb131113\"\r\n",10000,DEBUG);//,\"AC:5F:3E:48:17:E7\"   // \"Broo\",\"mrb131113\",\"60:83:34:29:2d:2c\" -- \"TP-LINK_7DEADE\",\"maf123456\",\"c4:e9:84:7d:ea:de\"
                +
000502 ede9     +LDI R30 , LOW ( _0x52 + ( 39 ) )
000503 e0f3     +LDI R31 , HIGH ( _0x52 + ( 39 ) )
                 	__POINTW1MN _0x52,39
000504 93fa      	ST   -Y,R31
000505 93ea      	ST   -Y,R30
000506 e1e0      	LDI  R30,LOW(10000)
000507 e2f7      	LDI  R31,HIGH(10000)
000508 93fa      	ST   -Y,R31
000509 93ea      	ST   -Y,R30
00050a e0a1      	LDI  R26,LOW(1)
00050b e0b0      	LDI  R27,0
00050c deb8      	RCALL _AtCommand
                 ; 0000 0150   AtCommand("AT+CIPSTA_DEF=\"192.168.1.55\",\"192.168.1.1\",\"255.255.255.0\"\r\n",500,DEBUG);
                +
00050d e0e0     +LDI R30 , LOW ( _0x52 + ( 78 ) )
00050e e0f4     +LDI R31 , HIGH ( _0x52 + ( 78 ) )
                 	__POINTW1MN _0x52,78
00050f 93fa      	ST   -Y,R31
000510 93ea      	ST   -Y,R30
000511 efe4      	LDI  R30,LOW(500)
000512 e0f1      	LDI  R31,HIGH(500)
000513 93fa      	ST   -Y,R31
000514 93ea      	ST   -Y,R30
000515 e0a1      	LDI  R26,LOW(1)
000516 e0b0      	LDI  R27,0
000517 dead      	RCALL _AtCommand
                 ; 0000 0151 
                 ; 0000 0152   AtCommand("AT+CIPMUX=1\r\n",150,DEBUG); // configure for multiple connections
                +
000518 e3ed     +LDI R30 , LOW ( _0x52 + ( 139 ) )
000519 e0f4     +LDI R31 , HIGH ( _0x52 + ( 139 ) )
                 	__POINTW1MN _0x52,139
00051a 93fa      	ST   -Y,R31
00051b 93ea      	ST   -Y,R30
00051c e9e6      	LDI  R30,LOW(150)
00051d e0f0      	LDI  R31,HIGH(150)
00051e 93fa      	ST   -Y,R31
00051f 93ea      	ST   -Y,R30
000520 e0a1      	LDI  R26,LOW(1)
000521 e0b0      	LDI  R27,0
000522 dea2      	RCALL _AtCommand
                 ; 0000 0153   AtCommand("AT+CIPSERVER=1,1001\r\n",150,DEBUG); // turn on server on port 1001
                +
000523 e4eb     +LDI R30 , LOW ( _0x52 + ( 153 ) )
000524 e0f4     +LDI R31 , HIGH ( _0x52 + ( 153 ) )
                 	__POINTW1MN _0x52,153
000525 93fa      	ST   -Y,R31
000526 93ea      	ST   -Y,R30
000527 e9e6      	LDI  R30,LOW(150)
000528 e0f0      	LDI  R31,HIGH(150)
000529 93fa      	ST   -Y,R31
00052a 93ea      	ST   -Y,R30
00052b e0a1      	LDI  R26,LOW(1)
00052c e0b0      	LDI  R27,0
00052d de97      	RCALL _AtCommand
                 ; 0000 0154   AtCommand("AT+CIPSTO=10\r\n",150,DEBUG);
                +
00052e e6e1     +LDI R30 , LOW ( _0x52 + ( 175 ) )
00052f e0f4     +LDI R31 , HIGH ( _0x52 + ( 175 ) )
                 	__POINTW1MN _0x52,175
000530 93fa      	ST   -Y,R31
000531 93ea      	ST   -Y,R30
000532 e9e6      	LDI  R30,LOW(150)
000533 e0f0      	LDI  R31,HIGH(150)
000534 93fa      	ST   -Y,R31
000535 93ea      	ST   -Y,R30
000536 e0a1      	LDI  R26,LOW(1)
000537 e0b0      	LDI  R27,0
000538 de8c      	RCALL _AtCommand
                 ; 0000 0155 
                 ; 0000 0156   AtCommand("AT+CIPSTATUS\r\n",100,DEBUG); // check if =2 got ip or =5 not
                +
000539 e7e0     +LDI R30 , LOW ( _0x52 + ( 190 ) )
00053a e0f4     +LDI R31 , HIGH ( _0x52 + ( 190 ) )
                 	__POINTW1MN _0x52,190
00053b 93fa      	ST   -Y,R31
00053c 93ea      	ST   -Y,R30
00053d e6e4      	LDI  R30,LOW(100)
00053e e0f0      	LDI  R31,HIGH(100)
00053f 93fa      	ST   -Y,R31
000540 93ea      	ST   -Y,R30
000541 e0a1      	LDI  R26,LOW(1)
000542 e0b0      	LDI  R27,0
000543 de81      	RCALL _AtCommand
                 ; 0000 0157   AtCommand("AT+CIFSR\r\n",100,DEBUG); // get ip address
                +
000544 e7ef     +LDI R30 , LOW ( _0x52 + ( 205 ) )
000545 e0f4     +LDI R31 , HIGH ( _0x52 + ( 205 ) )
                 	__POINTW1MN _0x52,205
000546 93fa      	ST   -Y,R31
000547 93ea      	ST   -Y,R30
000548 e6e4      	LDI  R30,LOW(100)
000549 e0f0      	LDI  R31,HIGH(100)
00054a 93fa      	ST   -Y,R31
00054b 93ea      	ST   -Y,R30
00054c e0a1      	LDI  R26,LOW(1)
00054d e0b0      	LDI  R27,0
00054e de76      	RCALL _AtCommand
                 ; 0000 0158   AtCommand("AT+CWJAP?\r\n",100,DEBUG);
                +
00054f e8ea     +LDI R30 , LOW ( _0x52 + ( 216 ) )
000550 e0f4     +LDI R31 , HIGH ( _0x52 + ( 216 ) )
                 	__POINTW1MN _0x52,216
000551 93fa      	ST   -Y,R31
000552 93ea      	ST   -Y,R30
000553 e6e4      	LDI  R30,LOW(100)
000554 e0f0      	LDI  R31,HIGH(100)
000555 93fa      	ST   -Y,R31
000556 93ea      	ST   -Y,R30
000557 e0a1      	LDI  R26,LOW(1)
000558 e0b0      	LDI  R27,0
000559 de6b      	RCALL _AtCommand
                 ; 0000 0159 
                 ; 0000 015A }
00055a 9508      	RET
                 
                 	.DSEG
                 _0x52:
0003b2           	.BYTE 0xE4
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 _0x2000003:
00055b 91e0 00c0 	LDS  R30,192
00055d 78e0      	ANDI R30,LOW(0x80)
00055e f3e1      	BREQ _0x2000003
00055f 91e0 00c6 	LDS  R30,198
000561 9508      	RET
                 _putchar:
000562 93aa      	ST   -Y,R26
                 _0x2000006:
000563 91e0 00c0 	LDS  R30,192
000565 72e0      	ANDI R30,LOW(0x20)
000566 f3e1      	BREQ _0x2000006
000567 81e8      	LD   R30,Y
000568 93e0 00c6 	STS  198,R30
00056a 9621      	ADIW R28,1
00056b 9508      	RET
                 _puts:
00056c 93ba      	ST   -Y,R27
00056d 93aa      	ST   -Y,R26
00056e 931a      	ST   -Y,R17
                 _0x2000009:
00056f 81a9      	LDD  R26,Y+1
000570 81ba      	LDD  R27,Y+1+1
000571 91ed      	LD   R30,X+
000572 83a9      	STD  Y+1,R26
000573 83ba      	STD  Y+1+1,R27
000574 2f1e      	MOV  R17,R30
000575 30e0      	CPI  R30,0
000576 f019      	BREQ _0x200000B
000577 2fa1      	MOV  R26,R17
000578 dfe9      	RCALL _putchar
000579 cff5      	RJMP _0x2000009
                 _0x200000B:
00057a e0aa      	LDI  R26,LOW(10)
00057b dfe6      	RCALL _putchar
00057c 8118      	LDD  R17,Y+0
00057d 9623      	ADIW R28,3
00057e 9508      	RET
                 _gets:
00057f 93ba      	ST   -Y,R27
000580 93aa      	ST   -Y,R26
000581 940e 0907 	CALL __SAVELOCR6
                +
000583 810e     +LDD R16 , Y + 6
000584 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
000585 8528     +LDD R18 , Y + 8
000586 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x200000F:
000587 2e00      	MOV  R0,R16
000588 2a01      	OR   R0,R17
000589 f0d9      	BREQ _0x2000011
                 _0x2000012:
00058a dfd0      	RCALL _getchar
00058b 2f5e      	MOV  R21,R30
00058c 3058      	CPI  R21,8
00058d f451      	BRNE _0x2000013
00058e 81ae      	LDD  R26,Y+6
00058f 81bf      	LDD  R27,Y+6+1
000590 170a      	CP   R16,R26
000591 071b      	CPC  R17,R27
000592 f420      	BRSH _0x2000014
                +
000593 5021     +SUBI R18 , LOW ( 1 )
000594 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
000595 5f0f     +SUBI R16 , LOW ( - 1 )
000596 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x2000014:
000597 cff2      	RJMP _0x2000012
                 _0x2000013:
000598 305a      	CPI  R21,10
000599 f059      	BREQ _0x2000011
00059a 933f      	PUSH R19
00059b 932f      	PUSH R18
                +
00059c 5f2f     +SUBI R18 , LOW ( - 1 )
00059d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00059e 2fe5      	MOV  R30,R21
00059f 91af      	POP  R26
0005a0 91bf      	POP  R27
0005a1 93ec      	ST   X,R30
                +
0005a2 5001     +SUBI R16 , LOW ( 1 )
0005a3 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0005a4 cfe2      	RJMP _0x200000F
                 _0x2000011:
0005a5 01d9      	MOVW R26,R18
0005a6 e0e0      	LDI  R30,LOW(0)
0005a7 93ec      	ST   X,R30
0005a8 85e8      	LDD  R30,Y+8
0005a9 85f9      	LDD  R31,Y+8+1
0005aa 940e 090e 	CALL __LOADLOCR6
0005ac 962a      	ADIW R28,10
0005ad 9508      	RET
                 _put_buff_G100:
0005ae 93ba      	ST   -Y,R27
0005af 93aa      	ST   -Y,R26
0005b0 931a      	ST   -Y,R17
0005b1 930a      	ST   -Y,R16
0005b2 81aa      	LDD  R26,Y+2
0005b3 81bb      	LDD  R27,Y+2+1
0005b4 9612      	ADIW R26,2
0005b5 940e 08d1 	CALL __GETW1P
0005b7 9730      	SBIW R30,0
0005b8 f159      	BREQ _0x2000016
0005b9 81aa      	LDD  R26,Y+2
0005ba 81bb      	LDD  R27,Y+2+1
0005bb 9614      	ADIW R26,4
0005bc 940e 08d1 	CALL __GETW1P
0005be 018f      	MOVW R16,R30
0005bf 9730      	SBIW R30,0
0005c0 f061      	BREQ _0x2000018
                +
0005c1 3002     +CPI R16 , LOW ( 2 )
0005c2 e0e0     +LDI R30 , HIGH ( 2 )
0005c3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0005c4 f0f0      	BRLO _0x2000019
0005c5 01f8      	MOVW R30,R16
0005c6 9731      	SBIW R30,1
0005c7 018f      	MOVW R16,R30
                +
0005c8 81aa     +LDD R26 , Y + 2
0005c9 81bb     +LDD R27 , Y + 2 + 1
0005ca 9614     +ADIW R26 , 4
0005cb 93ed     +ST X + , R30
0005cc 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000018:
0005cd 81aa      	LDD  R26,Y+2
0005ce 81bb      	LDD  R27,Y+2+1
0005cf 9612      	ADIW R26,2
0005d0 91ed      	LD   R30,X+
0005d1 91fd      	LD   R31,X+
0005d2 9631      	ADIW R30,1
0005d3 93fe      	ST   -X,R31
0005d4 93ee      	ST   -X,R30
0005d5 9731      	SBIW R30,1
0005d6 81ac      	LDD  R26,Y+4
0005d7 83a0      	STD  Z+0,R26
0005d8 81aa      	LDD  R26,Y+2
0005d9 81bb      	LDD  R27,Y+2+1
0005da 940e 08d1 	CALL __GETW1P
0005dc 23ff      	TST  R31
0005dd f02a      	BRMI _0x200001A
0005de 91ed      	LD   R30,X+
0005df 91fd      	LD   R31,X+
0005e0 9631      	ADIW R30,1
0005e1 93fe      	ST   -X,R31
0005e2 93ee      	ST   -X,R30
                 _0x200001A:
                 _0x2000019:
0005e3 c006      	RJMP _0x200001B
                 _0x2000016:
0005e4 81aa      	LDD  R26,Y+2
0005e5 81bb      	LDD  R27,Y+2+1
0005e6 efef      	LDI  R30,LOW(65535)
0005e7 efff      	LDI  R31,HIGH(65535)
0005e8 93ed      	ST   X+,R30
0005e9 93fc      	ST   X,R31
                 _0x200001B:
0005ea 8119      	LDD  R17,Y+1
0005eb 8108      	LDD  R16,Y+0
0005ec 9625      	ADIW R28,5
0005ed 9508      	RET
                 __print_G100:
0005ee 93ba      	ST   -Y,R27
0005ef 93aa      	ST   -Y,R26
0005f0 972c      	SBIW R28,12
0005f1 940e 0907 	CALL __SAVELOCR6
0005f3 e010      	LDI  R17,0
0005f4 89aa      	LDD  R26,Y+18
0005f5 89bb      	LDD  R27,Y+18+1
0005f6 e0e0      	LDI  R30,LOW(0)
0005f7 e0f0      	LDI  R31,HIGH(0)
0005f8 93ed      	ST   X+,R30
0005f9 93fc      	ST   X,R31
                 _0x200001C:
0005fa 8de8      	LDD  R30,Y+24
0005fb 8df9      	LDD  R31,Y+24+1
0005fc 9631      	ADIW R30,1
0005fd 8fe8      	STD  Y+24,R30
0005fe 8ff9      	STD  Y+24+1,R31
0005ff 9731      	SBIW R30,1
000600 91e4      	LPM  R30,Z
000601 2f2e      	MOV  R18,R30
000602 30e0      	CPI  R30,0
000603 f411      	BRNE PC+3
000604 940c 0802 	JMP _0x200001E
000606 2fe1      	MOV  R30,R17
000607 30e0      	CPI  R30,0
000608 f459      	BRNE _0x2000022
000609 3225      	CPI  R18,37
00060a f411      	BRNE _0x2000023
00060b e011      	LDI  R17,LOW(1)
00060c c006      	RJMP _0x2000024
                 _0x2000023:
00060d 932a      	ST   -Y,R18
00060e 89ab      	LDD  R26,Y+19
00060f 89bc      	LDD  R27,Y+19+1
000610 89ed      	LDD  R30,Y+21
000611 89fe      	LDD  R31,Y+21+1
000612 9509      	ICALL
                 _0x2000024:
000613 c1ed      	RJMP _0x2000021
                 _0x2000022:
000614 30e1      	CPI  R30,LOW(0x1)
000615 f4e1      	BRNE _0x2000025
000616 3225      	CPI  R18,37
000617 f439      	BRNE _0x2000026
000618 932a      	ST   -Y,R18
000619 89ab      	LDD  R26,Y+19
00061a 89bc      	LDD  R27,Y+19+1
00061b 89ed      	LDD  R30,Y+21
00061c 89fe      	LDD  R31,Y+21+1
00061d 9509      	ICALL
00061e c1e1      	RJMP _0x20000ED
                 _0x2000026:
00061f e012      	LDI  R17,LOW(2)
000620 e0e0      	LDI  R30,LOW(0)
000621 8be9      	STD  Y+17,R30
000622 e000      	LDI  R16,LOW(0)
000623 322d      	CPI  R18,45
000624 f411      	BRNE _0x2000027
000625 e001      	LDI  R16,LOW(1)
000626 c1da      	RJMP _0x2000021
                 _0x2000027:
000627 322b      	CPI  R18,43
000628 f419      	BRNE _0x2000028
000629 e2eb      	LDI  R30,LOW(43)
00062a 8be9      	STD  Y+17,R30
00062b c1d5      	RJMP _0x2000021
                 _0x2000028:
00062c 3220      	CPI  R18,32
00062d f419      	BRNE _0x2000029
00062e e2e0      	LDI  R30,LOW(32)
00062f 8be9      	STD  Y+17,R30
000630 c1d0      	RJMP _0x2000021
                 _0x2000029:
000631 c002      	RJMP _0x200002A
                 _0x2000025:
000632 30e2      	CPI  R30,LOW(0x2)
000633 f439      	BRNE _0x200002B
                 _0x200002A:
000634 e050      	LDI  R21,LOW(0)
000635 e013      	LDI  R17,LOW(3)
000636 3320      	CPI  R18,48
000637 f411      	BRNE _0x200002C
000638 6800      	ORI  R16,LOW(128)
000639 c1c7      	RJMP _0x2000021
                 _0x200002C:
00063a c002      	RJMP _0x200002D
                 _0x200002B:
00063b 30e3      	CPI  R30,LOW(0x3)
00063c f491      	BRNE _0x200002E
                 _0x200002D:
00063d 3320      	CPI  R18,48
00063e f010      	BRLO _0x2000030
00063f 332a      	CPI  R18,58
000640 f008      	BRLO _0x2000031
                 _0x2000030:
000641 c007      	RJMP _0x200002F
                 _0x2000031:
000642 e0aa      	LDI  R26,LOW(10)
000643 9f5a      	MUL  R21,R26
000644 2d50      	MOV  R21,R0
000645 2fe2      	MOV  R30,R18
000646 53e0      	SUBI R30,LOW(48)
000647 0f5e      	ADD  R21,R30
000648 c1b8      	RJMP _0x2000021
                 _0x200002F:
000649 e040      	LDI  R20,LOW(0)
00064a 322e      	CPI  R18,46
00064b f411      	BRNE _0x2000032
00064c e014      	LDI  R17,LOW(4)
00064d c1b3      	RJMP _0x2000021
                 _0x2000032:
00064e c00e      	RJMP _0x2000033
                 _0x200002E:
00064f 30e4      	CPI  R30,LOW(0x4)
000650 f491      	BRNE _0x2000035
000651 3320      	CPI  R18,48
000652 f010      	BRLO _0x2000037
000653 332a      	CPI  R18,58
000654 f008      	BRLO _0x2000038
                 _0x2000037:
000655 c007      	RJMP _0x2000036
                 _0x2000038:
000656 e0aa      	LDI  R26,LOW(10)
000657 9f4a      	MUL  R20,R26
000658 2d40      	MOV  R20,R0
000659 2fe2      	MOV  R30,R18
00065a 53e0      	SUBI R30,LOW(48)
00065b 0f4e      	ADD  R20,R30
00065c c1a4      	RJMP _0x2000021
                 _0x2000036:
                 _0x2000033:
00065d 362c      	CPI  R18,108
00065e f419      	BRNE _0x2000039
00065f 6002      	ORI  R16,LOW(2)
000660 e015      	LDI  R17,LOW(5)
000661 c19f      	RJMP _0x2000021
                 _0x2000039:
000662 c004      	RJMP _0x200003A
                 _0x2000035:
000663 30e5      	CPI  R30,LOW(0x5)
000664 f011      	BREQ PC+3
000665 940c 0801 	JMP _0x2000021
                 _0x200003A:
000667 2fe2      	MOV  R30,R18
000668 36e3      	CPI  R30,LOW(0x63)
000669 f469      	BRNE _0x200003F
00066a 89ee      	LDD  R30,Y+22
00066b 89ff      	LDD  R31,Y+22+1
00066c 9734      	SBIW R30,4
00066d 8bee      	STD  Y+22,R30
00066e 8bff      	STD  Y+22+1,R31
00066f 81a4      	LDD  R26,Z+4
000670 93aa      	ST   -Y,R26
000671 89ab      	LDD  R26,Y+19
000672 89bc      	LDD  R27,Y+19+1
000673 89ed      	LDD  R30,Y+21
000674 89fe      	LDD  R31,Y+21+1
000675 9509      	ICALL
000676 c189      	RJMP _0x2000040
                 _0x200003F:
000677 37e3      	CPI  R30,LOW(0x73)
000678 f491      	BRNE _0x2000042
000679 89ee      	LDD  R30,Y+22
00067a 89ff      	LDD  R31,Y+22+1
00067b 9734      	SBIW R30,4
00067c 8bee      	STD  Y+22,R30
00067d 8bff      	STD  Y+22+1,R31
00067e 89ae      	LDD  R26,Y+22
00067f 89bf      	LDD  R27,Y+22+1
000680 9614      	ADIW R26,4
000681 940e 08d1 	CALL __GETW1P
000683 83ee      	STD  Y+6,R30
000684 83ff      	STD  Y+6+1,R31
000685 81ae      	LDD  R26,Y+6
000686 81bf      	LDD  R27,Y+6+1
000687 940e 0853 	CALL _strlen
000689 2f1e      	MOV  R17,R30
00068a c014      	RJMP _0x2000043
                 _0x2000042:
00068b 37e0      	CPI  R30,LOW(0x70)
00068c f4f1      	BRNE _0x2000045
00068d 89ee      	LDD  R30,Y+22
00068e 89ff      	LDD  R31,Y+22+1
00068f 9734      	SBIW R30,4
000690 8bee      	STD  Y+22,R30
000691 8bff      	STD  Y+22+1,R31
000692 89ae      	LDD  R26,Y+22
000693 89bf      	LDD  R27,Y+22+1
000694 9614      	ADIW R26,4
000695 940e 08d1 	CALL __GETW1P
000697 83ee      	STD  Y+6,R30
000698 83ff      	STD  Y+6+1,R31
000699 81ae      	LDD  R26,Y+6
00069a 81bf      	LDD  R27,Y+6+1
00069b 940e 085f 	CALL _strlenf
00069d 2f1e      	MOV  R17,R30
00069e 6008      	ORI  R16,LOW(8)
                 _0x2000043:
00069f 770f      	ANDI R16,LOW(127)
0006a0 3040      	CPI  R20,0
0006a1 f011      	BREQ _0x2000047
0006a2 1741      	CP   R20,R17
0006a3 f008      	BRLO _0x2000048
                 _0x2000047:
0006a4 c001      	RJMP _0x2000046
                 _0x2000048:
0006a5 2f14      	MOV  R17,R20
                 _0x2000046:
0006a6 e040      	LDI  R20,LOW(0)
0006a7 e0e0      	LDI  R30,LOW(0)
0006a8 8be8      	STD  Y+16,R30
0006a9 e030      	LDI  R19,LOW(0)
0006aa c089      	RJMP _0x2000049
                 _0x2000045:
0006ab 36e4      	CPI  R30,LOW(0x64)
0006ac f011      	BREQ _0x200004C
0006ad 36e9      	CPI  R30,LOW(0x69)
0006ae f411      	BRNE _0x200004D
                 _0x200004C:
0006af 6004      	ORI  R16,LOW(4)
0006b0 c002      	RJMP _0x200004E
                 _0x200004D:
0006b1 37e5      	CPI  R30,LOW(0x75)
0006b2 f4c1      	BRNE _0x200004F
                 _0x200004E:
0006b3 e0ea      	LDI  R30,LOW(10)
0006b4 8be8      	STD  Y+16,R30
0006b5 ff01      	SBRS R16,1
0006b6 c00a      	RJMP _0x2000050
                +
0006b7 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0006b8 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0006b9 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0006ba e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
                +
0006bb 87e8     +STD Y + 8 , R30
0006bc 87f9     +STD Y + 8 + 1 , R31
0006bd 876a     +STD Y + 8 + 2 , R22
0006be 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
0006bf e01a      	LDI  R17,LOW(10)
0006c0 c029      	RJMP _0x2000051
                 _0x2000050:
                +
0006c1 e1e0     +LDI R30 , LOW ( 0x2710 )
0006c2 e2f7     +LDI R31 , HIGH ( 0x2710 )
0006c3 e060     +LDI R22 , BYTE3 ( 0x2710 )
0006c4 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
                +
0006c5 87e8     +STD Y + 8 , R30
0006c6 87f9     +STD Y + 8 + 1 , R31
0006c7 876a     +STD Y + 8 + 2 , R22
0006c8 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
0006c9 e015      	LDI  R17,LOW(5)
0006ca c01f      	RJMP _0x2000051
                 _0x200004F:
0006cb 35e8      	CPI  R30,LOW(0x58)
0006cc f411      	BRNE _0x2000053
0006cd 6008      	ORI  R16,LOW(8)
0006ce c004      	RJMP _0x2000054
                 _0x2000053:
0006cf 37e8      	CPI  R30,LOW(0x78)
0006d0 f011      	BREQ PC+3
0006d1 940c 0800 	JMP _0x2000092
                 _0x2000054:
0006d3 e1e0      	LDI  R30,LOW(16)
0006d4 8be8      	STD  Y+16,R30
0006d5 ff01      	SBRS R16,1
0006d6 c00a      	RJMP _0x2000056
                +
0006d7 e0e0     +LDI R30 , LOW ( 0x10000000 )
0006d8 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0006d9 e060     +LDI R22 , BYTE3 ( 0x10000000 )
0006da e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
                +
0006db 87e8     +STD Y + 8 , R30
0006dc 87f9     +STD Y + 8 + 1 , R31
0006dd 876a     +STD Y + 8 + 2 , R22
0006de 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
0006df e018      	LDI  R17,LOW(8)
0006e0 c009      	RJMP _0x2000051
                 _0x2000056:
                +
0006e1 e0e0     +LDI R30 , LOW ( 0x1000 )
0006e2 e1f0     +LDI R31 , HIGH ( 0x1000 )
0006e3 e060     +LDI R22 , BYTE3 ( 0x1000 )
0006e4 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
                +
0006e5 87e8     +STD Y + 8 , R30
0006e6 87f9     +STD Y + 8 + 1 , R31
0006e7 876a     +STD Y + 8 + 2 , R22
0006e8 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
0006e9 e014      	LDI  R17,LOW(4)
                 _0x2000051:
0006ea 3040      	CPI  R20,0
0006eb f011      	BREQ _0x2000057
0006ec 770f      	ANDI R16,LOW(127)
0006ed c001      	RJMP _0x2000058
                 _0x2000057:
0006ee e041      	LDI  R20,LOW(1)
                 _0x2000058:
0006ef ff01      	SBRS R16,1
0006f0 c00b      	RJMP _0x2000059
0006f1 89ee      	LDD  R30,Y+22
0006f2 89ff      	LDD  R31,Y+22+1
0006f3 9734      	SBIW R30,4
0006f4 8bee      	STD  Y+22,R30
0006f5 8bff      	STD  Y+22+1,R31
0006f6 89ae      	LDD  R26,Y+22
0006f7 89bf      	LDD  R27,Y+22+1
0006f8 9614      	ADIW R26,4
0006f9 940e 08d5 	CALL __GETD1P
0006fb c01b      	RJMP _0x20000EE
                 _0x2000059:
0006fc ff02      	SBRS R16,2
0006fd c00d      	RJMP _0x200005B
0006fe 89ee      	LDD  R30,Y+22
0006ff 89ff      	LDD  R31,Y+22+1
000700 9734      	SBIW R30,4
000701 8bee      	STD  Y+22,R30
000702 8bff      	STD  Y+22+1,R31
000703 89ae      	LDD  R26,Y+22
000704 89bf      	LDD  R27,Y+22+1
000705 9614      	ADIW R26,4
000706 940e 08d1 	CALL __GETW1P
000708 940e 08a3 	CALL __CWD1
00070a c00c      	RJMP _0x20000EE
                 _0x200005B:
00070b 89ee      	LDD  R30,Y+22
00070c 89ff      	LDD  R31,Y+22+1
00070d 9734      	SBIW R30,4
00070e 8bee      	STD  Y+22,R30
00070f 8bff      	STD  Y+22+1,R31
000710 89ae      	LDD  R26,Y+22
000711 89bf      	LDD  R27,Y+22+1
000712 9614      	ADIW R26,4
000713 940e 08d1 	CALL __GETW1P
000715 2766      	CLR  R22
000716 2777      	CLR  R23
                 _0x20000EE:
                +
000717 87ec     +STD Y + 12 , R30
000718 87fd     +STD Y + 12 + 1 , R31
000719 876e     +STD Y + 12 + 2 , R22
00071a 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00071b ff02      	SBRS R16,2
00071c c016      	RJMP _0x200005D
00071d 85af      	LDD  R26,Y+15
00071e 23aa      	TST  R26
00071f f462      	BRPL _0x200005E
                +
000720 85ec     +LDD R30 , Y + 12
000721 85fd     +LDD R31 , Y + 12 + 1
000722 856e     +LDD R22 , Y + 12 + 2
000723 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000724 940e 089b 	CALL __ANEGD1
                +
000726 87ec     +STD Y + 12 , R30
000727 87fd     +STD Y + 12 + 1 , R31
000728 876e     +STD Y + 12 + 2 , R22
000729 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00072a e2ed      	LDI  R30,LOW(45)
00072b 8be9      	STD  Y+17,R30
                 _0x200005E:
00072c 89e9      	LDD  R30,Y+17
00072d 30e0      	CPI  R30,0
00072e f019      	BREQ _0x200005F
00072f 5f1f      	SUBI R17,-LOW(1)
000730 5f4f      	SUBI R20,-LOW(1)
000731 c001      	RJMP _0x2000060
                 _0x200005F:
000732 7f0b      	ANDI R16,LOW(251)
                 _0x2000060:
                 _0x200005D:
000733 2f34      	MOV  R19,R20
                 _0x2000049:
000734 fd00      	SBRC R16,0
000735 c018      	RJMP _0x2000061
                 _0x2000062:
000736 1715      	CP   R17,R21
000737 f410      	BRSH _0x2000065
000738 1735      	CP   R19,R21
000739 f008      	BRLO _0x2000066
                 _0x2000065:
00073a c013      	RJMP _0x2000064
                 _0x2000066:
00073b ff07      	SBRS R16,7
00073c c008      	RJMP _0x2000067
00073d ff02      	SBRS R16,2
00073e c004      	RJMP _0x2000068
00073f 7f0b      	ANDI R16,LOW(251)
000740 8929      	LDD  R18,Y+17
000741 5011      	SUBI R17,LOW(1)
000742 c001      	RJMP _0x2000069
                 _0x2000068:
000743 e320      	LDI  R18,LOW(48)
                 _0x2000069:
000744 c001      	RJMP _0x200006A
                 _0x2000067:
000745 e220      	LDI  R18,LOW(32)
                 _0x200006A:
000746 932a      	ST   -Y,R18
000747 89ab      	LDD  R26,Y+19
000748 89bc      	LDD  R27,Y+19+1
000749 89ed      	LDD  R30,Y+21
00074a 89fe      	LDD  R31,Y+21+1
00074b 9509      	ICALL
00074c 5051      	SUBI R21,LOW(1)
00074d cfe8      	RJMP _0x2000062
                 _0x2000064:
                 _0x2000061:
                 _0x200006B:
00074e 1714      	CP   R17,R20
00074f f4e0      	BRSH _0x200006D
000750 6100      	ORI  R16,LOW(16)
000751 ff02      	SBRS R16,2
000752 c00d      	RJMP _0x200006E
000753 7f0b      	ANDI R16,LOW(251)
000754 89e9      	LDD  R30,Y+17
000755 93ea      	ST   -Y,R30
000756 89ab      	LDD  R26,Y+19
000757 89bc      	LDD  R27,Y+19+1
000758 89ed      	LDD  R30,Y+21
000759 89fe      	LDD  R31,Y+21+1
00075a 9509      	ICALL
00075b 3050      	CPI  R21,0
00075c f009      	BREQ _0x200006F
00075d 5051      	SUBI R21,LOW(1)
                 _0x200006F:
00075e 5011      	SUBI R17,LOW(1)
00075f 5041      	SUBI R20,LOW(1)
                 _0x200006E:
000760 e3e0      	LDI  R30,LOW(48)
000761 93ea      	ST   -Y,R30
000762 89ab      	LDD  R26,Y+19
000763 89bc      	LDD  R27,Y+19+1
000764 89ed      	LDD  R30,Y+21
000765 89fe      	LDD  R31,Y+21+1
000766 9509      	ICALL
000767 3050      	CPI  R21,0
000768 f009      	BREQ _0x2000070
000769 5051      	SUBI R21,LOW(1)
                 _0x2000070:
00076a 5041      	SUBI R20,LOW(1)
00076b cfe2      	RJMP _0x200006B
                 _0x200006D:
00076c 2f31      	MOV  R19,R17
00076d 89e8      	LDD  R30,Y+16
00076e 30e0      	CPI  R30,0
00076f f4d9      	BRNE _0x2000071
                 _0x2000072:
000770 3030      	CPI  R19,0
000771 f0c1      	BREQ _0x2000074
000772 ff03      	SBRS R16,3
000773 c006      	RJMP _0x2000075
000774 81ee      	LDD  R30,Y+6
000775 81ff      	LDD  R31,Y+6+1
000776 9125      	LPM  R18,Z+
000777 83ee      	STD  Y+6,R30
000778 83ff      	STD  Y+6+1,R31
000779 c005      	RJMP _0x2000076
                 _0x2000075:
00077a 81ae      	LDD  R26,Y+6
00077b 81bf      	LDD  R27,Y+6+1
00077c 912d      	LD   R18,X+
00077d 83ae      	STD  Y+6,R26
00077e 83bf      	STD  Y+6+1,R27
                 _0x2000076:
00077f 932a      	ST   -Y,R18
000780 89ab      	LDD  R26,Y+19
000781 89bc      	LDD  R27,Y+19+1
000782 89ed      	LDD  R30,Y+21
000783 89fe      	LDD  R31,Y+21+1
000784 9509      	ICALL
000785 3050      	CPI  R21,0
000786 f009      	BREQ _0x2000077
000787 5051      	SUBI R21,LOW(1)
                 _0x2000077:
000788 5031      	SUBI R19,LOW(1)
000789 cfe6      	RJMP _0x2000072
                 _0x2000074:
00078a c068      	RJMP _0x2000078
                 _0x2000071:
                 _0x200007A:
                +
00078b 85e8     +LDD R30 , Y + 8
00078c 85f9     +LDD R31 , Y + 8 + 1
00078d 856a     +LDD R22 , Y + 8 + 2
00078e 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
00078f 85ac     +LDD R26 , Y + 12
000790 85bd     +LDD R27 , Y + 12 + 1
000791 858e     +LDD R24 , Y + 12 + 2
000792 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000793 940e 08a8 	CALL __DIVD21U
000795 2f2e      	MOV  R18,R30
000796 302a      	CPI  R18,10
000797 f030      	BRLO _0x200007C
000798 ff03      	SBRS R16,3
000799 c002      	RJMP _0x200007D
00079a 5c29      	SUBI R18,-LOW(55)
00079b c001      	RJMP _0x200007E
                 _0x200007D:
00079c 5a29      	SUBI R18,-LOW(87)
                 _0x200007E:
00079d c001      	RJMP _0x200007F
                 _0x200007C:
00079e 5d20      	SUBI R18,-LOW(48)
                 _0x200007F:
00079f fd04      	SBRC R16,4
0007a0 c028      	RJMP _0x2000081
0007a1 3321      	CPI  R18,49
0007a2 f460      	BRSH _0x2000083
                +
0007a3 85a8     +LDD R26 , Y + 8
0007a4 85b9     +LDD R27 , Y + 8 + 1
0007a5 858a     +LDD R24 , Y + 8 + 2
0007a6 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
                +
0007a7 30a1     +CPI R26 , LOW ( 0x1 )
0007a8 e0e0     +LDI R30 , HIGH ( 0x1 )
0007a9 07be     +CPC R27 , R30
0007aa e0e0     +LDI R30 , BYTE3 ( 0x1 )
0007ab 078e     +CPC R24 , R30
0007ac e0e0     +LDI R30 , BYTE4 ( 0x1 )
0007ad 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0007ae f409      	BRNE _0x2000082
                 _0x2000083:
0007af c00b      	RJMP _0x2000085
                 _0x2000082:
0007b0 1743      	CP   R20,R19
0007b1 f440      	BRSH _0x20000EF
0007b2 1753      	CP   R21,R19
0007b3 f010      	BRLO _0x2000088
0007b4 ff00      	SBRS R16,0
0007b5 c001      	RJMP _0x2000089
                 _0x2000088:
0007b6 c01b      	RJMP _0x2000087
                 _0x2000089:
0007b7 e220      	LDI  R18,LOW(32)
0007b8 ff07      	SBRS R16,7
0007b9 c00f      	RJMP _0x200008A
                 _0x20000EF:
0007ba e320      	LDI  R18,LOW(48)
                 _0x2000085:
0007bb 6100      	ORI  R16,LOW(16)
0007bc ff02      	SBRS R16,2
0007bd c00b      	RJMP _0x200008B
0007be 7f0b      	ANDI R16,LOW(251)
0007bf 89e9      	LDD  R30,Y+17
0007c0 93ea      	ST   -Y,R30
0007c1 89ab      	LDD  R26,Y+19
0007c2 89bc      	LDD  R27,Y+19+1
0007c3 89ed      	LDD  R30,Y+21
0007c4 89fe      	LDD  R31,Y+21+1
0007c5 9509      	ICALL
0007c6 3050      	CPI  R21,0
0007c7 f009      	BREQ _0x200008C
0007c8 5051      	SUBI R21,LOW(1)
                 _0x200008C:
                 _0x200008B:
                 _0x200008A:
                 _0x2000081:
0007c9 932a      	ST   -Y,R18
0007ca 89ab      	LDD  R26,Y+19
0007cb 89bc      	LDD  R27,Y+19+1
0007cc 89ed      	LDD  R30,Y+21
0007cd 89fe      	LDD  R31,Y+21+1
0007ce 9509      	ICALL
0007cf 3050      	CPI  R21,0
0007d0 f009      	BREQ _0x200008D
0007d1 5051      	SUBI R21,LOW(1)
                 _0x200008D:
                 _0x2000087:
0007d2 5031      	SUBI R19,LOW(1)
                +
0007d3 85e8     +LDD R30 , Y + 8
0007d4 85f9     +LDD R31 , Y + 8 + 1
0007d5 856a     +LDD R22 , Y + 8 + 2
0007d6 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
0007d7 85ac     +LDD R26 , Y + 12
0007d8 85bd     +LDD R27 , Y + 12 + 1
0007d9 858e     +LDD R24 , Y + 12 + 2
0007da 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0007db 940e 08cd 	CALL __MODD21U
                +
0007dd 87ec     +STD Y + 12 , R30
0007de 87fd     +STD Y + 12 + 1 , R31
0007df 876e     +STD Y + 12 + 2 , R22
0007e0 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0007e1 89e8      	LDD  R30,Y+16
                +
0007e2 85a8     +LDD R26 , Y + 8
0007e3 85b9     +LDD R27 , Y + 8 + 1
0007e4 858a     +LDD R24 , Y + 8 + 2
0007e5 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
0007e6 27ff      	CLR  R31
0007e7 2766      	CLR  R22
0007e8 2777      	CLR  R23
0007e9 940e 08a8 	CALL __DIVD21U
                +
0007eb 87e8     +STD Y + 8 , R30
0007ec 87f9     +STD Y + 8 + 1 , R31
0007ed 876a     +STD Y + 8 + 2 , R22
0007ee 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
0007ef 940e 08f9 	CALL __CPD10
0007f1 f009      	BREQ _0x200007B
0007f2 cf98      	RJMP _0x200007A
                 _0x200007B:
                 _0x2000078:
0007f3 ff00      	SBRS R16,0
0007f4 c00b      	RJMP _0x200008E
                 _0x200008F:
0007f5 3050      	CPI  R21,0
0007f6 f049      	BREQ _0x2000091
0007f7 5051      	SUBI R21,LOW(1)
0007f8 e2e0      	LDI  R30,LOW(32)
0007f9 93ea      	ST   -Y,R30
0007fa 89ab      	LDD  R26,Y+19
0007fb 89bc      	LDD  R27,Y+19+1
0007fc 89ed      	LDD  R30,Y+21
0007fd 89fe      	LDD  R31,Y+21+1
0007fe 9509      	ICALL
0007ff cff5      	RJMP _0x200008F
                 _0x2000091:
                 _0x200008E:
                 _0x2000092:
                 _0x2000040:
                 _0x20000ED:
000800 e010      	LDI  R17,LOW(0)
                 _0x2000021:
000801 cdf8      	RJMP _0x200001C
                 _0x200001E:
000802 89aa      	LDD  R26,Y+18
000803 89bb      	LDD  R27,Y+18+1
000804 940e 08d1 	CALL __GETW1P
000806 940e 090e 	CALL __LOADLOCR6
000808 966a      	ADIW R28,26
000809 9508      	RET
                 _sprintf:
00080a 92ff      	PUSH R15
00080b 2ef8      	MOV  R15,R24
00080c 9726      	SBIW R28,6
00080d 940e 0909 	CALL __SAVELOCR4
00080f 01de      	MOVW R26,R28
000810 961c      	ADIW R26,12
000811 940e 088d 	CALL __ADDW2R15
000813 940e 08d1 	CALL __GETW1P
000815 9730      	SBIW R30,0
000816 f419      	BRNE _0x2000093
000817 efef      	LDI  R30,LOW(65535)
000818 efff      	LDI  R31,HIGH(65535)
000819 c027      	RJMP _0x2060001
                 _0x2000093:
00081a 01de      	MOVW R26,R28
00081b 9616      	ADIW R26,6
00081c 940e 088d 	CALL __ADDW2R15
00081e 018d      	MOVW R16,R26
00081f 01de      	MOVW R26,R28
000820 961c      	ADIW R26,12
000821 940e 088d 	CALL __ADDW2R15
000823 940e 08d1 	CALL __GETW1P
000825 83ee      	STD  Y+6,R30
000826 83ff      	STD  Y+6+1,R31
000827 e0e0      	LDI  R30,LOW(0)
000828 87e8      	STD  Y+8,R30
000829 87e9      	STD  Y+8+1,R30
00082a 01de      	MOVW R26,R28
00082b 961a      	ADIW R26,10
00082c 940e 088d 	CALL __ADDW2R15
00082e 940e 08d1 	CALL __GETW1P
000830 93fa      	ST   -Y,R31
000831 93ea      	ST   -Y,R30
000832 931a      	ST   -Y,R17
000833 930a      	ST   -Y,R16
000834 eaee      	LDI  R30,LOW(_put_buff_G100)
000835 e0f5      	LDI  R31,HIGH(_put_buff_G100)
000836 93fa      	ST   -Y,R31
000837 93ea      	ST   -Y,R30
000838 01de      	MOVW R26,R28
000839 961a      	ADIW R26,10
00083a ddb3      	RCALL __print_G100
00083b 019f      	MOVW R18,R30
00083c 81ae      	LDD  R26,Y+6
00083d 81bf      	LDD  R27,Y+6+1
00083e e0e0      	LDI  R30,LOW(0)
00083f 93ec      	ST   X,R30
000840 01f9      	MOVW R30,R18
                 _0x2060001:
000841 940e 0910 	CALL __LOADLOCR4
000843 962a      	ADIW R28,10
000844 90ff      	POP  R15
000845 9508      	RET
                 
                 	.CSEG
                 _strcpy:
000846 93ba      	ST   -Y,R27
000847 93aa      	ST   -Y,R26
000848 91e9          ld   r30,y+
000849 91f9          ld   r31,y+
00084a 91a9          ld   r26,y+
00084b 91b9          ld   r27,y+
00084c 01cd          movw r24,r26
                 strcpy0:
00084d 9161          ld   r22,z+
00084e 936d          st   x+,r22
00084f 2366          tst  r22
000850 f7e1          brne strcpy0
000851 01fc          movw r30,r24
000852 9508          ret
                 _strlen:
000853 93ba      	ST   -Y,R27
000854 93aa      	ST   -Y,R26
000855 91a9          ld   r26,y+
000856 91b9          ld   r27,y+
000857 27ee          clr  r30
000858 27ff          clr  r31
                 strlen0:
000859 916d          ld   r22,x+
00085a 2366          tst  r22
00085b f011          breq strlen1
00085c 9631          adiw r30,1
00085d cffb          rjmp strlen0
                 strlen1:
00085e 9508          ret
                 _strlenf:
00085f 93ba      	ST   -Y,R27
000860 93aa      	ST   -Y,R26
000861 27aa          clr  r26
000862 27bb          clr  r27
000863 91e9          ld   r30,y+
000864 91f9          ld   r31,y+
                 strlenf0:
000865 9005      	lpm  r0,z+
000866 2000          tst  r0
000867 f011          breq strlenf1
000868 9611          adiw r26,1
000869 cffb          rjmp strlenf0
                 strlenf1:
00086a 01fd          movw r30,r26
00086b 9508          ret
                 _strstr:
00086c 93ba      	ST   -Y,R27
00086d 93aa      	ST   -Y,R26
00086e 81aa          ldd  r26,y+2
00086f 81bb          ldd  r27,y+3
000870 01cd          movw r24,r26
                 strstr0:
000871 81e8          ld   r30,y
000872 81f9          ldd  r31,y+1
                 strstr1:
000873 9171          ld   r23,z+
000874 2377          tst  r23
000875 f411          brne strstr2
000876 01fc          movw r30,r24
000877 c009          rjmp strstr3
                 strstr2:
000878 916d          ld   r22,x+
000879 1767          cp   r22,r23
00087a f3c1          breq strstr1
00087b 9601          adiw r24,1
00087c 01dc          movw r26,r24
00087d 2366          tst  r22
00087e f791          brne strstr0
00087f 27ee          clr  r30
000880 27ff          clr  r31
                 strstr3:
000881 9624      	ADIW R28,4
000882 9508      	RET
                 
                 	.CSEG
                 
                 	.DSEG
                 _millis:
000496           	.BYTE 0x4
                 _previousMillis:
00049a           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
000883 9610      	adiw r26,0
000884 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000885 ec8d     +LDI R24 , LOW ( 0xACD )
000886 e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
000887 9701     +SBIW R24 , 1
000888 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
000889 95a8      	wdr
00088a 9711      	sbiw r26,1
00088b f7c9      	brne __delay_ms0
                 __delay_ms1:
00088c 9508      	ret
                 
                 __ADDW2R15:
00088d 2400      	CLR  R0
00088e 0daf      	ADD  R26,R15
00088f 1db0      	ADC  R27,R0
000890 9508      	RET
                 
                 __ADDD21:
000891 0fae      	ADD  R26,R30
000892 1fbf      	ADC  R27,R31
000893 1f86      	ADC  R24,R22
000894 1f97      	ADC  R25,R23
000895 9508      	RET
                 
                 __SUBD12:
000896 1bea      	SUB  R30,R26
000897 0bfb      	SBC  R31,R27
000898 0b68      	SBC  R22,R24
000899 0b79      	SBC  R23,R25
00089a 9508      	RET
                 
                 __ANEGD1:
00089b 95f0      	COM  R31
00089c 9560      	COM  R22
00089d 9570      	COM  R23
00089e 95e1      	NEG  R30
00089f 4fff      	SBCI R31,-1
0008a0 4f6f      	SBCI R22,-1
0008a1 4f7f      	SBCI R23,-1
0008a2 9508      	RET
                 
                 __CWD1:
0008a3 2f6f      	MOV  R22,R31
0008a4 0f66      	ADD  R22,R22
0008a5 0b66      	SBC  R22,R22
0008a6 2f76      	MOV  R23,R22
0008a7 9508      	RET
                 
                 __DIVD21U:
0008a8 933f      	PUSH R19
0008a9 934f      	PUSH R20
0008aa 935f      	PUSH R21
0008ab 2400      	CLR  R0
0008ac 2411      	CLR  R1
0008ad 2744      	CLR  R20
0008ae 2755      	CLR  R21
0008af e230      	LDI  R19,32
                 __DIVD21U1:
0008b0 0faa      	LSL  R26
0008b1 1fbb      	ROL  R27
0008b2 1f88      	ROL  R24
0008b3 1f99      	ROL  R25
0008b4 1c00      	ROL  R0
0008b5 1c11      	ROL  R1
0008b6 1f44      	ROL  R20
0008b7 1f55      	ROL  R21
0008b8 1a0e      	SUB  R0,R30
0008b9 0a1f      	SBC  R1,R31
0008ba 0b46      	SBC  R20,R22
0008bb 0b57      	SBC  R21,R23
0008bc f428      	BRCC __DIVD21U2
0008bd 0e0e      	ADD  R0,R30
0008be 1e1f      	ADC  R1,R31
0008bf 1f46      	ADC  R20,R22
0008c0 1f57      	ADC  R21,R23
0008c1 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0008c2 60a1      	SBR  R26,1
                 __DIVD21U3:
0008c3 953a      	DEC  R19
0008c4 f759      	BRNE __DIVD21U1
0008c5 01fd      	MOVW R30,R26
0008c6 01bc      	MOVW R22,R24
0008c7 01d0      	MOVW R26,R0
0008c8 01ca      	MOVW R24,R20
0008c9 915f      	POP  R21
0008ca 914f      	POP  R20
0008cb 913f      	POP  R19
0008cc 9508      	RET
                 
                 __MODD21U:
0008cd dfda      	RCALL __DIVD21U
0008ce 01fd      	MOVW R30,R26
0008cf 01bc      	MOVW R22,R24
0008d0 9508      	RET
                 
                 __GETW1P:
0008d1 91ed      	LD   R30,X+
0008d2 91fc      	LD   R31,X
0008d3 9711      	SBIW R26,1
0008d4 9508      	RET
                 
                 __GETD1P:
0008d5 91ed      	LD   R30,X+
0008d6 91fd      	LD   R31,X+
0008d7 916d      	LD   R22,X+
0008d8 917c      	LD   R23,X
0008d9 9713      	SBIW R26,3
0008da 9508      	RET
                 
                 __GETD1P_INC:
0008db 91ed      	LD   R30,X+
0008dc 91fd      	LD   R31,X+
0008dd 916d      	LD   R22,X+
0008de 917d      	LD   R23,X+
0008df 9508      	RET
                 
                 __PUTDP1_DEC:
0008e0 937e      	ST   -X,R23
0008e1 936e      	ST   -X,R22
0008e2 93fe      	ST   -X,R31
0008e3 93ee      	ST   -X,R30
0008e4 9508      	RET
                 
                 __GETD1S0:
0008e5 81e8      	LD   R30,Y
0008e6 81f9      	LDD  R31,Y+1
0008e7 816a      	LDD  R22,Y+2
0008e8 817b      	LDD  R23,Y+3
0008e9 9508      	RET
                 
                 __GETD2S0:
0008ea 81a8      	LD   R26,Y
0008eb 81b9      	LDD  R27,Y+1
0008ec 818a      	LDD  R24,Y+2
0008ed 819b      	LDD  R25,Y+3
0008ee 9508      	RET
                 
                 __PUTD1S0:
0008ef 83e8      	ST   Y,R30
0008f0 83f9      	STD  Y+1,R31
0008f1 836a      	STD  Y+2,R22
0008f2 837b      	STD  Y+3,R23
0008f3 9508      	RET
                 
                 __PUTPARD1:
0008f4 937a      	ST   -Y,R23
0008f5 936a      	ST   -Y,R22
0008f6 93fa      	ST   -Y,R31
0008f7 93ea      	ST   -Y,R30
0008f8 9508      	RET
                 
                 __CPD10:
0008f9 9730      	SBIW R30,0
0008fa 4060      	SBCI R22,0
0008fb 4070      	SBCI R23,0
0008fc 9508      	RET
                 
                 __CPD12:
0008fd 17ea      	CP   R30,R26
0008fe 07fb      	CPC  R31,R27
0008ff 0768      	CPC  R22,R24
000900 0779      	CPC  R23,R25
000901 9508      	RET
                 
                 __CPD21:
000902 17ae      	CP   R26,R30
000903 07bf      	CPC  R27,R31
000904 0786      	CPC  R24,R22
000905 0797      	CPC  R25,R23
000906 9508      	RET
                 
                 __SAVELOCR6:
000907 935a      	ST   -Y,R21
                 __SAVELOCR5:
000908 934a      	ST   -Y,R20
                 __SAVELOCR4:
000909 933a      	ST   -Y,R19
                 __SAVELOCR3:
00090a 932a      	ST   -Y,R18
                 __SAVELOCR2:
00090b 931a      	ST   -Y,R17
00090c 930a      	ST   -Y,R16
00090d 9508      	RET
                 
                 __LOADLOCR6:
00090e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00090f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000910 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000911 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000912 8119      	LDD  R17,Y+1
000913 8108      	LD   R16,Y
000914 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000915 0fac      	ADD  R26,R28
000916 1fbd      	ADC  R27,R29
                 __INITLOC0:
000917 9005      	LPM  R0,Z+
000918 920d      	ST   X+,R0
000919 958a      	DEC  R24
00091a f7e1      	BRNE __INITLOC0
00091b 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  25 r1 :   5 r2 :   0 r3 :   0 r4 :   1 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:  15 
r16:  46 r17:  37 r18:  43 r19:  19 r20:  25 r21:  32 r22:  68 r23:  53 
r24:  42 r25:  15 r26: 187 r27: 120 r28:  70 r29:   2 r30: 482 r31: 239 
x  :  45 y  : 469 z  :  23 
Registers used: 23 out of 35 (65.7%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   8 add   :   7 
adiw  :  59 and   :   0 andi  :   9 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  35 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  10 
brlt  :   0 brmi  :   1 brne  :  43 brpl  :   1 brsh  :   7 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  84 
cbi   :   4 cbr   :   1 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  40 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   3 
cp    :  10 cpc   :  11 cpi   :  48 cpse  :   0 dec   :   3 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :  10 ijmp  :   0 
in    :   2 inc   :   0 jmp   :  33 ld    :  49 ldd   : 170 ldi   : 306 
lds   :  28 lpm   :  12 lsl   :   1 lsr   :   0 mov   :  24 movw  :  70 
mul   :   2 muls  :   0 mulsu :   0 neg   :   1 nop   :   0 or    :   1 
ori   :   7 out   :  20 pop   :   8 push  :   8 rcall :  40 ret   :  41 
reti  :   1 rjmp  :  85 rol   :   7 ror   :   0 sbc   :   7 sbci  :  25 
sbi   :   3 sbic  :   0 sbis  :   0 sbiw  :  42 sbr   :   1 sbrc  :   3 
sbrs  :  15 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 233 std   :  74 sts   :  20 sub   :   2 subi  :  38 swap  :   0 
tst   :   7 wdr   :   8 
Instructions used: 61 out of 116 (52.6%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001238   3922    742   4664   32768  14.2%
[.dseg] 0x000100 0x00049e      0    414    414    2303  18.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
