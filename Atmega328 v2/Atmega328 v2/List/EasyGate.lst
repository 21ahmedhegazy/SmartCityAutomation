
AVRASM ver. 2.1.30  C:\Users\Muham\Google Drive\Smart Work\Smart Home\WiFi\Program\Atmega328 v2\List\EasyGate.asm Sun Aug 09 14:38:06 2020

C:\Users\Muham\Google Drive\Smart Work\Smart Home\WiFi\Program\Atmega328 v2\List\EasyGate.asm(1085): warning: Register r4 already defined by the .DEF directive
C:\Users\Muham\Google Drive\Smart Work\Smart Home\WiFi\Program\Atmega328 v2\List\EasyGate.asm(1086): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.42 Evaluation
                 ;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 11.059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Speed
                 ;(s)printf features     : long, width, precision
                 ;(s)scanf features      : long, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 1
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _interval=R4
                 	.DEF _interval_msb=R5
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01a7 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 01df 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000034 07d0      	.DB  0xD0,0x7
                 
                 _0x36:
000035 0000
000036 0000
000037 0000
000038 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000039 0000
00003a 0000
00003b 0000
00003c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00003d 0000
00003e 0000
00003f 0000
000040 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000041 0000
000042 0000
000043 0000
000044 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000045 0000
000046 0000
000047 0000
000048 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000049 0000
00004a 0000
00004b 0000
00004c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004d 0000
00004e 0000
00004f 0000
000050 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000051 0000
000052 0000
000053 0000
000054 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000055 0000
000056 0000
000057 0000
000058 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000059 0000
00005a 0000
00005b 0000
00005c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005d 0000
00005e 0000
00005f 0000
000060 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000061 0000
000062 0000
000063 0000
000064 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000065 0000
000066 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x46:
000067 0000
000068 0000
000069 0000
00006a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006b 0000
00006c 0000
00006d 0000
00006e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006f 0000
000070 0000
000071 0000
000072 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000073 0000
000074 0000
000075 0000
000076 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000077 0000
000078 0000
000079 0000
00007a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007b 0000
00007c 0000
00007d 0000
00007e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007f 0000      	.DB  0x0,0x0
                 _0x51:
000080 0000
000081 0000
000082 0000
000083 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000084 0000
000085 0000
000086 0000
000087 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000088 0000
000089 0000
00008a 0000
00008b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008c 0000
00008d 0000
00008e 0000
00008f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000090 0000
000091 0000
000092 0000
000093 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000094 0000
000095 0000
000096 0000
000097 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000098 0000      	.DB  0x0,0x0
                 _0x0:
000099 492b
00009a 4450
00009b 2500
00009c 0063      	.DB  0x2B,0x49,0x50,0x44,0x0,0x25,0x63,0x0
00009d 4246
00009e 3a20
00009f 2075
0000a0 4b4f      	.DB  0x46,0x42,0x20,0x3A,0x75,0x20,0x4F,0x4B
0000a1 4600
0000a2 2042
0000a3 643a
0000a4 4f20      	.DB  0x0,0x46,0x42,0x20,0x3A,0x64,0x20,0x4F
0000a5 004b
0000a6 4246
0000a7 3a20
0000a8 2073      	.DB  0x4B,0x0,0x46,0x42,0x20,0x3A,0x73,0x20
0000a9 4b4f
0000aa 4100
0000ab 2b54
0000ac 4943      	.DB  0x4F,0x4B,0x0,0x41,0x54,0x2B,0x43,0x49
0000ad 5350
0000ae 4154
0000af 5554
0000b0 0d53      	.DB  0x50,0x53,0x54,0x41,0x54,0x55,0x53,0xD
0000b1 000a
0000b2 353a
0000b3 4100
0000b4 2b54      	.DB  0xA,0x0,0x3A,0x35,0x0,0x41,0x54,0x2B
0000b5 5352
0000b6 0d54
0000b7 000a
0000b8 323a      	.DB  0x52,0x53,0x54,0xD,0xA,0x0,0x3A,0x32
0000b9 4100
0000ba 2b54
0000bb 4943
0000bc 5346      	.DB  0x0,0x41,0x54,0x2B,0x43,0x49,0x46,0x53
0000bd 0d52
0000be 000a
0000bf 5441
0000c0 432b      	.DB  0x52,0xD,0xA,0x0,0x41,0x54,0x2B,0x43
0000c1 4a57
0000c2 5041
0000c3 0d3f
0000c4 000a      	.DB  0x57,0x4A,0x41,0x50,0x3F,0xD,0xA,0x0
0000c5 5441
0000c6 432b
0000c7 5049
0000c8 554d      	.DB  0x41,0x54,0x2B,0x43,0x49,0x50,0x4D,0x55
0000c9 3d58
0000ca 0d31
0000cb 000a
0000cc 5441      	.DB  0x58,0x3D,0x31,0xD,0xA,0x0,0x41,0x54
0000cd 432b
0000ce 5049
0000cf 4553
0000d0 5652      	.DB  0x2B,0x43,0x49,0x50,0x53,0x45,0x52,0x56
0000d1 5245
0000d2 313d
0000d3 312c
0000d4 3030      	.DB  0x45,0x52,0x3D,0x31,0x2C,0x31,0x30,0x30
0000d5 0d31
0000d6 000a
0000d7 4943
0000d8 5350      	.DB  0x31,0xD,0xA,0x0,0x43,0x49,0x50,0x53
0000d9 4e45
0000da 0044
0000db 003e
0000dc 6f6e      	.DB  0x45,0x4E,0x44,0x0,0x3E,0x0,0x6E,0x6F
0000dd 4100
0000de 2b54
0000df 4943
0000e0 5350      	.DB  0x0,0x41,0x54,0x2B,0x43,0x49,0x50,0x53
0000e1 4e45
0000e2 3d44
0000e3 7325
0000e4 252c      	.DB  0x45,0x4E,0x44,0x3D,0x25,0x73,0x2C,0x25
0000e5 0d64
0000e6 000a
0000e7 5441
0000e8 432b      	.DB  0x64,0xD,0xA,0x0,0x41,0x54,0x2B,0x43
0000e9 5049
0000ea 4c43
0000eb 534f
0000ec 3d45      	.DB  0x49,0x50,0x43,0x4C,0x4F,0x53,0x45,0x3D
0000ed 7325
0000ee 0a0d
0000ef 4100
0000f0 4554      	.DB  0x25,0x73,0xD,0xA,0x0,0x41,0x54,0x45
0000f1 0d30
0000f2 000a
0000f3 5441
0000f4 432b      	.DB  0x30,0xD,0xA,0x0,0x41,0x54,0x2B,0x43
0000f5 4d57
0000f6 444f
0000f7 3d45
0000f8 0d31      	.DB  0x57,0x4D,0x4F,0x44,0x45,0x3D,0x31,0xD
0000f9 000a
0000fa 5441
0000fb 432b
0000fc 4157      	.DB  0xA,0x0,0x41,0x54,0x2B,0x43,0x57,0x41
0000fd 5455
0000fe 434f
0000ff 4e4f
000100 3d4e      	.DB  0x55,0x54,0x4F,0x43,0x4F,0x4E,0x4E,0x3D
000101 0d31
000102 000a
000103 5441
000104 432b      	.DB  0x31,0xD,0xA,0x0,0x41,0x54,0x2B,0x43
000105 4a57
000106 5041
000107 445f
000108 4645      	.DB  0x57,0x4A,0x41,0x50,0x5F,0x44,0x45,0x46
000109 223d
00010a 6d53
00010b 7261
00010c 4c74      	.DB  0x3D,0x22,0x53,0x6D,0x61,0x72,0x74,0x4C
00010d 6669
00010e 2265
00010f 222c
000110 694c      	.DB  0x69,0x66,0x65,0x22,0x2C,0x22,0x4C,0x69
000111 6566
000112 3240
000113 3230
000114 2230      	.DB  0x66,0x65,0x40,0x32,0x30,0x32,0x30,0x22
000115 0a0d
000116 4100
000117 2b54
000118 4943      	.DB  0xD,0xA,0x0,0x41,0x54,0x2B,0x43,0x49
000119 5350
00011a 4154
00011b 445f
00011c 4645      	.DB  0x50,0x53,0x54,0x41,0x5F,0x44,0x45,0x46
00011d 223d
00011e 3931
00011f 2e32
000120 3631      	.DB  0x3D,0x22,0x31,0x39,0x32,0x2E,0x31,0x36
000121 2e38
000122 2e31
000123 3531
000124 2230      	.DB  0x38,0x2E,0x31,0x2E,0x31,0x35,0x30,0x22
000125 222c
000126 3931
000127 2e32
000128 3631      	.DB  0x2C,0x22,0x31,0x39,0x32,0x2E,0x31,0x36
000129 2e38
00012a 2e31
00012b 2231
00012c 222c      	.DB  0x38,0x2E,0x31,0x2E,0x31,0x22,0x2C,0x22
00012d 3532
00012e 2e35
00012f 3532
000130 2e35      	.DB  0x32,0x35,0x35,0x2E,0x32,0x35,0x35,0x2E
000131 3532
000132 2e35
000133 2230
000134 0a0d      	.DB  0x32,0x35,0x35,0x2E,0x30,0x22,0xD,0xA
000135 4100
000136 2b54
000137 4943
000138 5350      	.DB  0x0,0x41,0x54,0x2B,0x43,0x49,0x50,0x53
000139 4f54
00013a 313d
00013b 0d30
00013c 000a      	.DB  0x54,0x4F,0x3D,0x31,0x30,0xD,0xA,0x0
                 
                 __GLOBAL_INI_TBL:
00013d 0002      	.DW  0x02
00013e 0004      	.DW  0x04
00013f 0068      	.DW  __REG_VARS*2
                 
000140 0005      	.DW  0x05
000141 0300      	.DW  _0x13
000142 0132      	.DW  _0x0*2
                 
000143 0005      	.DW  0x05
000144 0305      	.DW  _0x13+5
000145 0132      	.DW  _0x0*2
                 
000146 0005      	.DW  0x05
000147 030a      	.DW  _0x13+10
000148 0132      	.DW  _0x0*2
                 
000149 0009      	.DW  0x09
00014a 030f      	.DW  _0x13+15
00014b 013a      	.DW  _0x0*2+8
                 
00014c 0005      	.DW  0x05
00014d 0318      	.DW  _0x13+24
00014e 0132      	.DW  _0x0*2
                 
00014f 0009      	.DW  0x09
000150 031d      	.DW  _0x13+29
000151 0143      	.DW  _0x0*2+17
                 
000152 0005      	.DW  0x05
000153 0326      	.DW  _0x13+38
000154 0132      	.DW  _0x0*2
                 
000155 0009      	.DW  0x09
000156 032b      	.DW  _0x13+43
000157 014c      	.DW  _0x0*2+26
                 
000158 000f      	.DW  0x0F
000159 0334      	.DW  _0x13+52
00015a 0155      	.DW  _0x0*2+35
                 
00015b 0003      	.DW  0x03
00015c 0343      	.DW  _0x13+67
00015d 0164      	.DW  _0x0*2+50
                 
00015e 0009      	.DW  0x09
00015f 0346      	.DW  _0x13+70
000160 0167      	.DW  _0x0*2+53
                 
000161 000f      	.DW  0x0F
000162 034f      	.DW  _0x13+79
000163 0155      	.DW  _0x0*2+35
                 
000164 0003      	.DW  0x03
000165 035e      	.DW  _0x13+94
000166 0164      	.DW  _0x0*2+50
                 
000167 0003      	.DW  0x03
000168 0361      	.DW  _0x13+97
000169 0170      	.DW  _0x0*2+62
                 
00016a 000b      	.DW  0x0B
00016b 0364      	.DW  _0x13+100
00016c 0173      	.DW  _0x0*2+65
                 
00016d 000c      	.DW  0x0C
00016e 036f      	.DW  _0x13+111
00016f 017e      	.DW  _0x0*2+76
                 
000170 000e      	.DW  0x0E
000171 037b      	.DW  _0x13+123
000172 018a      	.DW  _0x0*2+88
                 
000173 0016      	.DW  0x16
000174 0389      	.DW  _0x13+137
000175 0198      	.DW  _0x0*2+102
                 
000176 0008      	.DW  0x08
000177 039f      	.DW  _0x3F
000178 01ae      	.DW  _0x0*2+124
                 
000179 0002      	.DW  0x02
00017a 03a7      	.DW  _0x3F+8
00017b 01b6      	.DW  _0x0*2+132
                 
00017c 0003      	.DW  0x03
00017d 03a9      	.DW  _0x3F+10
00017e 0140      	.DW  _0x0*2+14
                 
00017f 0003      	.DW  0x03
000180 03ac      	.DW  _0x3F+13
000181 01b8      	.DW  _0x0*2+134
                 
000182 0003      	.DW  0x03
000183 03af      	.DW  _0x4F
000184 0140      	.DW  _0x0*2+14
                 
000185 0007      	.DW  0x07
000186 03b2      	.DW  _0x52
000187 01df      	.DW  _0x0*2+173
                 
000188 000e      	.DW  0x0E
000189 03b9      	.DW  _0x52+7
00018a 01e6      	.DW  _0x0*2+180
                 
00018b 0012      	.DW  0x12
00018c 03c7      	.DW  _0x52+21
00018d 01f4      	.DW  _0x0*2+194
                 
00018e 0027      	.DW  0x27
00018f 03d9      	.DW  _0x52+39
000190 0206      	.DW  _0x0*2+212
                 
000191 003e      	.DW  0x3E
000192 0400      	.DW  _0x52+78
000193 022d      	.DW  _0x0*2+251
                 
000194 000e      	.DW  0x0E
000195 043e      	.DW  _0x52+140
000196 018a      	.DW  _0x0*2+88
                 
000197 0016      	.DW  0x16
000198 044c      	.DW  _0x52+154
000199 0198      	.DW  _0x0*2+102
                 
00019a 000f      	.DW  0x0F
00019b 0462      	.DW  _0x52+176
00019c 026b      	.DW  _0x0*2+313
                 
00019d 000f      	.DW  0x0F
00019e 0471      	.DW  _0x52+191
00019f 0155      	.DW  _0x0*2+35
                 
0001a0 000b      	.DW  0x0B
0001a1 0480      	.DW  _0x52+206
0001a2 0173      	.DW  _0x0*2+65
                 
0001a3 000c      	.DW  0x0C
0001a4 048b      	.DW  _0x52+217
0001a5 017e      	.DW  _0x0*2+76
                 
                 _0xFFFFFFFF:
0001a6 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0001a7 94f8      	CLI
0001a8 27ee      	CLR  R30
0001a9 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001aa e0f1      	LDI  R31,1
0001ab bff5      	OUT  MCUCR,R31
0001ac bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0001ad e1f8      	LDI  R31,0x18
0001ae 95a8      	WDR
0001af b7a4      	IN   R26,MCUSR
0001b0 7fa7      	CBR  R26,8
0001b1 bfa4      	OUT  MCUSR,R26
0001b2 93f0 0060 	STS  WDTCSR,R31
0001b4 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
0001b6 e08d      	LDI  R24,(14-2)+1
0001b7 e0a2      	LDI  R26,2
0001b8 27bb      	CLR  R27
                 __CLEAR_REG:
0001b9 93ed      	ST   X+,R30
0001ba 958a      	DEC  R24
0001bb f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001bc e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001bd e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001be e0a0      	LDI  R26,LOW(__SRAM_START)
0001bf e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001c0 93ed      	ST   X+,R30
0001c1 9701      	SBIW R24,1
0001c2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001c3 e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001c4 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001c5 9185      	LPM  R24,Z+
0001c6 9195      	LPM  R25,Z+
0001c7 9700      	SBIW R24,0
0001c8 f061      	BREQ __GLOBAL_INI_END
0001c9 91a5      	LPM  R26,Z+
0001ca 91b5      	LPM  R27,Z+
0001cb 9005      	LPM  R0,Z+
0001cc 9015      	LPM  R1,Z+
0001cd 01bf      	MOVW R22,R30
0001ce 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001cf 9005      	LPM  R0,Z+
0001d0 920d      	ST   X+,R0
0001d1 9701      	SBIW R24,1
0001d2 f7e1      	BRNE __GLOBAL_INI_LOOP
0001d3 01fb      	MOVW R30,R22
0001d4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0001d5 e0e0      	LDI  R30,__GPIOR0_INIT
0001d6 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001d7 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001d8 bfed      	OUT  SPL,R30
0001d9 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001da bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001db e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001dc e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001dd 940c 0241 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;unsigned char    *AtCommand(unsigned char    *command, const int timeout, int debug);
                 ;unsigned char    *AtData(unsigned char    *data, const int timeout, int debug);
                 ;void CIPData(unsigned char    *connectionId, unsigned char    *data);
                 ;void init_esp(void);
                 ;void test()
                 ; 0000 001E {
                 
                 	.CSEG
                 ; 0000 001F Out_Up=1;
                 ; 0000 0020 Out_Dn=1;
                 ; 0000 0021 delay_ms(300);
                 ; 0000 0022 Out_Up=0;
                 ; 0000 0023 Out_Dn=0;
                 ; 0000 0024 }
                 ;interrupt [17] void timer0_ovf_isr(void)
                 ; 0000 0027 {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
0001df 936a      	ST   -Y,R22
0001e0 937a      	ST   -Y,R23
0001e1 93aa      	ST   -Y,R26
0001e2 93ba      	ST   -Y,R27
0001e3 93ea      	ST   -Y,R30
0001e4 93fa      	ST   -Y,R31
0001e5 b7ef      	IN   R30,SREG
0001e6 93ea      	ST   -Y,R30
                 ; 0000 0028 // Reinitialize Timer 0 value
                 ; 0000 0029 TCNT0=0x83;  //TCNT0=0x53;
0001e7 e8e3      	LDI  R30,LOW(131)
0001e8 bde6      	OUT  0x26,R30
                 ; 0000 002A // Place your code here
                 ; 0000 002B millis++;
0001e9 e9a7      	LDI  R26,LOW(_millis)
0001ea e0b4      	LDI  R27,HIGH(_millis)
0001eb d6a0      	RCALL __GETD1P_INC
                +
0001ec 5fef     +SUBI R30 , LOW ( - 1 )
0001ed 4fff     +SBCI R31 , HIGH ( - 1 )
0001ee 4f6f     +SBCI R22 , BYTE3 ( - 1 )
0001ef 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
0001f0 d6a0      	RCALL __PUTDP1_DEC
                 ; 0000 002C }
0001f1 91e9      	LD   R30,Y+
0001f2 bfef      	OUT  SREG,R30
0001f3 91f9      	LD   R31,Y+
0001f4 91e9      	LD   R30,Y+
0001f5 91b9      	LD   R27,Y+
0001f6 91a9      	LD   R26,Y+
0001f7 9179      	LD   R23,Y+
0001f8 9169      	LD   R22,Y+
0001f9 9518      	RETI
                 ; .FEND
                 ;int esp8266_available(void) {
                 ; 0000 002E int esp8266_available(void) {
                 _esp8266_available:
                 ; .FSTART _esp8266_available
                 ; 0000 002F if (UCSR0A & (1 << RXC0))
0001fa 91e0 00c0 	LDS  R30,192
0001fc 78e0      	ANDI R30,LOW(0x80)
0001fd f019      	BREQ _0xB
                 ; 0000 0030 {
                 ; 0000 0031 return 1;
0001fe e0e1      	LDI  R30,LOW(1)
0001ff e0f0      	LDI  R31,HIGH(1)
000200 9508      	RET
                 ; 0000 0032 
                 ; 0000 0033 }
                 ; 0000 0034 else
                 _0xB:
                 ; 0000 0035 {
                 ; 0000 0036 return 0;
000201 e0e0      	LDI  R30,LOW(0)
000202 e0f0      	LDI  R31,HIGH(0)
000203 9508      	RET
                 ; 0000 0037 }
                 ; 0000 0038 }
000204 9508      	RET
                 ; .FEND
                 ;void init_all()
                 ; 0000 003B {
                 _init_all:
                 ; .FSTART _init_all
                 ; 0000 003C // Crystal Oscillator division factor: 1
                 ; 0000 003D #pragma optsize-
                 ; 0000 003E CLKPR=0x80;
000205 e8e0      	LDI  R30,LOW(128)
000206 93e0 0061 	STS  97,R30
                 ; 0000 003F CLKPR=0x00;
000208 e0e0      	LDI  R30,LOW(0)
000209 93e0 0061 	STS  97,R30
                 ; 0000 0040 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0041 #pragma optsize+
                 ; 0000 0042 #endif
                 ; 0000 0043 
                 ; 0000 0044 // Input/Output Ports initialization
                 ; 0000 0045 // Port B initialization
                 ; 0000 0046 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0047 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0048 PORTB=0x00;
00020b b9e5      	OUT  0x5,R30
                 ; 0000 0049 DDRB=0x04;
00020c e0e4      	LDI  R30,LOW(4)
00020d b9e4      	OUT  0x4,R30
                 ; 0000 004A 
                 ; 0000 004B // Port C initialization
                 ; 0000 004C // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 004D // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 004E PORTC=0x39;
00020e e3e9      	LDI  R30,LOW(57)
00020f b9e8      	OUT  0x8,R30
                 ; 0000 004F DDRC=0x00;
000210 e0e0      	LDI  R30,LOW(0)
000211 b9e7      	OUT  0x7,R30
                 ; 0000 0050 
                 ; 0000 0051 // Port D initialization
                 ; 0000 0052 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=In Func0=In
                 ; 0000 0053 // State7=0 State6=0 State5=0 State4=0 State3=P State2=0 State1=T State0=T
                 ; 0000 0054 PORTD=0x08;
000212 e0e8      	LDI  R30,LOW(8)
000213 b9eb      	OUT  0xB,R30
                 ; 0000 0055 DDRD=0xF4;
000214 efe4      	LDI  R30,LOW(244)
000215 b9ea      	OUT  0xA,R30
                 ; 0000 0056 
                 ; 0000 0057 // Timer/Counter 0 initialization
                 ; 0000 0058 // Clock source: System Clock 8M-11.059M / 64
                 ; 0000 0059 // Clock value: 125.000 kHz - 172.800 kHz
                 ; 0000 005A TCCR0A=0x00;
000216 e0e0      	LDI  R30,LOW(0)
000217 bde4      	OUT  0x24,R30
                 ; 0000 005B TCCR0B=0x03;
000218 e0e3      	LDI  R30,LOW(3)
000219 bde5      	OUT  0x25,R30
                 ; 0000 005C TCNT0=0x83;  //0x53
00021a e8e3      	LDI  R30,LOW(131)
00021b bde6      	OUT  0x26,R30
                 ; 0000 005D OCR0A=0x00;
00021c e0e0      	LDI  R30,LOW(0)
00021d bde7      	OUT  0x27,R30
                 ; 0000 005E OCR0B=0x00;
00021e bde8      	OUT  0x28,R30
                 ; 0000 005F 
                 ; 0000 0060 // Timer/Counter 0 Interrupt(s) initialization
                 ; 0000 0061 TIMSK0=0x01;
00021f e0e1      	LDI  R30,LOW(1)
000220 93e0 006e 	STS  110,R30
                 ; 0000 0062 
                 ; 0000 0063 // Timer/Counter 1 Interrupt(s) initialization
                 ; 0000 0064 TIMSK1=0x00;
000222 e0e0      	LDI  R30,LOW(0)
000223 93e0 006f 	STS  111,R30
                 ; 0000 0065 
                 ; 0000 0066 // Timer/Counter 2 Interrupt(s) initialization
                 ; 0000 0067 TIMSK2=0x00;
000225 93e0 0070 	STS  112,R30
                 ; 0000 0068 
                 ; 0000 0069 // USART initialization
                 ; 0000 006A // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 006B // USART Receiver: On
                 ; 0000 006C // USART Transmitter: On
                 ; 0000 006D // USART Mode: Asynchronous
                 ; 0000 006E // USART Baud Rate: 115200
                 ; 0000 006F UCSR0A=0x00;
000227 93e0 00c0 	STS  192,R30
                 ; 0000 0070 UCSR0B=0x18;
000229 e1e8      	LDI  R30,LOW(24)
00022a 93e0 00c1 	STS  193,R30
                 ; 0000 0071 UCSR0C=0x06;
00022c e0e6      	LDI  R30,LOW(6)
00022d 93e0 00c2 	STS  194,R30
                 ; 0000 0072 UBRR0H=0x00;
00022f e0e0      	LDI  R30,LOW(0)
000230 93e0 00c5 	STS  197,R30
                 ; 0000 0073 UBRR0L=0x05;
000232 e0e5      	LDI  R30,LOW(5)
000233 93e0 00c4 	STS  196,R30
                 ; 0000 0074 
                 ; 0000 0075 // ADC initialization
                 ; 0000 0076 // ADC disabled
                 ; 0000 0077 ADCSRA=0x00;
000235 e0e0      	LDI  R30,LOW(0)
000236 93e0 007a 	STS  122,R30
                 ; 0000 0078 
                 ; 0000 0079 // Watchdog Timer initialization
                 ; 0000 007A // Watchdog Timer Prescaler: OSC/256k
                 ; 0000 007B // Watchdog Timer interrupt: Off
                 ; 0000 007C #pragma optsize-
                 ; 0000 007D #asm("wdr")
000238 95a8      	WDR
                 ; 0000 007E WDTCSR=0x1F;
000239 e1ef      	LDI  R30,LOW(31)
00023a 93e0 0060 	STS  96,R30
                 ; 0000 007F WDTCSR=0x0F; // 2 sec
00023c e0ef      	LDI  R30,LOW(15)
00023d 93e0 0060 	STS  96,R30
                 ; 0000 0080 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0081 #pragma optsize+
                 ; 0000 0082 #endif
                 ; 0000 0083 
                 ; 0000 0084 // Global enable interrupts
                 ; 0000 0085 #asm("sei")
00023f 9478      	SEI
                 ; 0000 0086 }
000240 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 0089 {
                 _main:
                 ; .FSTART _main
                 ; 0000 008A uchar idx[1];
                 ; 0000 008B uchar buff[50];
                 ; 0000 008C uchar stat[50];
                 ; 0000 008D ulong currentMillis=0;
                 ; 0000 008E //Out_R=1;
                 ; 0000 008F 
                 ; 0000 0090 init_all();
000241 97ef      	SBIW R28,63
000242 97aa      	SBIW R28,42
000243 e0e0      	LDI  R30,LOW(0)
000244 83e8      	ST   Y,R30
000245 83e9      	STD  Y+1,R30
000246 83ea      	STD  Y+2,R30
000247 83eb      	STD  Y+3,R30
                 ;	idx -> Y+104
                 ;	buff -> Y+54
                 ;	stat -> Y+4
                 ;	currentMillis -> Y+0
000248 dfbc      	RCALL _init_all
                 ; 0000 0091 init_esp();
000249 d25a      	RCALL _init_esp
                 ; 0000 0092 ////esp8266.setTimeout(300);
                 ; 0000 0093 
                 ; 0000 0094 if(DEBUG)
                 ; 0000 0095 {
                 ; 0000 0096 //Serial.println("start");
                 ; 0000 0097 }
                 ; 0000 0098 
                 ; 0000 0099 while(1)
                 _0xE:
                 ; 0000 009A {
                 ; 0000 009B currentMillis = millis;
00024a 91e0 0497 	LDS  R30,_millis
00024c 91f0 0498 	LDS  R31,_millis+1
00024e 9160 0499 	LDS  R22,_millis+2
000250 9170 049a 	LDS  R23,_millis+3
000252 d659      	RCALL __PUTD1S0
                 ; 0000 009C wdt_reset();
000253 95a8      	WDR
                 ; 0000 009D 
                 ; 0000 009E if(esp8266_available())
000254 dfa5      	RCALL _esp8266_available
000255 9730      	SBIW R30,0
000256 f409      	BRNE PC+2
000257 c0a3      	RJMP _0x11
                 ; 0000 009F {
                 ; 0000 00A0 //delay_ms(200);
                 ; 0000 00A1 //+IPD,0,4:o=u
                 ; 0000 00A2 
                 ; 0000 00A3 esp8266_read(buff,50);
000258 01fe      	MOVW R30,R28
000259 96f6      	ADIW R30,54
00025a 93fa      	ST   -Y,R31
00025b 93ea      	ST   -Y,R30
00025c e3a2      	LDI  R26,LOW(50)
00025d e0b0      	LDI  R27,0
00025e d2e3      	RCALL _gets
                 ; 0000 00A4 if(strstr(buff, "+IPD"))
00025f 01fe      	MOVW R30,R28
000260 96f6      	ADIW R30,54
000261 93fa      	ST   -Y,R31
000262 93ea      	ST   -Y,R30
                +
000263 e0a0     +LDI R26 , LOW ( _0x13 + ( 0 ) )
000264 e0b3     +LDI R27 , HIGH ( _0x13 + ( 0 ) )
                 	__POINTW2MN _0x13,0
000265 d5ad      	RCALL _strstr
000266 9730      	SBIW R30,0
000267 f409      	BRNE PC+2
000268 c091      	RJMP _0x12
                 ; 0000 00A5 {
                 ; 0000 00A6 if(DEBUG)
                 ; 0000 00A7 {
                 ; 0000 00A8 //Serial.println("available");
                 ; 0000 00A9 }
                 ; 0000 00AA sprintf(idx,"%c",*(strstr(buff, "+IPD")+11));
000269 01fe      	MOVW R30,R28
00026a 59e8      	SUBI R30,LOW(-(104))
00026b 4fff      	SBCI R31,HIGH(-(104))
00026c 93fa      	ST   -Y,R31
00026d 93ea      	ST   -Y,R30
                +
00026e e3e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
00026f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
000270 93fa      	ST   -Y,R31
000271 93ea      	ST   -Y,R30
000272 01fe      	MOVW R30,R28
000273 96fa      	ADIW R30,58
000274 93fa      	ST   -Y,R31
000275 93ea      	ST   -Y,R30
                +
000276 e0a5     +LDI R26 , LOW ( _0x13 + ( 5 ) )
000277 e0b3     +LDI R27 , HIGH ( _0x13 + ( 5 ) )
                 	__POINTW2MN _0x13,5
000278 d59a      	RCALL _strstr
000279 85e3      	LDD  R30,Z+11
00027a 27ff      	CLR  R31
00027b 2766      	CLR  R22
00027c 2777      	CLR  R23
00027d d633      	RCALL __PUTPARD1
00027e e084      	LDI  R24,4
00027f d538      	RCALL _sprintf
000280 9628      	ADIW R28,8
                 ; 0000 00AB if(idx[0]=='u')
                +
000281 01de     +MOVW R26 , R28
000282 59a8     +SUBI R26 , LOW ( - 104 )
000283 4fbf     +SBCI R27 , HIGH ( - 104 )
000284 91ac     +LD R26 , X
                 	__GETB2SX 104
000285 37a5      	CPI  R26,LOW(0x75)
000286 f511      	BRNE _0x15
                 ; 0000 00AC {
                 ; 0000 00AD sprintf(idx,"%c",*(strstr(buff, "+IPD")+5));
000287 01fe      	MOVW R30,R28
000288 59e8      	SUBI R30,LOW(-(104))
000289 4fff      	SBCI R31,HIGH(-(104))
00028a 93fa      	ST   -Y,R31
00028b 93ea      	ST   -Y,R30
                +
00028c e3e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
00028d e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
00028e 93fa      	ST   -Y,R31
00028f 93ea      	ST   -Y,R30
000290 01fe      	MOVW R30,R28
000291 96fa      	ADIW R30,58
000292 93fa      	ST   -Y,R31
000293 93ea      	ST   -Y,R30
                +
000294 e0aa     +LDI R26 , LOW ( _0x13 + ( 10 ) )
000295 e0b3     +LDI R27 , HIGH ( _0x13 + ( 10 ) )
                 	__POINTW2MN _0x13,10
000296 d57c      	RCALL _strstr
000297 81e5      	LDD  R30,Z+5
000298 27ff      	CLR  R31
000299 2766      	CLR  R22
00029a 2777      	CLR  R23
00029b d615      	RCALL __PUTPARD1
00029c e084      	LDI  R24,4
00029d d51a      	RCALL _sprintf
00029e 9628      	ADIW R28,8
                 ; 0000 00AE CIPData(idx,"FB :u OK");
00029f 01fe      	MOVW R30,R28
0002a0 59e8      	SUBI R30,LOW(-(104))
0002a1 4fff      	SBCI R31,HIGH(-(104))
0002a2 93fa      	ST   -Y,R31
0002a3 93ea      	ST   -Y,R30
                +
0002a4 e0af     +LDI R26 , LOW ( _0x13 + ( 15 ) )
0002a5 e0b3     +LDI R27 , HIGH ( _0x13 + ( 15 ) )
                 	__POINTW2MN _0x13,15
0002a6 d1af      	RCALL _CIPData
                 ; 0000 00AF Out_Up=1;
0002a7 9a5e      	SBI  0xB,6
                 ; 0000 00B0 Out_Dn=0;
0002a8 c050      	RJMP _0x53
                 ; 0000 00B1 }
                 ; 0000 00B2 else if(idx[0]=='d')
                 _0x15:
                +
0002a9 01de     +MOVW R26 , R28
0002aa 59a8     +SUBI R26 , LOW ( - 104 )
0002ab 4fbf     +SBCI R27 , HIGH ( - 104 )
0002ac 91ac     +LD R26 , X
                 	__GETB2SX 104
0002ad 36a4      	CPI  R26,LOW(0x64)
0002ae f519      	BRNE _0x1B
                 ; 0000 00B3 {
                 ; 0000 00B4 sprintf(idx,"%c",*(strstr(buff, "+IPD")+5));
0002af 01fe      	MOVW R30,R28
0002b0 59e8      	SUBI R30,LOW(-(104))
0002b1 4fff      	SBCI R31,HIGH(-(104))
0002b2 93fa      	ST   -Y,R31
0002b3 93ea      	ST   -Y,R30
                +
0002b4 e3e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
0002b5 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
0002b6 93fa      	ST   -Y,R31
0002b7 93ea      	ST   -Y,R30
0002b8 01fe      	MOVW R30,R28
0002b9 96fa      	ADIW R30,58
0002ba 93fa      	ST   -Y,R31
0002bb 93ea      	ST   -Y,R30
                +
0002bc e1a8     +LDI R26 , LOW ( _0x13 + ( 24 ) )
0002bd e0b3     +LDI R27 , HIGH ( _0x13 + ( 24 ) )
                 	__POINTW2MN _0x13,24
0002be d554      	RCALL _strstr
0002bf 81e5      	LDD  R30,Z+5
0002c0 27ff      	CLR  R31
0002c1 2766      	CLR  R22
0002c2 2777      	CLR  R23
0002c3 d5ed      	RCALL __PUTPARD1
0002c4 e084      	LDI  R24,4
0002c5 d4f2      	RCALL _sprintf
0002c6 9628      	ADIW R28,8
                 ; 0000 00B5 CIPData(idx,"FB :d OK");
0002c7 01fe      	MOVW R30,R28
0002c8 59e8      	SUBI R30,LOW(-(104))
0002c9 4fff      	SBCI R31,HIGH(-(104))
0002ca 93fa      	ST   -Y,R31
0002cb 93ea      	ST   -Y,R30
                +
0002cc e1ad     +LDI R26 , LOW ( _0x13 + ( 29 ) )
0002cd e0b3     +LDI R27 , HIGH ( _0x13 + ( 29 ) )
                 	__POINTW2MN _0x13,29
0002ce d187      	RCALL _CIPData
                 ; 0000 00B6 Out_Up=0;
0002cf 985e      	CBI  0xB,6
                 ; 0000 00B7 Out_Dn=1;
0002d0 9a5f      	SBI  0xB,7
                 ; 0000 00B8 }
                 ; 0000 00B9 else if(idx[0]=='s')
0002d1 c028      	RJMP _0x20
                 _0x1B:
                +
0002d2 01de     +MOVW R26 , R28
0002d3 59a8     +SUBI R26 , LOW ( - 104 )
0002d4 4fbf     +SBCI R27 , HIGH ( - 104 )
0002d5 91ac     +LD R26 , X
                 	__GETB2SX 104
0002d6 37a3      	CPI  R26,LOW(0x73)
0002d7 f511      	BRNE _0x21
                 ; 0000 00BA {
                 ; 0000 00BB sprintf(idx,"%c",*(strstr(buff, "+IPD")+5));
0002d8 01fe      	MOVW R30,R28
0002d9 59e8      	SUBI R30,LOW(-(104))
0002da 4fff      	SBCI R31,HIGH(-(104))
0002db 93fa      	ST   -Y,R31
0002dc 93ea      	ST   -Y,R30
                +
0002dd e3e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
0002de e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
0002df 93fa      	ST   -Y,R31
0002e0 93ea      	ST   -Y,R30
0002e1 01fe      	MOVW R30,R28
0002e2 96fa      	ADIW R30,58
0002e3 93fa      	ST   -Y,R31
0002e4 93ea      	ST   -Y,R30
                +
0002e5 e2a6     +LDI R26 , LOW ( _0x13 + ( 38 ) )
0002e6 e0b3     +LDI R27 , HIGH ( _0x13 + ( 38 ) )
                 	__POINTW2MN _0x13,38
0002e7 d52b      	RCALL _strstr
0002e8 81e5      	LDD  R30,Z+5
0002e9 27ff      	CLR  R31
0002ea 2766      	CLR  R22
0002eb 2777      	CLR  R23
0002ec d5c4      	RCALL __PUTPARD1
0002ed e084      	LDI  R24,4
0002ee d4c9      	RCALL _sprintf
0002ef 9628      	ADIW R28,8
                 ; 0000 00BC CIPData(idx,"FB :s OK");
0002f0 01fe      	MOVW R30,R28
0002f1 59e8      	SUBI R30,LOW(-(104))
0002f2 4fff      	SBCI R31,HIGH(-(104))
0002f3 93fa      	ST   -Y,R31
0002f4 93ea      	ST   -Y,R30
                +
0002f5 e2ab     +LDI R26 , LOW ( _0x13 + ( 43 ) )
0002f6 e0b3     +LDI R27 , HIGH ( _0x13 + ( 43 ) )
                 	__POINTW2MN _0x13,43
0002f7 d15e      	RCALL _CIPData
                 ; 0000 00BD Out_Up=0;
0002f8 985e      	CBI  0xB,6
                 ; 0000 00BE Out_Dn=0;
                 _0x53:
0002f9 985f      	CBI  0xB,7
                 ; 0000 00BF }
                 ; 0000 00C0 }
                 _0x21:
                 _0x20:
                 ; 0000 00C1 }
                 _0x12:
                 ; 0000 00C2 else if(((unsigned long)(currentMillis - previousMillis) >= interval))
0002fa c0a6      	RJMP _0x26
                 _0x11:
0002fb 91a0 049b 	LDS  R26,_previousMillis
0002fd 91b0 049c 	LDS  R27,_previousMillis+1
0002ff 9180 049d 	LDS  R24,_previousMillis+2
000301 9190 049e 	LDS  R25,_previousMillis+3
000303 d59e      	RCALL __GETD1S0
000304 d543      	RCALL __SUBD12
000305 01df      	MOVW R26,R30
000306 01cb      	MOVW R24,R22
000307 01f2      	MOVW R30,R4
000308 2766      	CLR  R22
000309 2777      	CLR  R23
00030a d5b4      	RCALL __CPD21
00030b f408      	BRSH PC+2
00030c c094      	RJMP _0x27
                 ; 0000 00C3 {
                 ; 0000 00C4 previousMillis = currentMillis;
00030d d594      	RCALL __GETD1S0
00030e 93e0 049b 	STS  _previousMillis,R30
000310 93f0 049c 	STS  _previousMillis+1,R31
000312 9360 049d 	STS  _previousMillis+2,R22
000314 9370 049e 	STS  _previousMillis+3,R23
                 ; 0000 00C5 strcpy(stat,AtCommand("AT+CIPSTATUS\r\n",100,DEBUG));
000316 01fe      	MOVW R30,R28
000317 9634      	ADIW R30,4
000318 93fa      	ST   -Y,R31
000319 93ea      	ST   -Y,R30
                +
00031a e3e4     +LDI R30 , LOW ( _0x13 + ( 52 ) )
00031b e0f3     +LDI R31 , HIGH ( _0x13 + ( 52 ) )
                 	__POINTW1MN _0x13,52
00031c 93fa      	ST   -Y,R31
00031d 93ea      	ST   -Y,R30
00031e e6e4      	LDI  R30,LOW(100)
00031f e0f0      	LDI  R31,HIGH(100)
000320 93fa      	ST   -Y,R31
000321 93ea      	ST   -Y,R30
000322 e0a1      	LDI  R26,LOW(1)
000323 e0b0      	LDI  R27,0
000324 d07e      	RCALL _AtCommand
000325 01df      	MOVW R26,R30
000326 d4c6      	RCALL _strcpy
                 ; 0000 00C6 
                 ; 0000 00C7 if(strstr(stat,":5") || strlen(stat) ==0)
000327 01fe      	MOVW R30,R28
000328 9634      	ADIW R30,4
000329 93fa      	ST   -Y,R31
00032a 93ea      	ST   -Y,R30
                +
00032b e4a3     +LDI R26 , LOW ( _0x13 + ( 67 ) )
00032c e0b3     +LDI R27 , HIGH ( _0x13 + ( 67 ) )
                 	__POINTW2MN _0x13,67
00032d d4e5      	RCALL _strstr
00032e 9730      	SBIW R30,0
00032f f429      	BRNE _0x29
000330 01de      	MOVW R26,R28
000331 9614      	ADIW R26,4
000332 d4c7      	RCALL _strlen
000333 9730      	SBIW R30,0
000334 f5b9      	BRNE _0x28
                 _0x29:
                 ; 0000 00C8 {
                 ; 0000 00C9 AtCommand("AT+RST\r\n",10000,DEBUG);
                +
000335 e4e6     +LDI R30 , LOW ( _0x13 + ( 70 ) )
000336 e0f3     +LDI R31 , HIGH ( _0x13 + ( 70 ) )
                 	__POINTW1MN _0x13,70
000337 93fa      	ST   -Y,R31
000338 93ea      	ST   -Y,R30
000339 e1e0      	LDI  R30,LOW(10000)
00033a e2f7      	LDI  R31,HIGH(10000)
00033b 93fa      	ST   -Y,R31
00033c 93ea      	ST   -Y,R30
00033d e0a1      	LDI  R26,LOW(1)
00033e e0b0      	LDI  R27,0
00033f d063      	RCALL _AtCommand
                 ; 0000 00CA init_esp();
000340 d163      	RCALL _init_esp
                 ; 0000 00CB 
                 ; 0000 00CC strcpy(stat,AtCommand("AT+CIPSTATUS\r\n",100,DEBUG));
000341 01fe      	MOVW R30,R28
000342 9634      	ADIW R30,4
000343 93fa      	ST   -Y,R31
000344 93ea      	ST   -Y,R30
                +
000345 e4ef     +LDI R30 , LOW ( _0x13 + ( 79 ) )
000346 e0f3     +LDI R31 , HIGH ( _0x13 + ( 79 ) )
                 	__POINTW1MN _0x13,79
000347 93fa      	ST   -Y,R31
000348 93ea      	ST   -Y,R30
000349 e6e4      	LDI  R30,LOW(100)
00034a e0f0      	LDI  R31,HIGH(100)
00034b 93fa      	ST   -Y,R31
00034c 93ea      	ST   -Y,R30
00034d e0a1      	LDI  R26,LOW(1)
00034e e0b0      	LDI  R27,0
00034f d053      	RCALL _AtCommand
000350 01df      	MOVW R26,R30
000351 d49b      	RCALL _strcpy
                 ; 0000 00CD if(strstr(stat,":5") || strlen(stat) ==0)
000352 01fe      	MOVW R30,R28
000353 9634      	ADIW R30,4
000354 93fa      	ST   -Y,R31
000355 93ea      	ST   -Y,R30
                +
000356 e5ae     +LDI R26 , LOW ( _0x13 + ( 94 ) )
000357 e0b3     +LDI R27 , HIGH ( _0x13 + ( 94 ) )
                 	__POINTW2MN _0x13,94
000358 d4ba      	RCALL _strstr
000359 9730      	SBIW R30,0
00035a f429      	BRNE _0x2C
00035b 01de      	MOVW R26,R28
00035c 9614      	ADIW R26,4
00035d d49c      	RCALL _strlen
00035e 9730      	SBIW R30,0
00035f f459      	BRNE _0x2B
                 _0x2C:
                 ; 0000 00CE {
                 ; 0000 00CF Out_R=0; delay_ms(1000); wdt_reset();
000360 985a      	CBI  0xB,2
000361 eea8      	LDI  R26,LOW(1000)
000362 e0b3      	LDI  R27,HIGH(1000)
000363 d560      	RCALL _delay_ms
000364 95a8      	WDR
                 ; 0000 00D0 Out_R=1; delay_ms(1000); wdt_reset();
000365 9a5a      	SBI  0xB,2
000366 eea8      	LDI  R26,LOW(1000)
000367 e0b3      	LDI  R27,HIGH(1000)
000368 d55b      	RCALL _delay_ms
000369 95a8      	WDR
                 ; 0000 00D1 
                 ; 0000 00D2 init_esp();
00036a d139      	RCALL _init_esp
                 ; 0000 00D3 }
                 ; 0000 00D4 }
                 _0x2B:
                 ; 0000 00D5 else if(strstr(stat,":2"))
00036b c035      	RJMP _0x32
                 _0x28:
00036c 01fe      	MOVW R30,R28
00036d 9634      	ADIW R30,4
00036e 93fa      	ST   -Y,R31
00036f 93ea      	ST   -Y,R30
                +
000370 e6a1     +LDI R26 , LOW ( _0x13 + ( 97 ) )
000371 e0b3     +LDI R27 , HIGH ( _0x13 + ( 97 ) )
                 	__POINTW2MN _0x13,97
000372 d4a0      	RCALL _strstr
000373 9730      	SBIW R30,0
000374 f161      	BREQ _0x33
                 ; 0000 00D6 {
                 ; 0000 00D7 AtCommand("AT+CIFSR\r\n",100,DEBUG); // get ip address
                +
000375 e6e4     +LDI R30 , LOW ( _0x13 + ( 100 ) )
000376 e0f3     +LDI R31 , HIGH ( _0x13 + ( 100 ) )
                 	__POINTW1MN _0x13,100
000377 93fa      	ST   -Y,R31
000378 93ea      	ST   -Y,R30
000379 e6e4      	LDI  R30,LOW(100)
00037a e0f0      	LDI  R31,HIGH(100)
00037b 93fa      	ST   -Y,R31
00037c 93ea      	ST   -Y,R30
00037d e0a1      	LDI  R26,LOW(1)
00037e e0b0      	LDI  R27,0
00037f d023      	RCALL _AtCommand
                 ; 0000 00D8 AtCommand("AT+CWJAP?\r\n",100,DEBUG);
                +
000380 e6ef     +LDI R30 , LOW ( _0x13 + ( 111 ) )
000381 e0f3     +LDI R31 , HIGH ( _0x13 + ( 111 ) )
                 	__POINTW1MN _0x13,111
000382 93fa      	ST   -Y,R31
000383 93ea      	ST   -Y,R30
000384 e6e4      	LDI  R30,LOW(100)
000385 e0f0      	LDI  R31,HIGH(100)
000386 93fa      	ST   -Y,R31
000387 93ea      	ST   -Y,R30
000388 e0a1      	LDI  R26,LOW(1)
000389 e0b0      	LDI  R27,0
00038a d018      	RCALL _AtCommand
                 ; 0000 00D9 
                 ; 0000 00DA AtCommand("AT+CIPMUX=1\r\n",150,DEBUG); // configure for multiple connections
                +
00038b e7eb     +LDI R30 , LOW ( _0x13 + ( 123 ) )
00038c e0f3     +LDI R31 , HIGH ( _0x13 + ( 123 ) )
                 	__POINTW1MN _0x13,123
00038d 93fa      	ST   -Y,R31
00038e 93ea      	ST   -Y,R30
00038f e9e6      	LDI  R30,LOW(150)
000390 e0f0      	LDI  R31,HIGH(150)
000391 93fa      	ST   -Y,R31
000392 93ea      	ST   -Y,R30
000393 e0a1      	LDI  R26,LOW(1)
000394 e0b0      	LDI  R27,0
000395 d00d      	RCALL _AtCommand
                 ; 0000 00DB AtCommand("AT+CIPSERVER=1,1001\r\n",150,DEBUG);// turn on server on port 80
                +
000396 e8e9     +LDI R30 , LOW ( _0x13 + ( 137 ) )
000397 e0f3     +LDI R31 , HIGH ( _0x13 + ( 137 ) )
                 	__POINTW1MN _0x13,137
000398 93fa      	ST   -Y,R31
000399 93ea      	ST   -Y,R30
00039a e9e6      	LDI  R30,LOW(150)
00039b e0f0      	LDI  R31,HIGH(150)
00039c 93fa      	ST   -Y,R31
00039d 93ea      	ST   -Y,R30
00039e e0a1      	LDI  R26,LOW(1)
00039f e0b0      	LDI  R27,0
0003a0 d002      	RCALL _AtCommand
                 ; 0000 00DC }
                 ; 0000 00DD else// if( stat.indexOf(":3") > -1 || stat.indexOf(":4") > -1)
                 _0x33:
                 ; 0000 00DE {
                 ; 0000 00DF }
                 _0x32:
                 ; 0000 00E0 }
                 ; 0000 00E1 }
                 _0x27:
                 _0x26:
0003a1 cea8      	RJMP _0xE
                 ; 0000 00E2 }
                 _0x35:
0003a2 cfff      	RJMP _0x35
                 ; .FEND
                 
                 	.DSEG
                 _0x13:
000300           	.BYTE 0x9F
                 ;unsigned char    *AtCommand(unsigned char    *command, const int timeout, int debug)
                 ; 0000 00E5 {
                 
                 	.CSEG
                 _AtCommand:
                 ; .FSTART _AtCommand
0003a3 92ff      	PUSH R15
                 ; 0000 00E6 uchar response[100]="";
                 ; 0000 00E7 ulong time = millis;
                 ; 0000 00E8 bit ok = 0;
                 ; 0000 00E9 esp8266_print(command);
0003a4 93ba      	ST   -Y,R27
0003a5 93aa      	ST   -Y,R26
0003a6 97ef      	SBIW R28,63
0003a7 97a9      	SBIW R28,41
0003a8 e684      	LDI  R24,100
0003a9 e0a4      	LDI  R26,LOW(4)
0003aa e0b0      	LDI  R27,HIGH(4)
0003ab e6ea      	LDI  R30,LOW(_0x36*2)
0003ac e0f0      	LDI  R31,HIGH(_0x36*2)
0003ad d48a      	RCALL __INITLOCB
                 ;	*command -> Y+108
                 ;	timeout -> Y+106
                 ;	debug -> Y+104
                 ;	response -> Y+4
                 ;	time -> Y+0
                 ;	ok -> R15.0
0003ae 24ff      	CLR  R15
0003af 91e0 0497 	LDS  R30,_millis
0003b1 91f0 0498 	LDS  R31,_millis+1
0003b3 9160 0499 	LDS  R22,_millis+2
0003b5 9170 049a 	LDS  R23,_millis+3
0003b7 d4f4      	RCALL __PUTD1S0
                +
0003b8 01de     +MOVW R26 , R28
0003b9 59a4     +SUBI R26 , LOW ( - 108 )
0003ba 4fbf     +SBCI R27 , HIGH ( - 108 )
0003bb 940e 089c+CALL __GETW2X
                 	__GETW2SX 108
0003bd d171      	RCALL _puts
                 ; 0000 00EA 
                 ; 0000 00EB if(debug)
                 ; 0000 00EC {
                 ; 0000 00ED //Serial.print(command);
                 ; 0000 00EE }
                 ; 0000 00EF 
                 ; 0000 00F0 while(  !ok && (time+timeout) > millis )
                 _0x38:
0003be fcf0      	SBRC R15,0
0003bf c012      	RJMP _0x3B
                +
0003c0 01fe     +MOVW R30 , R28
0003c1 59e6     +SUBI R30 , LOW ( - 106 )
0003c2 4fff     +SBCI R31 , HIGH ( - 106 )
0003c3 940e 0896+CALL __GETW1Z
                 	__GETW1SX 106
0003c5 d4e1      	RCALL __GETD2S0
0003c6 d48e      	RCALL __CWD1
0003c7 d47b      	RCALL __ADDD21
0003c8 91e0 0497 	LDS  R30,_millis
0003ca 91f0 0498 	LDS  R31,_millis+1
0003cc 9160 0499 	LDS  R22,_millis+2
0003ce 9170 049a 	LDS  R23,_millis+3
0003d0 d4e9      	RCALL __CPD12
0003d1 f008      	BRLO _0x3C
                 _0x3B:
0003d2 c038      	RJMP _0x3A
                 _0x3C:
                 ; 0000 00F1 {
                 ; 0000 00F2 wdt_reset();
0003d3 95a8      	WDR
                 ; 0000 00F3 if(esp8266_available())
0003d4 de25      	RCALL _esp8266_available
0003d5 9730      	SBIW R30,0
0003d6 f039      	BREQ _0x3D
                 ; 0000 00F4 {
                 ; 0000 00F5 esp8266_read(response,50);
0003d7 01fe      	MOVW R30,R28
0003d8 9634      	ADIW R30,4
0003d9 93fa      	ST   -Y,R31
0003da 93ea      	ST   -Y,R30
0003db e3a2      	LDI  R26,LOW(50)
0003dc e0b0      	LDI  R27,0
0003dd d164      	RCALL _gets
                 ; 0000 00F6 }
                 ; 0000 00F7 
                 ; 0000 00F8 if(strstr(command,"CIPSEND"))
                 _0x3D:
                +
0003de 01fe     +MOVW R30 , R28
0003df 59e4     +SUBI R30 , LOW ( - 108 )
0003e0 4fff     +SBCI R31 , HIGH ( - 108 )
0003e1 940e 0896+CALL __GETW1Z
                 	__GETW1SX 108
0003e3 93fa      	ST   -Y,R31
0003e4 93ea      	ST   -Y,R30
                +
0003e5 e9af     +LDI R26 , LOW ( _0x3F + ( 0 ) )
0003e6 e0b3     +LDI R27 , HIGH ( _0x3F + ( 0 ) )
                 	__POINTW2MN _0x3F,0
0003e7 d42b      	RCALL _strstr
0003e8 9730      	SBIW R30,0
0003e9 f061      	BREQ _0x3E
                 ; 0000 00F9 {
                 ; 0000 00FA if(strstr(response,">"))
0003ea 01fe      	MOVW R30,R28
0003eb 9634      	ADIW R30,4
0003ec 93fa      	ST   -Y,R31
0003ed 93ea      	ST   -Y,R30
                +
0003ee eaa7     +LDI R26 , LOW ( _0x3F + ( 8 ) )
0003ef e0b3     +LDI R27 , HIGH ( _0x3F + ( 8 ) )
                 	__POINTW2MN _0x3F,8
0003f0 d422      	RCALL _strstr
0003f1 9730      	SBIW R30,0
0003f2 f011      	BREQ _0x40
                 ; 0000 00FB ok = 1;
0003f3 9468      	SET
0003f4 f8f0      	BLD  R15,0
                 ; 0000 00FC }
                 _0x40:
                 ; 0000 00FD //        else if(strstr(command,"CIPSTATUS") )
                 ; 0000 00FE //        {
                 ; 0000 00FF //            if(strstr(response,"STATUS") )
                 ; 0000 0100 //            ok = 1;
                 ; 0000 0101 //        }
                 ; 0000 0102 else
0003f5 c014      	RJMP _0x41
                 _0x3E:
                 ; 0000 0103 {
                 ; 0000 0104 if(strstr(response,"OK")  || strstr(response,"no"))
0003f6 01fe      	MOVW R30,R28
0003f7 9634      	ADIW R30,4
0003f8 93fa      	ST   -Y,R31
0003f9 93ea      	ST   -Y,R30
                +
0003fa eaa9     +LDI R26 , LOW ( _0x3F + ( 10 ) )
0003fb e0b3     +LDI R27 , HIGH ( _0x3F + ( 10 ) )
                 	__POINTW2MN _0x3F,10
0003fc d416      	RCALL _strstr
0003fd 9730      	SBIW R30,0
0003fe f449      	BRNE _0x43
0003ff 01fe      	MOVW R30,R28
000400 9634      	ADIW R30,4
000401 93fa      	ST   -Y,R31
000402 93ea      	ST   -Y,R30
                +
000403 eaac     +LDI R26 , LOW ( _0x3F + ( 13 ) )
000404 e0b3     +LDI R27 , HIGH ( _0x3F + ( 13 ) )
                 	__POINTW2MN _0x3F,13
000405 d40d      	RCALL _strstr
000406 9730      	SBIW R30,0
000407 f011      	BREQ _0x42
                 _0x43:
                 ; 0000 0105 {
                 ; 0000 0106 ok = 1;
000408 9468      	SET
000409 f8f0      	BLD  R15,0
                 ; 0000 0107 }
                 ; 0000 0108 }
                 _0x42:
                 _0x41:
                 ; 0000 0109 }
00040a cfb3      	RJMP _0x38
                 _0x3A:
                 ; 0000 010A 
                 ; 0000 010B if(debug)
                 ; 0000 010C {
                 ; 0000 010D //Serial.print(response);
                 ; 0000 010E }
                 ; 0000 010F return response;
00040b 01fe      	MOVW R30,R28
00040c 9634      	ADIW R30,4
00040d 96ef      	ADIW R28,63
00040e 96af      	ADIW R28,47
00040f 90ff      	POP  R15
000410 9508      	RET
                 ; 0000 0110 }
                 ; .FEND
                 
                 	.DSEG
                 _0x3F:
00039f           	.BYTE 0x10
                 ;unsigned char    *AtData(unsigned char    *data,  const int timeout, int debug)
                 ; 0000 0113 {
                 
                 	.CSEG
                 _AtData:
                 ; .FSTART _AtData
000411 92ff      	PUSH R15
                 ; 0000 0114 uchar response[50] = "";
                 ; 0000 0115 bit ok = 0;
                 ; 0000 0116 ulong time = millis;
                 ; 0000 0117 
                 ; 0000 0118 esp8266_print(data);
000412 93ba      	ST   -Y,R27
000413 93aa      	ST   -Y,R26
000414 97e6      	SBIW R28,54
000415 e382      	LDI  R24,50
000416 e0a4      	LDI  R26,LOW(4)
000417 e0b0      	LDI  R27,HIGH(4)
000418 ecee      	LDI  R30,LOW(_0x46*2)
000419 e0f0      	LDI  R31,HIGH(_0x46*2)
00041a d41d      	RCALL __INITLOCB
                 ;	*data -> Y+58
                 ;	timeout -> Y+56
                 ;	debug -> Y+54
                 ;	response -> Y+4
                 ;	ok -> R15.0
                 ;	time -> Y+0
00041b 24ff      	CLR  R15
00041c 91e0 0497 	LDS  R30,_millis
00041e 91f0 0498 	LDS  R31,_millis+1
000420 9160 0499 	LDS  R22,_millis+2
000422 9170 049a 	LDS  R23,_millis+3
000424 d487      	RCALL __PUTD1S0
000425 adaa      	LDD  R26,Y+58
000426 adbb      	LDD  R27,Y+58+1
000427 d107      	RCALL _puts
                 ; 0000 0119 
                 ; 0000 011A if(debug)
                 ; 0000 011B {
                 ; 0000 011C //Serial.println("\r\nFeedBack:");
                 ; 0000 011D //Serial.write(data,dataSize);
                 ; 0000 011E }
                 ; 0000 011F 
                 ; 0000 0120 while( (time+timeout) > millis && !ok)
                 _0x48:
000428 ade8      	LDD  R30,Y+56
000429 adf9      	LDD  R31,Y+56+1
00042a d47c      	RCALL __GETD2S0
00042b d429      	RCALL __CWD1
00042c d416      	RCALL __ADDD21
00042d 91e0 0497 	LDS  R30,_millis
00042f 91f0 0498 	LDS  R31,_millis+1
000431 9160 0499 	LDS  R22,_millis+2
000433 9170 049a 	LDS  R23,_millis+3
000435 d484      	RCALL __CPD12
000436 f410      	BRSH _0x4B
000437 fef0      	SBRS R15,0
000438 c001      	RJMP _0x4C
                 _0x4B:
000439 c017      	RJMP _0x4A
                 _0x4C:
                 ; 0000 0121 {
                 ; 0000 0122 wdt_reset();
00043a 95a8      	WDR
                 ; 0000 0123 if(esp8266_available())
00043b ddbe      	RCALL _esp8266_available
00043c 9730      	SBIW R30,0
00043d f039      	BREQ _0x4D
                 ; 0000 0124 {
                 ; 0000 0125 esp8266_read(response,10);
00043e 01fe      	MOVW R30,R28
00043f 9634      	ADIW R30,4
000440 93fa      	ST   -Y,R31
000441 93ea      	ST   -Y,R30
000442 e0aa      	LDI  R26,LOW(10)
000443 e0b0      	LDI  R27,0
000444 d0fd      	RCALL _gets
                 ; 0000 0126 }
                 ; 0000 0127 
                 ; 0000 0128 if(strstr(response,"OK"))
                 _0x4D:
000445 01fe      	MOVW R30,R28
000446 9634      	ADIW R30,4
000447 93fa      	ST   -Y,R31
000448 93ea      	ST   -Y,R30
                +
000449 eaaf     +LDI R26 , LOW ( _0x4F + ( 0 ) )
00044a e0b3     +LDI R27 , HIGH ( _0x4F + ( 0 ) )
                 	__POINTW2MN _0x4F,0
00044b d3c7      	RCALL _strstr
00044c 9730      	SBIW R30,0
00044d f011      	BREQ _0x4E
                 ; 0000 0129 {
                 ; 0000 012A //Flash();
                 ; 0000 012B ok = 1;
00044e 9468      	SET
00044f f8f0      	BLD  R15,0
                 ; 0000 012C }
                 ; 0000 012D }
                 _0x4E:
000450 cfd7      	RJMP _0x48
                 _0x4A:
                 ; 0000 012E 
                 ; 0000 012F if(debug)
                 ; 0000 0130 {
                 ; 0000 0131 //Serial.print(response);
                 ; 0000 0132 }
                 ; 0000 0133 
                 ; 0000 0134 return response;
000451 01fe      	MOVW R30,R28
000452 9634      	ADIW R30,4
000453 96ec      	ADIW R28,60
000454 90ff      	POP  R15
000455 9508      	RET
                 ; 0000 0135 }
                 ; .FEND
                 
                 	.DSEG
                 _0x4F:
0003af           	.BYTE 0x3
                 ;void CIPData(unsigned char    *connectionId, unsigned char    *data)
                 ; 0000 0138 {
                 
                 	.CSEG
                 _CIPData:
                 ; .FSTART _CIPData
                 ; 0000 0139 uchar buff[50]=""; //+IPD,0,4:o=u
                 ; 0000 013A sprintf(buff,"AT+CIPSEND=%s,%d\r\n",connectionId,strlen(data));
000456 93ba      	ST   -Y,R27
000457 93aa      	ST   -Y,R26
000458 97e2      	SBIW R28,50
000459 e382      	LDI  R24,50
00045a e0a0      	LDI  R26,LOW(0)
00045b e0b0      	LDI  R27,HIGH(0)
00045c e0e0      	LDI  R30,LOW(_0x51*2)
00045d e0f1      	LDI  R31,HIGH(_0x51*2)
00045e d3d9      	RCALL __INITLOCB
                 ;	*connectionId -> Y+52
                 ;	*data -> Y+50
                 ;	buff -> Y+0
00045f 01fe      	MOVW R30,R28
000460 93fa      	ST   -Y,R31
000461 93ea      	ST   -Y,R30
                +
000462 ebeb     +LDI R30 , LOW ( 2 * _0x0 + ( 137 ) )
000463 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 137 ) )
                 	__POINTW1FN _0x0,137
000464 93fa      	ST   -Y,R31
000465 93ea      	ST   -Y,R30
000466 ade8      	LDD  R30,Y+56
000467 adf9      	LDD  R31,Y+56+1
000468 2766      	CLR  R22
000469 2777      	CLR  R23
00046a d446      	RCALL __PUTPARD1
00046b adaa      	LDD  R26,Y+58
00046c adbb      	LDD  R27,Y+58+1
00046d d38c      	RCALL _strlen
00046e 2766      	CLR  R22
00046f 2777      	CLR  R23
000470 d440      	RCALL __PUTPARD1
000471 e088      	LDI  R24,8
000472 d345      	RCALL _sprintf
000473 962c      	ADIW R28,12
                 ; 0000 013B AtCommand(buff,200,DEBUG);//****1000
000474 01fe      	MOVW R30,R28
000475 93fa      	ST   -Y,R31
000476 93ea      	ST   -Y,R30
000477 ece8      	LDI  R30,LOW(200)
000478 e0f0      	LDI  R31,HIGH(200)
000479 93fa      	ST   -Y,R31
00047a 93ea      	ST   -Y,R30
00047b e0a1      	LDI  R26,LOW(1)
00047c e0b0      	LDI  R27,0
00047d df25      	RCALL _AtCommand
                 ; 0000 013C 
                 ; 0000 013D AtData(data,200,DEBUG);//****1000
00047e a9ea      	LDD  R30,Y+50
00047f a9fb      	LDD  R31,Y+50+1
000480 93fa      	ST   -Y,R31
000481 93ea      	ST   -Y,R30
000482 ece8      	LDI  R30,LOW(200)
000483 e0f0      	LDI  R31,HIGH(200)
000484 93fa      	ST   -Y,R31
000485 93ea      	ST   -Y,R30
000486 e0a1      	LDI  R26,LOW(1)
000487 e0b0      	LDI  R27,0
000488 df88      	RCALL _AtData
                 ; 0000 013E 
                 ; 0000 013F sprintf(buff,"AT+CIPCLOSE=%s\r\n",connectionId);
000489 01fe      	MOVW R30,R28
00048a 93fa      	ST   -Y,R31
00048b 93ea      	ST   -Y,R30
                +
00048c ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 156 ) )
00048d e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 156 ) )
                 	__POINTW1FN _0x0,156
00048e 93fa      	ST   -Y,R31
00048f 93ea      	ST   -Y,R30
000490 ade8      	LDD  R30,Y+56
000491 adf9      	LDD  R31,Y+56+1
000492 2766      	CLR  R22
000493 2777      	CLR  R23
000494 d41c      	RCALL __PUTPARD1
000495 e084      	LDI  R24,4
000496 d321      	RCALL _sprintf
000497 9628      	ADIW R28,8
                 ; 0000 0140 AtCommand(buff,200,DEBUG); // close connection***1000
000498 01fe      	MOVW R30,R28
000499 93fa      	ST   -Y,R31
00049a 93ea      	ST   -Y,R30
00049b ece8      	LDI  R30,LOW(200)
00049c e0f0      	LDI  R31,HIGH(200)
00049d 93fa      	ST   -Y,R31
00049e 93ea      	ST   -Y,R30
00049f e0a1      	LDI  R26,LOW(1)
0004a0 e0b0      	LDI  R27,0
0004a1 df01      	RCALL _AtCommand
                 ; 0000 0141 }
0004a2 96e6      	ADIW R28,54
0004a3 9508      	RET
                 ; .FEND
                 ;void init_esp(void)
                 ; 0000 0144 {
                 _init_esp:
                 ; .FSTART _init_esp
                 ; 0000 0145 //AT+CWJAP?
                 ; 0000 0146 //AtCommand("AT+CWAUTOCONN?\r\n",100,DEBUG);
                 ; 0000 0147 //AtCommand("AT+CWMODE?\r\n",100,DEBUG);
                 ; 0000 0148 //AtCommand("AT+CIPSTA_DEF?\r\n",100,DEBUG);
                 ; 0000 0149 //AtCommand("AT+RFPOWER=82",100,DEBUG);
                 ; 0000 014A 
                 ; 0000 014B AtCommand("ATE0\r\n",100,DEBUG);
                +
0004a4 ebe2     +LDI R30 , LOW ( _0x52 + ( 0 ) )
0004a5 e0f3     +LDI R31 , HIGH ( _0x52 + ( 0 ) )
                 	__POINTW1MN _0x52,0
0004a6 93fa      	ST   -Y,R31
0004a7 93ea      	ST   -Y,R30
0004a8 e6e4      	LDI  R30,LOW(100)
0004a9 e0f0      	LDI  R31,HIGH(100)
0004aa 93fa      	ST   -Y,R31
0004ab 93ea      	ST   -Y,R30
0004ac e0a1      	LDI  R26,LOW(1)
0004ad e0b0      	LDI  R27,0
0004ae def4      	RCALL _AtCommand
                 ; 0000 014C 
                 ; 0000 014D AtCommand("AT+CWMODE=1\r\n",1000,DEBUG); // configure as access point
                +
0004af ebe9     +LDI R30 , LOW ( _0x52 + ( 7 ) )
0004b0 e0f3     +LDI R31 , HIGH ( _0x52 + ( 7 ) )
                 	__POINTW1MN _0x52,7
0004b1 93fa      	ST   -Y,R31
0004b2 93ea      	ST   -Y,R30
0004b3 eee8      	LDI  R30,LOW(1000)
0004b4 e0f3      	LDI  R31,HIGH(1000)
0004b5 93fa      	ST   -Y,R31
0004b6 93ea      	ST   -Y,R30
0004b7 e0a1      	LDI  R26,LOW(1)
0004b8 e0b0      	LDI  R27,0
0004b9 dee9      	RCALL _AtCommand
                 ; 0000 014E AtCommand("AT+CWAUTOCONN=1\r\n",100,DEBUG);
                +
0004ba ece7     +LDI R30 , LOW ( _0x52 + ( 21 ) )
0004bb e0f3     +LDI R31 , HIGH ( _0x52 + ( 21 ) )
                 	__POINTW1MN _0x52,21
0004bc 93fa      	ST   -Y,R31
0004bd 93ea      	ST   -Y,R30
0004be e6e4      	LDI  R30,LOW(100)
0004bf e0f0      	LDI  R31,HIGH(100)
0004c0 93fa      	ST   -Y,R31
0004c1 93ea      	ST   -Y,R30
0004c2 e0a1      	LDI  R26,LOW(1)
0004c3 e0b0      	LDI  R27,0
0004c4 dede      	RCALL _AtCommand
                 ; 0000 014F AtCommand("AT+CWJAP_DEF=\"SmartLife\",\"Life@2020\"\r\n",10000,DEBUG);//,\"AC:5F:3E:48:17:E7\"   // \"Broo\",\"mrb131113\",\"60:83:34:29:2d:2c\" -- \"TP-LINK_7DEADE\",\"maf123456\",\"c4:e9:84:7d:ea:de\"
                +
0004c5 ede9     +LDI R30 , LOW ( _0x52 + ( 39 ) )
0004c6 e0f3     +LDI R31 , HIGH ( _0x52 + ( 39 ) )
                 	__POINTW1MN _0x52,39
0004c7 93fa      	ST   -Y,R31
0004c8 93ea      	ST   -Y,R30
0004c9 e1e0      	LDI  R30,LOW(10000)
0004ca e2f7      	LDI  R31,HIGH(10000)
0004cb 93fa      	ST   -Y,R31
0004cc 93ea      	ST   -Y,R30
0004cd e0a1      	LDI  R26,LOW(1)
0004ce e0b0      	LDI  R27,0
0004cf ded3      	RCALL _AtCommand
                 ; 0000 0150 AtCommand("AT+CIPSTA_DEF=\"192.168.1.150\",\"192.168.1.1\",\"255.255.255.0\"\r\n",500,DEBUG);
                +
0004d0 e0e0     +LDI R30 , LOW ( _0x52 + ( 78 ) )
0004d1 e0f4     +LDI R31 , HIGH ( _0x52 + ( 78 ) )
                 	__POINTW1MN _0x52,78
0004d2 93fa      	ST   -Y,R31
0004d3 93ea      	ST   -Y,R30
0004d4 efe4      	LDI  R30,LOW(500)
0004d5 e0f1      	LDI  R31,HIGH(500)
0004d6 93fa      	ST   -Y,R31
0004d7 93ea      	ST   -Y,R30
0004d8 e0a1      	LDI  R26,LOW(1)
0004d9 e0b0      	LDI  R27,0
0004da dec8      	RCALL _AtCommand
                 ; 0000 0151 
                 ; 0000 0152 AtCommand("AT+CIPMUX=1\r\n",150,DEBUG); // configure for multiple connections
                +
0004db e3ee     +LDI R30 , LOW ( _0x52 + ( 140 ) )
0004dc e0f4     +LDI R31 , HIGH ( _0x52 + ( 140 ) )
                 	__POINTW1MN _0x52,140
0004dd 93fa      	ST   -Y,R31
0004de 93ea      	ST   -Y,R30
0004df e9e6      	LDI  R30,LOW(150)
0004e0 e0f0      	LDI  R31,HIGH(150)
0004e1 93fa      	ST   -Y,R31
0004e2 93ea      	ST   -Y,R30
0004e3 e0a1      	LDI  R26,LOW(1)
0004e4 e0b0      	LDI  R27,0
0004e5 debd      	RCALL _AtCommand
                 ; 0000 0153 AtCommand("AT+CIPSERVER=1,1001\r\n",150,DEBUG); // turn on server on port 1001
                +
0004e6 e4ec     +LDI R30 , LOW ( _0x52 + ( 154 ) )
0004e7 e0f4     +LDI R31 , HIGH ( _0x52 + ( 154 ) )
                 	__POINTW1MN _0x52,154
0004e8 93fa      	ST   -Y,R31
0004e9 93ea      	ST   -Y,R30
0004ea e9e6      	LDI  R30,LOW(150)
0004eb e0f0      	LDI  R31,HIGH(150)
0004ec 93fa      	ST   -Y,R31
0004ed 93ea      	ST   -Y,R30
0004ee e0a1      	LDI  R26,LOW(1)
0004ef e0b0      	LDI  R27,0
0004f0 deb2      	RCALL _AtCommand
                 ; 0000 0154 AtCommand("AT+CIPSTO=10\r\n",150,DEBUG);
                +
0004f1 e6e2     +LDI R30 , LOW ( _0x52 + ( 176 ) )
0004f2 e0f4     +LDI R31 , HIGH ( _0x52 + ( 176 ) )
                 	__POINTW1MN _0x52,176
0004f3 93fa      	ST   -Y,R31
0004f4 93ea      	ST   -Y,R30
0004f5 e9e6      	LDI  R30,LOW(150)
0004f6 e0f0      	LDI  R31,HIGH(150)
0004f7 93fa      	ST   -Y,R31
0004f8 93ea      	ST   -Y,R30
0004f9 e0a1      	LDI  R26,LOW(1)
0004fa e0b0      	LDI  R27,0
0004fb dea7      	RCALL _AtCommand
                 ; 0000 0155 
                 ; 0000 0156 AtCommand("AT+CIPSTATUS\r\n",100,DEBUG); // check if =2 got ip or =5 not
                +
0004fc e7e1     +LDI R30 , LOW ( _0x52 + ( 191 ) )
0004fd e0f4     +LDI R31 , HIGH ( _0x52 + ( 191 ) )
                 	__POINTW1MN _0x52,191
0004fe 93fa      	ST   -Y,R31
0004ff 93ea      	ST   -Y,R30
000500 e6e4      	LDI  R30,LOW(100)
000501 e0f0      	LDI  R31,HIGH(100)
000502 93fa      	ST   -Y,R31
000503 93ea      	ST   -Y,R30
000504 e0a1      	LDI  R26,LOW(1)
000505 e0b0      	LDI  R27,0
000506 de9c      	RCALL _AtCommand
                 ; 0000 0157 AtCommand("AT+CIFSR\r\n",100,DEBUG); // get ip address
                +
000507 e8e0     +LDI R30 , LOW ( _0x52 + ( 206 ) )
000508 e0f4     +LDI R31 , HIGH ( _0x52 + ( 206 ) )
                 	__POINTW1MN _0x52,206
000509 93fa      	ST   -Y,R31
00050a 93ea      	ST   -Y,R30
00050b e6e4      	LDI  R30,LOW(100)
00050c e0f0      	LDI  R31,HIGH(100)
00050d 93fa      	ST   -Y,R31
00050e 93ea      	ST   -Y,R30
00050f e0a1      	LDI  R26,LOW(1)
000510 e0b0      	LDI  R27,0
000511 de91      	RCALL _AtCommand
                 ; 0000 0158 AtCommand("AT+CWJAP?\r\n",100,DEBUG);
                +
000512 e8eb     +LDI R30 , LOW ( _0x52 + ( 217 ) )
000513 e0f4     +LDI R31 , HIGH ( _0x52 + ( 217 ) )
                 	__POINTW1MN _0x52,217
000514 93fa      	ST   -Y,R31
000515 93ea      	ST   -Y,R30
000516 e6e4      	LDI  R30,LOW(100)
000517 e0f0      	LDI  R31,HIGH(100)
000518 93fa      	ST   -Y,R31
000519 93ea      	ST   -Y,R30
00051a e0a1      	LDI  R26,LOW(1)
00051b e0b0      	LDI  R27,0
00051c de86      	RCALL _AtCommand
                 ; 0000 0159 
                 ; 0000 015A }
00051d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x52:
0003b2           	.BYTE 0xE5
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 _0x2000003:
00051e 91e0 00c0 	LDS  R30,192
000520 78e0      	ANDI R30,LOW(0x80)
000521 f3e1      	BREQ _0x2000003
000522 91e0 00c6 	LDS  R30,198
000524 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
000525 93aa      	ST   -Y,R26
                 _0x2000006:
000526 91e0 00c0 	LDS  R30,192
000528 72e0      	ANDI R30,LOW(0x20)
000529 f3e1      	BREQ _0x2000006
00052a 81e8      	LD   R30,Y
00052b 93e0 00c6 	STS  198,R30
00052d 9621      	ADIW R28,1
00052e 9508      	RET
                 ; .FEND
                 _puts:
                 ; .FSTART _puts
00052f 93ba      	ST   -Y,R27
000530 93aa      	ST   -Y,R26
000531 931a      	ST   -Y,R17
                 _0x2000009:
000532 81a9      	LDD  R26,Y+1
000533 81ba      	LDD  R27,Y+1+1
000534 91ed      	LD   R30,X+
000535 83a9      	STD  Y+1,R26
000536 83ba      	STD  Y+1+1,R27
000537 2f1e      	MOV  R17,R30
000538 30e0      	CPI  R30,0
000539 f019      	BREQ _0x200000B
00053a 2fa1      	MOV  R26,R17
00053b dfe9      	RCALL _putchar
00053c cff5      	RJMP _0x2000009
                 _0x200000B:
00053d e0aa      	LDI  R26,LOW(10)
00053e dfe6      	RCALL _putchar
00053f 8118      	LDD  R17,Y+0
000540 9623      	ADIW R28,3
000541 9508      	RET
                 ; .FEND
                 _gets:
                 ; .FSTART _gets
000542 93ba      	ST   -Y,R27
000543 93aa      	ST   -Y,R26
000544 d2e5      	RCALL __SAVELOCR6
                +
000545 810e     +LDD R16 , Y + 6
000546 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
000547 8528     +LDD R18 , Y + 8
000548 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x200000F:
000549 2e00      	MOV  R0,R16
00054a 2a01      	OR   R0,R17
00054b f0d9      	BREQ _0x2000011
                 _0x2000012:
00054c dfd1      	RCALL _getchar
00054d 2f5e      	MOV  R21,R30
00054e 3058      	CPI  R21,8
00054f f451      	BRNE _0x2000013
000550 81ae      	LDD  R26,Y+6
000551 81bf      	LDD  R27,Y+6+1
000552 170a      	CP   R16,R26
000553 071b      	CPC  R17,R27
000554 f420      	BRSH _0x2000014
                +
000555 5021     +SUBI R18 , LOW ( 1 )
000556 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
000557 5f0f     +SUBI R16 , LOW ( - 1 )
000558 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x2000014:
000559 cff2      	RJMP _0x2000012
                 _0x2000013:
00055a 305a      	CPI  R21,10
00055b f059      	BREQ _0x2000011
00055c 933f      	PUSH R19
00055d 932f      	PUSH R18
                +
00055e 5f2f     +SUBI R18 , LOW ( - 1 )
00055f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000560 2fe5      	MOV  R30,R21
000561 91af      	POP  R26
000562 91bf      	POP  R27
000563 93ec      	ST   X,R30
                +
000564 5001     +SUBI R16 , LOW ( 1 )
000565 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000566 cfe2      	RJMP _0x200000F
                 _0x2000011:
000567 01d9      	MOVW R26,R18
000568 e0e0      	LDI  R30,LOW(0)
000569 93ec      	ST   X,R30
00056a 85e8      	LDD  R30,Y+8
00056b 85f9      	LDD  R31,Y+8+1
00056c d2c4      	RCALL __LOADLOCR6
00056d 962a      	ADIW R28,10
00056e 9508      	RET
                 ; .FEND
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00056f 93ba      	ST   -Y,R27
000570 93aa      	ST   -Y,R26
000571 931a      	ST   -Y,R17
000572 930a      	ST   -Y,R16
000573 81aa      	LDD  R26,Y+2
000574 81bb      	LDD  R27,Y+2+1
000575 9612      	ADIW R26,2
000576 d30b      	RCALL __GETW1P
000577 9730      	SBIW R30,0
000578 f149      	BREQ _0x2000016
000579 81aa      	LDD  R26,Y+2
00057a 81bb      	LDD  R27,Y+2+1
00057b 9614      	ADIW R26,4
00057c d305      	RCALL __GETW1P
00057d 018f      	MOVW R16,R30
00057e 9730      	SBIW R30,0
00057f f061      	BREQ _0x2000018
                +
000580 3002     +CPI R16 , LOW ( 2 )
000581 e0e0     +LDI R30 , HIGH ( 2 )
000582 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000583 f098      	BRLO _0x2000019
000584 01f8      	MOVW R30,R16
000585 9731      	SBIW R30,1
000586 018f      	MOVW R16,R30
                +
000587 81aa     +LDD R26 , Y + 2
000588 81bb     +LDD R27 , Y + 2 + 1
000589 9614     +ADIW R26 , 4
00058a 93ed     +ST X + , R30
00058b 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000018:
00058c 81aa      	LDD  R26,Y+2
00058d 81bb      	LDD  R27,Y+2+1
00058e 9612      	ADIW R26,2
00058f 91ed      	LD   R30,X+
000590 91fd      	LD   R31,X+
000591 9631      	ADIW R30,1
000592 93fe      	ST   -X,R31
000593 93ee      	ST   -X,R30
000594 9731      	SBIW R30,1
000595 81ac      	LDD  R26,Y+4
000596 83a0      	STD  Z+0,R26
                 _0x2000019:
000597 81aa      	LDD  R26,Y+2
000598 81bb      	LDD  R27,Y+2+1
000599 d2e8      	RCALL __GETW1P
00059a 23ff      	TST  R31
00059b f02a      	BRMI _0x200001A
00059c 91ed      	LD   R30,X+
00059d 91fd      	LD   R31,X+
00059e 9631      	ADIW R30,1
00059f 93fe      	ST   -X,R31
0005a0 93ee      	ST   -X,R30
                 _0x200001A:
0005a1 c006      	RJMP _0x200001B
                 _0x2000016:
0005a2 81aa      	LDD  R26,Y+2
0005a3 81bb      	LDD  R27,Y+2+1
0005a4 efef      	LDI  R30,LOW(65535)
0005a5 efff      	LDI  R31,HIGH(65535)
0005a6 93ed      	ST   X+,R30
0005a7 93fc      	ST   X,R31
                 _0x200001B:
0005a8 8119      	LDD  R17,Y+1
0005a9 8108      	LDD  R16,Y+0
0005aa 9625      	ADIW R28,5
0005ab 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0005ac 93ba      	ST   -Y,R27
0005ad 93aa      	ST   -Y,R26
0005ae 972c      	SBIW R28,12
0005af d27a      	RCALL __SAVELOCR6
0005b0 e010      	LDI  R17,0
0005b1 89aa      	LDD  R26,Y+18
0005b2 89bb      	LDD  R27,Y+18+1
0005b3 e0e0      	LDI  R30,LOW(0)
0005b4 e0f0      	LDI  R31,HIGH(0)
0005b5 93ed      	ST   X+,R30
0005b6 93fc      	ST   X,R31
                 _0x200001C:
0005b7 8de8      	LDD  R30,Y+24
0005b8 8df9      	LDD  R31,Y+24+1
0005b9 9631      	ADIW R30,1
0005ba 8fe8      	STD  Y+24,R30
0005bb 8ff9      	STD  Y+24+1,R31
0005bc 9731      	SBIW R30,1
0005bd 91e4      	LPM  R30,Z
0005be 2f2e      	MOV  R18,R30
0005bf 30e0      	CPI  R30,0
0005c0 f409      	BRNE PC+2
0005c1 c1ef      	RJMP _0x200001E
0005c2 2fe1      	MOV  R30,R17
0005c3 30e0      	CPI  R30,0
0005c4 f459      	BRNE _0x2000022
0005c5 3225      	CPI  R18,37
0005c6 f411      	BRNE _0x2000023
0005c7 e011      	LDI  R17,LOW(1)
0005c8 c006      	RJMP _0x2000024
                 _0x2000023:
0005c9 932a      	ST   -Y,R18
0005ca 89ab      	LDD  R26,Y+19
0005cb 89bc      	LDD  R27,Y+19+1
0005cc 89ed      	LDD  R30,Y+21
0005cd 89fe      	LDD  R31,Y+21+1
0005ce 9509      	ICALL
                 _0x2000024:
0005cf c1e0      	RJMP _0x2000021
                 _0x2000022:
0005d0 30e1      	CPI  R30,LOW(0x1)
0005d1 f4e1      	BRNE _0x2000025
0005d2 3225      	CPI  R18,37
0005d3 f439      	BRNE _0x2000026
0005d4 932a      	ST   -Y,R18
0005d5 89ab      	LDD  R26,Y+19
0005d6 89bc      	LDD  R27,Y+19+1
0005d7 89ed      	LDD  R30,Y+21
0005d8 89fe      	LDD  R31,Y+21+1
0005d9 9509      	ICALL
0005da c1d4      	RJMP _0x20000F0
                 _0x2000026:
0005db e012      	LDI  R17,LOW(2)
0005dc e0e0      	LDI  R30,LOW(0)
0005dd 8be9      	STD  Y+17,R30
0005de e000      	LDI  R16,LOW(0)
0005df 322d      	CPI  R18,45
0005e0 f411      	BRNE _0x2000027
0005e1 e001      	LDI  R16,LOW(1)
0005e2 c1cd      	RJMP _0x2000021
                 _0x2000027:
0005e3 322b      	CPI  R18,43
0005e4 f419      	BRNE _0x2000028
0005e5 e2eb      	LDI  R30,LOW(43)
0005e6 8be9      	STD  Y+17,R30
0005e7 c1c8      	RJMP _0x2000021
                 _0x2000028:
0005e8 3220      	CPI  R18,32
0005e9 f419      	BRNE _0x2000029
0005ea e2e0      	LDI  R30,LOW(32)
0005eb 8be9      	STD  Y+17,R30
0005ec c1c3      	RJMP _0x2000021
                 _0x2000029:
0005ed c002      	RJMP _0x200002A
                 _0x2000025:
0005ee 30e2      	CPI  R30,LOW(0x2)
0005ef f439      	BRNE _0x200002B
                 _0x200002A:
0005f0 e050      	LDI  R21,LOW(0)
0005f1 e013      	LDI  R17,LOW(3)
0005f2 3320      	CPI  R18,48
0005f3 f411      	BRNE _0x200002C
0005f4 6800      	ORI  R16,LOW(128)
0005f5 c1ba      	RJMP _0x2000021
                 _0x200002C:
0005f6 c002      	RJMP _0x200002D
                 _0x200002B:
0005f7 30e3      	CPI  R30,LOW(0x3)
0005f8 f491      	BRNE _0x200002E
                 _0x200002D:
0005f9 3320      	CPI  R18,48
0005fa f010      	BRLO _0x2000030
0005fb 332a      	CPI  R18,58
0005fc f008      	BRLO _0x2000031
                 _0x2000030:
0005fd c007      	RJMP _0x200002F
                 _0x2000031:
0005fe e0aa      	LDI  R26,LOW(10)
0005ff 9f5a      	MUL  R21,R26
000600 2d50      	MOV  R21,R0
000601 2fe2      	MOV  R30,R18
000602 53e0      	SUBI R30,LOW(48)
000603 0f5e      	ADD  R21,R30
000604 c1ab      	RJMP _0x2000021
                 _0x200002F:
000605 e040      	LDI  R20,LOW(0)
000606 322e      	CPI  R18,46
000607 f411      	BRNE _0x2000032
000608 e014      	LDI  R17,LOW(4)
000609 c1a6      	RJMP _0x2000021
                 _0x2000032:
00060a c00e      	RJMP _0x2000033
                 _0x200002E:
00060b 30e4      	CPI  R30,LOW(0x4)
00060c f491      	BRNE _0x2000035
00060d 3320      	CPI  R18,48
00060e f010      	BRLO _0x2000037
00060f 332a      	CPI  R18,58
000610 f008      	BRLO _0x2000038
                 _0x2000037:
000611 c007      	RJMP _0x2000036
                 _0x2000038:
000612 e0aa      	LDI  R26,LOW(10)
000613 9f4a      	MUL  R20,R26
000614 2d40      	MOV  R20,R0
000615 2fe2      	MOV  R30,R18
000616 53e0      	SUBI R30,LOW(48)
000617 0f4e      	ADD  R20,R30
000618 c197      	RJMP _0x2000021
                 _0x2000036:
                 _0x2000033:
000619 362c      	CPI  R18,108
00061a f419      	BRNE _0x2000039
00061b 6002      	ORI  R16,LOW(2)
00061c e015      	LDI  R17,LOW(5)
00061d c192      	RJMP _0x2000021
                 _0x2000039:
00061e c003      	RJMP _0x200003A
                 _0x2000035:
00061f 30e5      	CPI  R30,LOW(0x5)
000620 f009      	BREQ PC+2
000621 c18e      	RJMP _0x2000021
                 _0x200003A:
000622 2fe2      	MOV  R30,R18
000623 36e3      	CPI  R30,LOW(0x63)
000624 f469      	BRNE _0x200003F
000625 89ee      	LDD  R30,Y+22
000626 89ff      	LDD  R31,Y+22+1
000627 9734      	SBIW R30,4
000628 8bee      	STD  Y+22,R30
000629 8bff      	STD  Y+22+1,R31
00062a 81a4      	LDD  R26,Z+4
00062b 93aa      	ST   -Y,R26
00062c 89ab      	LDD  R26,Y+19
00062d 89bc      	LDD  R27,Y+19+1
00062e 89ed      	LDD  R30,Y+21
00062f 89fe      	LDD  R31,Y+21+1
000630 9509      	ICALL
000631 c17d      	RJMP _0x2000040
                 _0x200003F:
000632 37e3      	CPI  R30,LOW(0x73)
000633 f489      	BRNE _0x2000042
000634 89ee      	LDD  R30,Y+22
000635 89ff      	LDD  R31,Y+22+1
000636 9734      	SBIW R30,4
000637 8bee      	STD  Y+22,R30
000638 8bff      	STD  Y+22+1,R31
000639 89ae      	LDD  R26,Y+22
00063a 89bf      	LDD  R27,Y+22+1
00063b 9614      	ADIW R26,4
00063c 91ed      	LD   R30,X+
00063d 91fd      	LD   R31,X+
00063e 83ee      	STD  Y+6,R30
00063f 83ff      	STD  Y+6+1,R31
000640 81ae      	LDD  R26,Y+6
000641 81bf      	LDD  R27,Y+6+1
000642 d1b7      	RCALL _strlen
000643 2f1e      	MOV  R17,R30
000644 c013      	RJMP _0x2000043
                 _0x2000042:
000645 37e0      	CPI  R30,LOW(0x70)
000646 f4e9      	BRNE _0x2000045
000647 89ee      	LDD  R30,Y+22
000648 89ff      	LDD  R31,Y+22+1
000649 9734      	SBIW R30,4
00064a 8bee      	STD  Y+22,R30
00064b 8bff      	STD  Y+22+1,R31
00064c 89ae      	LDD  R26,Y+22
00064d 89bf      	LDD  R27,Y+22+1
00064e 9614      	ADIW R26,4
00064f 91ed      	LD   R30,X+
000650 91fd      	LD   R31,X+
000651 83ee      	STD  Y+6,R30
000652 83ff      	STD  Y+6+1,R31
000653 81ae      	LDD  R26,Y+6
000654 81bf      	LDD  R27,Y+6+1
000655 d1b0      	RCALL _strlenf
000656 2f1e      	MOV  R17,R30
000657 6008      	ORI  R16,LOW(8)
                 _0x2000043:
000658 770f      	ANDI R16,LOW(127)
000659 3040      	CPI  R20,0
00065a f011      	BREQ _0x2000047
00065b 1741      	CP   R20,R17
00065c f008      	BRLO _0x2000048
                 _0x2000047:
00065d c001      	RJMP _0x2000046
                 _0x2000048:
00065e 2f14      	MOV  R17,R20
                 _0x2000046:
00065f e040      	LDI  R20,LOW(0)
000660 e0e0      	LDI  R30,LOW(0)
000661 8be8      	STD  Y+16,R30
000662 e030      	LDI  R19,LOW(0)
000663 c083      	RJMP _0x2000049
                 _0x2000045:
000664 36e4      	CPI  R30,LOW(0x64)
000665 f011      	BREQ _0x200004C
000666 36e9      	CPI  R30,LOW(0x69)
000667 f411      	BRNE _0x200004D
                 _0x200004C:
000668 6004      	ORI  R16,LOW(4)
000669 c002      	RJMP _0x200004E
                 _0x200004D:
00066a 37e5      	CPI  R30,LOW(0x75)
00066b f4c1      	BRNE _0x200004F
                 _0x200004E:
00066c e0ea      	LDI  R30,LOW(10)
00066d 8be8      	STD  Y+16,R30
00066e ff01      	SBRS R16,1
00066f c00a      	RJMP _0x2000050
                +
000670 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000671 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000672 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000673 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
                +
000674 87e8     +STD Y + 8 , R30
000675 87f9     +STD Y + 8 + 1 , R31
000676 876a     +STD Y + 8 + 2 , R22
000677 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
000678 e01a      	LDI  R17,LOW(10)
000679 c028      	RJMP _0x2000051
                 _0x2000050:
                +
00067a e1e0     +LDI R30 , LOW ( 0x2710 )
00067b e2f7     +LDI R31 , HIGH ( 0x2710 )
00067c e060     +LDI R22 , BYTE3 ( 0x2710 )
00067d e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
                +
00067e 87e8     +STD Y + 8 , R30
00067f 87f9     +STD Y + 8 + 1 , R31
000680 876a     +STD Y + 8 + 2 , R22
000681 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
000682 e015      	LDI  R17,LOW(5)
000683 c01e      	RJMP _0x2000051
                 _0x200004F:
000684 35e8      	CPI  R30,LOW(0x58)
000685 f411      	BRNE _0x2000053
000686 6008      	ORI  R16,LOW(8)
000687 c003      	RJMP _0x2000054
                 _0x2000053:
000688 37e8      	CPI  R30,LOW(0x78)
000689 f009      	BREQ PC+2
00068a c124      	RJMP _0x2000092
                 _0x2000054:
00068b e1e0      	LDI  R30,LOW(16)
00068c 8be8      	STD  Y+16,R30
00068d ff01      	SBRS R16,1
00068e c00a      	RJMP _0x2000056
                +
00068f e0e0     +LDI R30 , LOW ( 0x10000000 )
000690 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000691 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000692 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
                +
000693 87e8     +STD Y + 8 , R30
000694 87f9     +STD Y + 8 + 1 , R31
000695 876a     +STD Y + 8 + 2 , R22
000696 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
000697 e018      	LDI  R17,LOW(8)
000698 c009      	RJMP _0x2000051
                 _0x2000056:
                +
000699 e0e0     +LDI R30 , LOW ( 0x1000 )
00069a e1f0     +LDI R31 , HIGH ( 0x1000 )
00069b e060     +LDI R22 , BYTE3 ( 0x1000 )
00069c e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
                +
00069d 87e8     +STD Y + 8 , R30
00069e 87f9     +STD Y + 8 + 1 , R31
00069f 876a     +STD Y + 8 + 2 , R22
0006a0 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
0006a1 e014      	LDI  R17,LOW(4)
                 _0x2000051:
0006a2 3040      	CPI  R20,0
0006a3 f011      	BREQ _0x2000057
0006a4 770f      	ANDI R16,LOW(127)
0006a5 c001      	RJMP _0x2000058
                 _0x2000057:
0006a6 e041      	LDI  R20,LOW(1)
                 _0x2000058:
0006a7 ff01      	SBRS R16,1
0006a8 c00a      	RJMP _0x2000059
0006a9 89ee      	LDD  R30,Y+22
0006aa 89ff      	LDD  R31,Y+22+1
0006ab 9734      	SBIW R30,4
0006ac 8bee      	STD  Y+22,R30
0006ad 8bff      	STD  Y+22+1,R31
0006ae 89ae      	LDD  R26,Y+22
0006af 89bf      	LDD  R27,Y+22+1
0006b0 9614      	ADIW R26,4
0006b1 d1d4      	RCALL __GETD1P
0006b2 c018      	RJMP _0x20000F1
                 _0x2000059:
0006b3 ff02      	SBRS R16,2
0006b4 c00b      	RJMP _0x200005B
0006b5 89ee      	LDD  R30,Y+22
0006b6 89ff      	LDD  R31,Y+22+1
0006b7 9734      	SBIW R30,4
0006b8 8bee      	STD  Y+22,R30
0006b9 8bff      	STD  Y+22+1,R31
0006ba 89ae      	LDD  R26,Y+22
0006bb 89bf      	LDD  R27,Y+22+1
0006bc 9614      	ADIW R26,4
0006bd d1c4      	RCALL __GETW1P
0006be d196      	RCALL __CWD1
0006bf c00b      	RJMP _0x20000F1
                 _0x200005B:
0006c0 89ee      	LDD  R30,Y+22
0006c1 89ff      	LDD  R31,Y+22+1
0006c2 9734      	SBIW R30,4
0006c3 8bee      	STD  Y+22,R30
0006c4 8bff      	STD  Y+22+1,R31
0006c5 89ae      	LDD  R26,Y+22
0006c6 89bf      	LDD  R27,Y+22+1
0006c7 9614      	ADIW R26,4
0006c8 d1b9      	RCALL __GETW1P
0006c9 2766      	CLR  R22
0006ca 2777      	CLR  R23
                 _0x20000F1:
                +
0006cb 87ec     +STD Y + 12 , R30
0006cc 87fd     +STD Y + 12 + 1 , R31
0006cd 876e     +STD Y + 12 + 2 , R22
0006ce 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006cf ff02      	SBRS R16,2
0006d0 c015      	RJMP _0x200005D
0006d1 85af      	LDD  R26,Y+15
0006d2 23aa      	TST  R26
0006d3 f45a      	BRPL _0x200005E
                +
0006d4 85ec     +LDD R30 , Y + 12
0006d5 85fd     +LDD R31 , Y + 12 + 1
0006d6 856e     +LDD R22 , Y + 12 + 2
0006d7 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0006d8 d174      	RCALL __ANEGD1
                +
0006d9 87ec     +STD Y + 12 , R30
0006da 87fd     +STD Y + 12 + 1 , R31
0006db 876e     +STD Y + 12 + 2 , R22
0006dc 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006dd e2ed      	LDI  R30,LOW(45)
0006de 8be9      	STD  Y+17,R30
                 _0x200005E:
0006df 89e9      	LDD  R30,Y+17
0006e0 30e0      	CPI  R30,0
0006e1 f019      	BREQ _0x200005F
0006e2 5f1f      	SUBI R17,-LOW(1)
0006e3 5f4f      	SUBI R20,-LOW(1)
0006e4 c001      	RJMP _0x2000060
                 _0x200005F:
0006e5 7f0b      	ANDI R16,LOW(251)
                 _0x2000060:
                 _0x200005D:
0006e6 2f34      	MOV  R19,R20
                 _0x2000049:
0006e7 fd00      	SBRC R16,0
0006e8 c018      	RJMP _0x2000061
                 _0x2000062:
0006e9 1715      	CP   R17,R21
0006ea f410      	BRSH _0x2000065
0006eb 1735      	CP   R19,R21
0006ec f008      	BRLO _0x2000066
                 _0x2000065:
0006ed c013      	RJMP _0x2000064
                 _0x2000066:
0006ee ff07      	SBRS R16,7
0006ef c008      	RJMP _0x2000067
0006f0 ff02      	SBRS R16,2
0006f1 c004      	RJMP _0x2000068
0006f2 7f0b      	ANDI R16,LOW(251)
0006f3 8929      	LDD  R18,Y+17
0006f4 5011      	SUBI R17,LOW(1)
0006f5 c001      	RJMP _0x2000069
                 _0x2000068:
0006f6 e320      	LDI  R18,LOW(48)
                 _0x2000069:
0006f7 c001      	RJMP _0x200006A
                 _0x2000067:
0006f8 e220      	LDI  R18,LOW(32)
                 _0x200006A:
0006f9 932a      	ST   -Y,R18
0006fa 89ab      	LDD  R26,Y+19
0006fb 89bc      	LDD  R27,Y+19+1
0006fc 89ed      	LDD  R30,Y+21
0006fd 89fe      	LDD  R31,Y+21+1
0006fe 9509      	ICALL
0006ff 5051      	SUBI R21,LOW(1)
000700 cfe8      	RJMP _0x2000062
                 _0x2000064:
                 _0x2000061:
                 _0x200006B:
000701 1714      	CP   R17,R20
000702 f4e0      	BRSH _0x200006D
000703 6100      	ORI  R16,LOW(16)
000704 ff02      	SBRS R16,2
000705 c00d      	RJMP _0x200006E
000706 7f0b      	ANDI R16,LOW(251)
000707 89e9      	LDD  R30,Y+17
000708 93ea      	ST   -Y,R30
000709 89ab      	LDD  R26,Y+19
00070a 89bc      	LDD  R27,Y+19+1
00070b 89ed      	LDD  R30,Y+21
00070c 89fe      	LDD  R31,Y+21+1
00070d 9509      	ICALL
00070e 3050      	CPI  R21,0
00070f f009      	BREQ _0x200006F
000710 5051      	SUBI R21,LOW(1)
                 _0x200006F:
000711 5011      	SUBI R17,LOW(1)
000712 5041      	SUBI R20,LOW(1)
                 _0x200006E:
000713 e3e0      	LDI  R30,LOW(48)
000714 93ea      	ST   -Y,R30
000715 89ab      	LDD  R26,Y+19
000716 89bc      	LDD  R27,Y+19+1
000717 89ed      	LDD  R30,Y+21
000718 89fe      	LDD  R31,Y+21+1
000719 9509      	ICALL
00071a 3050      	CPI  R21,0
00071b f009      	BREQ _0x2000070
00071c 5051      	SUBI R21,LOW(1)
                 _0x2000070:
00071d 5041      	SUBI R20,LOW(1)
00071e cfe2      	RJMP _0x200006B
                 _0x200006D:
00071f 2f31      	MOV  R19,R17
000720 89e8      	LDD  R30,Y+16
000721 30e0      	CPI  R30,0
000722 f4d9      	BRNE _0x2000071
                 _0x2000072:
000723 3030      	CPI  R19,0
000724 f0c1      	BREQ _0x2000074
000725 ff03      	SBRS R16,3
000726 c006      	RJMP _0x2000075
000727 81ee      	LDD  R30,Y+6
000728 81ff      	LDD  R31,Y+6+1
000729 9125      	LPM  R18,Z+
00072a 83ee      	STD  Y+6,R30
00072b 83ff      	STD  Y+6+1,R31
00072c c005      	RJMP _0x2000076
                 _0x2000075:
00072d 81ae      	LDD  R26,Y+6
00072e 81bf      	LDD  R27,Y+6+1
00072f 912d      	LD   R18,X+
000730 83ae      	STD  Y+6,R26
000731 83bf      	STD  Y+6+1,R27
                 _0x2000076:
000732 932a      	ST   -Y,R18
000733 89ab      	LDD  R26,Y+19
000734 89bc      	LDD  R27,Y+19+1
000735 89ed      	LDD  R30,Y+21
000736 89fe      	LDD  R31,Y+21+1
000737 9509      	ICALL
000738 3050      	CPI  R21,0
000739 f009      	BREQ _0x2000077
00073a 5051      	SUBI R21,LOW(1)
                 _0x2000077:
00073b 5031      	SUBI R19,LOW(1)
00073c cfe6      	RJMP _0x2000072
                 _0x2000074:
00073d c064      	RJMP _0x2000078
                 _0x2000071:
                 _0x200007A:
                +
00073e 85e8     +LDD R30 , Y + 8
00073f 85f9     +LDD R31 , Y + 8 + 1
000740 856a     +LDD R22 , Y + 8 + 2
000741 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
000742 85ac     +LDD R26 , Y + 12
000743 85bd     +LDD R27 , Y + 12 + 1
000744 858e     +LDD R24 , Y + 12 + 2
000745 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000746 d113      	RCALL __DIVD21U
000747 2f2e      	MOV  R18,R30
000748 302a      	CPI  R18,10
000749 f030      	BRLO _0x200007C
00074a ff03      	SBRS R16,3
00074b c002      	RJMP _0x200007D
00074c 5c29      	SUBI R18,-LOW(55)
00074d c001      	RJMP _0x200007E
                 _0x200007D:
00074e 5a29      	SUBI R18,-LOW(87)
                 _0x200007E:
00074f c001      	RJMP _0x200007F
                 _0x200007C:
000750 5d20      	SUBI R18,-LOW(48)
                 _0x200007F:
000751 fd04      	SBRC R16,4
000752 c028      	RJMP _0x2000081
000753 3321      	CPI  R18,49
000754 f460      	BRSH _0x2000083
                +
000755 85a8     +LDD R26 , Y + 8
000756 85b9     +LDD R27 , Y + 8 + 1
000757 858a     +LDD R24 , Y + 8 + 2
000758 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
                +
000759 30a1     +CPI R26 , LOW ( 0x1 )
00075a e0e0     +LDI R30 , HIGH ( 0x1 )
00075b 07be     +CPC R27 , R30
00075c e0e0     +LDI R30 , BYTE3 ( 0x1 )
00075d 078e     +CPC R24 , R30
00075e e0e0     +LDI R30 , BYTE4 ( 0x1 )
00075f 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000760 f409      	BRNE _0x2000082
                 _0x2000083:
000761 c00b      	RJMP _0x2000085
                 _0x2000082:
000762 1743      	CP   R20,R19
000763 f440      	BRSH _0x20000F2
000764 1753      	CP   R21,R19
000765 f010      	BRLO _0x2000088
000766 ff00      	SBRS R16,0
000767 c001      	RJMP _0x2000089
                 _0x2000088:
000768 c01b      	RJMP _0x2000087
                 _0x2000089:
000769 e220      	LDI  R18,LOW(32)
00076a ff07      	SBRS R16,7
00076b c00f      	RJMP _0x200008A
                 _0x20000F2:
00076c e320      	LDI  R18,LOW(48)
                 _0x2000085:
00076d 6100      	ORI  R16,LOW(16)
00076e ff02      	SBRS R16,2
00076f c00b      	RJMP _0x200008B
000770 7f0b      	ANDI R16,LOW(251)
000771 89e9      	LDD  R30,Y+17
000772 93ea      	ST   -Y,R30
000773 89ab      	LDD  R26,Y+19
000774 89bc      	LDD  R27,Y+19+1
000775 89ed      	LDD  R30,Y+21
000776 89fe      	LDD  R31,Y+21+1
000777 9509      	ICALL
000778 3050      	CPI  R21,0
000779 f009      	BREQ _0x200008C
00077a 5051      	SUBI R21,LOW(1)
                 _0x200008C:
                 _0x200008B:
                 _0x200008A:
                 _0x2000081:
00077b 932a      	ST   -Y,R18
00077c 89ab      	LDD  R26,Y+19
00077d 89bc      	LDD  R27,Y+19+1
00077e 89ed      	LDD  R30,Y+21
00077f 89fe      	LDD  R31,Y+21+1
000780 9509      	ICALL
000781 3050      	CPI  R21,0
000782 f009      	BREQ _0x200008D
000783 5051      	SUBI R21,LOW(1)
                 _0x200008D:
                 _0x2000087:
000784 5031      	SUBI R19,LOW(1)
                +
000785 85e8     +LDD R30 , Y + 8
000786 85f9     +LDD R31 , Y + 8 + 1
000787 856a     +LDD R22 , Y + 8 + 2
000788 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
000789 85ac     +LDD R26 , Y + 12
00078a 85bd     +LDD R27 , Y + 12 + 1
00078b 858e     +LDD R24 , Y + 12 + 2
00078c 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00078d d0f0      	RCALL __MODD21U
                +
00078e 87ec     +STD Y + 12 , R30
00078f 87fd     +STD Y + 12 + 1 , R31
000790 876e     +STD Y + 12 + 2 , R22
000791 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000792 89e8      	LDD  R30,Y+16
                +
000793 85a8     +LDD R26 , Y + 8
000794 85b9     +LDD R27 , Y + 8 + 1
000795 858a     +LDD R24 , Y + 8 + 2
000796 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000797 27ff      	CLR  R31
000798 2766      	CLR  R22
000799 2777      	CLR  R23
00079a d0bf      	RCALL __DIVD21U
                +
00079b 87e8     +STD Y + 8 , R30
00079c 87f9     +STD Y + 8 + 1 , R31
00079d 876a     +STD Y + 8 + 2 , R22
00079e 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00079f d116      	RCALL __CPD10
0007a0 f009      	BREQ _0x200007B
0007a1 cf9c      	RJMP _0x200007A
                 _0x200007B:
                 _0x2000078:
0007a2 ff00      	SBRS R16,0
0007a3 c00b      	RJMP _0x200008E
                 _0x200008F:
0007a4 3050      	CPI  R21,0
0007a5 f049      	BREQ _0x2000091
0007a6 5051      	SUBI R21,LOW(1)
0007a7 e2e0      	LDI  R30,LOW(32)
0007a8 93ea      	ST   -Y,R30
0007a9 89ab      	LDD  R26,Y+19
0007aa 89bc      	LDD  R27,Y+19+1
0007ab 89ed      	LDD  R30,Y+21
0007ac 89fe      	LDD  R31,Y+21+1
0007ad 9509      	ICALL
0007ae cff5      	RJMP _0x200008F
                 _0x2000091:
                 _0x200008E:
                 _0x2000092:
                 _0x2000040:
                 _0x20000F0:
0007af e010      	LDI  R17,LOW(0)
                 _0x2000021:
0007b0 ce06      	RJMP _0x200001C
                 _0x200001E:
0007b1 89aa      	LDD  R26,Y+18
0007b2 89bb      	LDD  R27,Y+18+1
0007b3 91ed      	LD   R30,X+
0007b4 91fd      	LD   R31,X+
0007b5 d07b      	RCALL __LOADLOCR6
0007b6 966a      	ADIW R28,26
0007b7 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0007b8 92ff      	PUSH R15
0007b9 2ef8      	MOV  R15,R24
0007ba 9726      	SBIW R28,6
0007bb d070      	RCALL __SAVELOCR4
0007bc 01de      	MOVW R26,R28
0007bd 961c      	ADIW R26,12
0007be d080      	RCALL __ADDW2R15
0007bf d0c2      	RCALL __GETW1P
0007c0 9730      	SBIW R30,0
0007c1 f419      	BRNE _0x2000093
0007c2 efef      	LDI  R30,LOW(65535)
0007c3 efff      	LDI  R31,HIGH(65535)
0007c4 c024      	RJMP _0x2060001
                 _0x2000093:
0007c5 01de      	MOVW R26,R28
0007c6 9616      	ADIW R26,6
0007c7 d077      	RCALL __ADDW2R15
0007c8 018d      	MOVW R16,R26
0007c9 01de      	MOVW R26,R28
0007ca 961c      	ADIW R26,12
0007cb d073      	RCALL __ADDW2R15
0007cc 91ed      	LD   R30,X+
0007cd 91fd      	LD   R31,X+
0007ce 83ee      	STD  Y+6,R30
0007cf 83ff      	STD  Y+6+1,R31
0007d0 e0e0      	LDI  R30,LOW(0)
0007d1 87e8      	STD  Y+8,R30
0007d2 87e9      	STD  Y+8+1,R30
0007d3 01de      	MOVW R26,R28
0007d4 961a      	ADIW R26,10
0007d5 d069      	RCALL __ADDW2R15
0007d6 91ed      	LD   R30,X+
0007d7 91fd      	LD   R31,X+
0007d8 93fa      	ST   -Y,R31
0007d9 93ea      	ST   -Y,R30
0007da 931a      	ST   -Y,R17
0007db 930a      	ST   -Y,R16
0007dc e6ef      	LDI  R30,LOW(_put_buff_G100)
0007dd e0f5      	LDI  R31,HIGH(_put_buff_G100)
0007de 93fa      	ST   -Y,R31
0007df 93ea      	ST   -Y,R30
0007e0 01de      	MOVW R26,R28
0007e1 961a      	ADIW R26,10
0007e2 ddc9      	RCALL __print_G100
0007e3 019f      	MOVW R18,R30
0007e4 81ae      	LDD  R26,Y+6
0007e5 81bf      	LDD  R27,Y+6+1
0007e6 e0e0      	LDI  R30,LOW(0)
0007e7 93ec      	ST   X,R30
0007e8 01f9      	MOVW R30,R18
                 _0x2060001:
0007e9 d049      	RCALL __LOADLOCR4
0007ea 962a      	ADIW R28,10
0007eb 90ff      	POP  R15
0007ec 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcpy:
                 ; .FSTART _strcpy
0007ed 93ba      	ST   -Y,R27
0007ee 93aa      	ST   -Y,R26
0007ef 91e9          ld   r30,y+
0007f0 91f9          ld   r31,y+
0007f1 91a9          ld   r26,y+
0007f2 91b9          ld   r27,y+
0007f3 01cd          movw r24,r26
                 strcpy0:
0007f4 9161          ld   r22,z+
0007f5 936d          st   x+,r22
0007f6 2366          tst  r22
0007f7 f7e1          brne strcpy0
0007f8 01fc          movw r30,r24
0007f9 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0007fa 93ba      	ST   -Y,R27
0007fb 93aa      	ST   -Y,R26
0007fc 91a9          ld   r26,y+
0007fd 91b9          ld   r27,y+
0007fe 27ee          clr  r30
0007ff 27ff          clr  r31
                 strlen0:
000800 916d          ld   r22,x+
000801 2366          tst  r22
000802 f011          breq strlen1
000803 9631          adiw r30,1
000804 cffb          rjmp strlen0
                 strlen1:
000805 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000806 93ba      	ST   -Y,R27
000807 93aa      	ST   -Y,R26
000808 27aa          clr  r26
000809 27bb          clr  r27
00080a 91e9          ld   r30,y+
00080b 91f9          ld   r31,y+
                 strlenf0:
00080c 9005      	lpm  r0,z+
00080d 2000          tst  r0
00080e f011          breq strlenf1
00080f 9611          adiw r26,1
000810 cffb          rjmp strlenf0
                 strlenf1:
000811 01fd          movw r30,r26
000812 9508          ret
                 ; .FEND
                 _strstr:
                 ; .FSTART _strstr
000813 93ba      	ST   -Y,R27
000814 93aa      	ST   -Y,R26
000815 81aa          ldd  r26,y+2
000816 81bb          ldd  r27,y+3
000817 01cd          movw r24,r26
                 strstr0:
000818 81e8          ld   r30,y
000819 81f9          ldd  r31,y+1
                 strstr1:
00081a 9171          ld   r23,z+
00081b 2377          tst  r23
00081c f411          brne strstr2
00081d 01fc          movw r30,r24
00081e c009          rjmp strstr3
                 strstr2:
00081f 916d          ld   r22,x+
000820 1767          cp   r22,r23
000821 f3c1          breq strstr1
000822 9601          adiw r24,1
000823 01dc          movw r26,r24
000824 2366          tst  r22
000825 f791          brne strstr0
000826 27ee          clr  r30
000827 27ff          clr  r31
                 strstr3:
000828 9624      	ADIW R28,4
000829 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 _millis:
000497           	.BYTE 0x4
                 _previousMillis:
00049b           	.BYTE 0x4
                 
                 	.CSEG
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00082a 935a      	ST   -Y,R21
                 __SAVELOCR5:
00082b 934a      	ST   -Y,R20
                 __SAVELOCR4:
00082c 933a      	ST   -Y,R19
                 __SAVELOCR3:
00082d 932a      	ST   -Y,R18
                 __SAVELOCR2:
00082e 931a      	ST   -Y,R17
00082f 930a      	ST   -Y,R16
000830 9508      	RET
                 
                 __LOADLOCR6:
000831 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000832 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000833 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000834 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000835 8119      	LDD  R17,Y+1
000836 8108      	LD   R16,Y
000837 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000838 0fac      	ADD  R26,R28
000839 1fbd      	ADC  R27,R29
                 __INITLOC0:
00083a 9005      	LPM  R0,Z+
00083b 920d      	ST   X+,R0
00083c 958a      	DEC  R24
00083d f7e1      	BRNE __INITLOC0
00083e 9508      	RET
                 
                 __ADDW2R15:
00083f 2400      	CLR  R0
000840 0daf      	ADD  R26,R15
000841 1db0      	ADC  R27,R0
000842 9508      	RET
                 
                 __ADDD21:
000843 0fae      	ADD  R26,R30
000844 1fbf      	ADC  R27,R31
000845 1f86      	ADC  R24,R22
000846 1f97      	ADC  R25,R23
000847 9508      	RET
                 
                 __SUBD12:
000848 1bea      	SUB  R30,R26
000849 0bfb      	SBC  R31,R27
00084a 0b68      	SBC  R22,R24
00084b 0b79      	SBC  R23,R25
00084c 9508      	RET
                 
                 __ANEGD1:
00084d 95f0      	COM  R31
00084e 9560      	COM  R22
00084f 9570      	COM  R23
000850 95e1      	NEG  R30
000851 4fff      	SBCI R31,-1
000852 4f6f      	SBCI R22,-1
000853 4f7f      	SBCI R23,-1
000854 9508      	RET
                 
                 __CWD1:
000855 2f6f      	MOV  R22,R31
000856 0f66      	ADD  R22,R22
000857 0b66      	SBC  R22,R22
000858 2f76      	MOV  R23,R22
000859 9508      	RET
                 
                 __DIVD21U:
00085a 933f      	PUSH R19
00085b 934f      	PUSH R20
00085c 935f      	PUSH R21
00085d 2400      	CLR  R0
00085e 2411      	CLR  R1
00085f 01a0      	MOVW R20,R0
000860 e230      	LDI  R19,32
                 __DIVD21U1:
000861 0faa      	LSL  R26
000862 1fbb      	ROL  R27
000863 1f88      	ROL  R24
000864 1f99      	ROL  R25
000865 1c00      	ROL  R0
000866 1c11      	ROL  R1
000867 1f44      	ROL  R20
000868 1f55      	ROL  R21
000869 1a0e      	SUB  R0,R30
00086a 0a1f      	SBC  R1,R31
00086b 0b46      	SBC  R20,R22
00086c 0b57      	SBC  R21,R23
00086d f428      	BRCC __DIVD21U2
00086e 0e0e      	ADD  R0,R30
00086f 1e1f      	ADC  R1,R31
000870 1f46      	ADC  R20,R22
000871 1f57      	ADC  R21,R23
000872 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000873 60a1      	SBR  R26,1
                 __DIVD21U3:
000874 953a      	DEC  R19
000875 f759      	BRNE __DIVD21U1
000876 01fd      	MOVW R30,R26
000877 01bc      	MOVW R22,R24
000878 01d0      	MOVW R26,R0
000879 01ca      	MOVW R24,R20
00087a 915f      	POP  R21
00087b 914f      	POP  R20
00087c 913f      	POP  R19
00087d 9508      	RET
                 
                 __MODD21U:
00087e dfdb      	RCALL __DIVD21U
00087f 01fd      	MOVW R30,R26
000880 01bc      	MOVW R22,R24
000881 9508      	RET
                 
                 __GETW1P:
000882 91ed      	LD   R30,X+
000883 91fc      	LD   R31,X
000884 9711      	SBIW R26,1
000885 9508      	RET
                 
                 __GETD1P:
000886 91ed      	LD   R30,X+
000887 91fd      	LD   R31,X+
000888 916d      	LD   R22,X+
000889 917c      	LD   R23,X
00088a 9713      	SBIW R26,3
00088b 9508      	RET
                 
                 __GETD1P_INC:
00088c 91ed      	LD   R30,X+
00088d 91fd      	LD   R31,X+
00088e 916d      	LD   R22,X+
00088f 917d      	LD   R23,X+
000890 9508      	RET
                 
                 __PUTDP1_DEC:
000891 937e      	ST   -X,R23
000892 936e      	ST   -X,R22
000893 93fe      	ST   -X,R31
000894 93ee      	ST   -X,R30
000895 9508      	RET
                 
                 __GETW1Z:
000896 920f      	PUSH R0
000897 9001      	LD   R0,Z+
000898 81f0      	LD   R31,Z
000899 2de0      	MOV  R30,R0
00089a 900f      	POP  R0
00089b 9508      	RET
                 
                 __GETW2X:
00089c 920f      	PUSH R0
00089d 900d      	LD   R0,X+
00089e 91bc      	LD   R27,X
00089f 2da0      	MOV  R26,R0
0008a0 900f      	POP  R0
0008a1 9508      	RET
                 
                 __GETD1S0:
0008a2 81e8      	LD   R30,Y
0008a3 81f9      	LDD  R31,Y+1
0008a4 816a      	LDD  R22,Y+2
0008a5 817b      	LDD  R23,Y+3
0008a6 9508      	RET
                 
                 __GETD2S0:
0008a7 81a8      	LD   R26,Y
0008a8 81b9      	LDD  R27,Y+1
0008a9 818a      	LDD  R24,Y+2
0008aa 819b      	LDD  R25,Y+3
0008ab 9508      	RET
                 
                 __PUTD1S0:
0008ac 83e8      	ST   Y,R30
0008ad 83f9      	STD  Y+1,R31
0008ae 836a      	STD  Y+2,R22
0008af 837b      	STD  Y+3,R23
0008b0 9508      	RET
                 
                 __PUTPARD1:
0008b1 937a      	ST   -Y,R23
0008b2 936a      	ST   -Y,R22
0008b3 93fa      	ST   -Y,R31
0008b4 93ea      	ST   -Y,R30
0008b5 9508      	RET
                 
                 __CPD10:
0008b6 9730      	SBIW R30,0
0008b7 4060      	SBCI R22,0
0008b8 4070      	SBCI R23,0
0008b9 9508      	RET
                 
                 __CPD12:
0008ba 17ea      	CP   R30,R26
0008bb 07fb      	CPC  R31,R27
0008bc 0768      	CPC  R22,R24
0008bd 0779      	CPC  R23,R25
0008be 9508      	RET
                 
                 __CPD21:
0008bf 17ae      	CP   R26,R30
0008c0 07bf      	CPC  R27,R31
0008c1 0786      	CPC  R24,R22
0008c2 0797      	CPC  R25,R23
0008c3 9508      	RET
                 
                 _delay_ms:
0008c4 9610      	adiw r26,0
0008c5 f039      	breq __delay_ms1
                 __delay_ms0:
0008c6 95a8      	wdr
                +
0008c7 ec8d     +LDI R24 , LOW ( 0xACD )
0008c8 e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
0008c9 9701     +SBIW R24 , 1
0008ca f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
0008cb 9711      	sbiw r26,1
0008cc f7c9      	brne __delay_ms0
                 __delay_ms1:
0008cd 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  28 r1 :   5 r2 :   0 r3 :   0 r4 :   1 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:  15 
r16:  46 r17:  37 r18:  43 r19:  19 r20:  25 r21:  31 r22:  68 r23:  53 
r24:  42 r25:  15 r26: 187 r27: 120 r28:  70 r29:   2 r30: 486 r31: 243 
x  :  55 y  : 469 z  :  21 
Registers used: 23 out of 35 (65.7%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   8 add   :   7 
adiw  :  59 and   :   0 andi  :   9 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  34 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  10 
brlt  :   0 brmi  :   1 brne  :  44 brpl  :   1 brsh  :   7 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   3 
cbi   :   4 cbr   :   1 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  38 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   3 
cp    :  10 cpc   :  11 cpi   :  48 cpse  :   0 dec   :   3 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :  10 ijmp  :   0 
in    :   2 inc   :   0 jmp   :  27 ld    :  57 ldd   : 170 ldi   : 306 
lds   :  28 lpm   :  12 lsl   :   1 lsr   :   0 mov   :  23 movw  :  71 
mul   :   2 muls  :   0 mulsu :   0 neg   :   1 nop   :   0 or    :   1 
ori   :   7 out   :  20 pop   :  10 push  :  10 rcall : 119 ret   :  43 
reti  :   1 rjmp  :  90 rol   :   7 ror   :   0 sbc   :   7 sbci  :  25 
sbi   :   3 sbic  :   0 sbis  :   0 sbiw  :  42 sbr   :   1 sbrc  :   3 
sbrs  :  15 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 233 std   :  74 sts   :  20 sub   :   2 subi  :  38 swap  :   0 
tst   :   7 wdr   :   8 
Instructions used: 61 out of 116 (52.6%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00119c   3766    742   4508   32768  13.8%
[.dseg] 0x000100 0x00049f      0    415    415    2048  20.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
